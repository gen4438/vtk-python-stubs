"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkRenderingContext2D as __vtkmodules_vtkRenderingContext2D

class vtkPlot3D(__vtkmodules_vtkRenderingContext2D.vtkContextItem):
    """
    vtkPlot3D - Abstract class for 3D plots.
    
    Superclass: vtkContextItem
    
    The base class for all plot types used in vtkChart derived charts.
    
    @sa
    vtkPlot3DPoints vtkPlot3DLine vtkPlot3DBar vtkChart vtkChartXY
    """
    def GetChart(self):
        """
        V.GetChart() -> vtkChartXYZ
        C++: virtual vtkChartXYZ *GetChart()
        
        Get/set the chart for this plot.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetPen(self):
        """
        V.GetPen() -> vtkPen
        C++: vtkPen *GetPen()
        
        Set/get the vtkPen object that controls how this plot draws
        (out)lines.
        """
        ...
    
    def GetSelection(self):
        """
        V.GetSelection() -> vtkIdTypeArray
        C++: virtual vtkIdTypeArray *GetSelection()
        
        Set/get the selection array for the plot.
        """
        ...
    
    def GetSelectionPen(self):
        """
        V.GetSelectionPen() -> vtkPen
        C++: vtkPen *GetSelectionPen()
        
        Set/get the vtkPen object that controls how this plot draws
        (out)lines.
        """
        ...
    
    def GetXAxisLabel(self):
        """
        V.GetXAxisLabel() -> string
        C++: std::string GetXAxisLabel()
        
        Get the label for the X axis.
        """
        ...
    
    def GetYAxisLabel(self):
        """
        V.GetYAxisLabel() -> string
        C++: std::string GetYAxisLabel()
        
        Get the label for the Y axis.
        """
        ...
    
    def GetZAxisLabel(self):
        """
        V.GetZAxisLabel() -> string
        C++: std::string GetZAxisLabel()
        
        Get the label for the Z axis.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkPlot3D
        C++: vtkPlot3D *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkPlot3D
        C++: static vtkPlot3D *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetChart(self, vtkChartXYZ):
        """
        V.SetChart(vtkChartXYZ)
        C++: virtual void SetChart(vtkChartXYZ *chart)
        
        Get/set the chart for this plot.
        """
        ...
    
    def SetColors(self, vtkDataArray):
        """
        V.SetColors(vtkDataArray)
        C++: virtual void SetColors(vtkDataArray *colorArr)
        
        Set the color of each point in the plot.  The input is a single
        component scalar array.  The values of this array will be passed
        through a lookup table to generate the color for each data point
        in the plot.
        """
        ...
    
    def SetInputData(self, vtkTable):
        """
        V.SetInputData(vtkTable)
        C++: virtual void SetInputData(vtkTable *input)
        V.SetInputData(vtkTable, string, string, string)
        C++: virtual void SetInputData(vtkTable *input,
            const vtkStdString &xName, const vtkStdString &yName,
            const vtkStdString &zName)
        V.SetInputData(vtkTable, string, string, string, string)
        C++: virtual void SetInputData(vtkTable *input,
            const vtkStdString &xName, const vtkStdString &yName,
            const vtkStdString &zName, const vtkStdString &colorName)
        V.SetInputData(vtkTable, int, int, int)
        C++: virtual void SetInputData(vtkTable *input, vtkIdType xColumn,
             vtkIdType yColumn, vtkIdType zColumn)
        
        Set the input to the plot.
        """
        ...
    
    def SetPen(self, vtkPen):
        """
        V.SetPen(vtkPen)
        C++: void SetPen(vtkPen *pen)
        
        Set/get the vtkPen object that controls how this plot draws
        (out)lines.
        """
        ...
    
    def SetSelection(self, vtkIdTypeArray):
        """
        V.SetSelection(vtkIdTypeArray)
        C++: virtual void SetSelection(vtkIdTypeArray *id)
        
        Set/get the selection array for the plot.
        """
        ...
    
    def SetSelectionPen(self, vtkPen):
        """
        V.SetSelectionPen(vtkPen)
        C++: void SetSelectionPen(vtkPen *pen)
        
        Set/get the vtkPen object that controls how this plot draws
        (out)lines.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


