"""
This type stub file was generated by pyright.
"""

from .vtkPlot import vtkPlot

class vtkPlotStacked(vtkPlot):
    """
    vtkPlotStacked - Class for drawing an stacked polygon plot given an
    X, Ybase, Yextent  in a vtkTable.
    
    Superclass: vtkPlot
    """
    def GetBounds(self, p_float=..., p_float=..., p_float=..., p_float=...):
        """
        V.GetBounds([float, float, float, float])
        C++: void GetBounds(double bounds[4]) override;
        
        Get the bounds for this mapper as (Xmin,Xmax,Ymin,Ymax).
        """
        ...
    
    def GetColor(self, p_float=..., p_float=..., p_float=...):
        """
        V.GetColor([float, float, float])
        C++: void GetColor(double rgb[3]) override;
        
        Set the plot color
        """
        ...
    
    def GetColorSeries(self):
        """
        V.GetColorSeries() -> vtkColorSeries
        C++: vtkColorSeries *GetColorSeries()
        
        Get the color series used if when this is a stacked bar plot.
        """
        ...
    
    def GetLabels(self):
        """
        V.GetLabels() -> vtkStringArray
        C++: vtkStringArray *GetLabels() override;
        
        Get the plot labels.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetUnscaledInputBounds(self, p_float=..., p_float=..., p_float=..., p_float=...):
        """
        V.GetUnscaledInputBounds([float, float, float, float])
        C++: void GetUnscaledInputBounds(double bounds[4]) override;
        
        Get the unscaled input bounds for this mapper as
        (Xmin,Xmax,Ymin,Ymax). See vtkPlot for more information.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkPlotStacked
        C++: vtkPlotStacked *NewInstance()
        """
        ...
    
    def Paint(self, vtkContext2D):
        """
        V.Paint(vtkContext2D) -> bool
        C++: bool Paint(vtkContext2D *painter) override;
        
        Paint event for the Stacked plot, called whenever the chart needs
        to be drawn
        """
        ...
    
    def PaintLegend(self, vtkContext2D, vtkRectf, p_int):
        """
        V.PaintLegend(vtkContext2D, vtkRectf, int) -> bool
        C++: bool PaintLegend(vtkContext2D *painter, const vtkRectf &rect,
             int legendIndex) override;
        
        Paint legend event for the Stacked plot, called whenever the
        legend needs the plot items symbol/mark/line drawn. A rect is
        supplied with the lower left corner of the rect (elements 0 and
        1) and with width x height (elements 2 and 3). The plot can
        choose how to fill the space supplied.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkPlotStacked
        C++: static vtkPlotStacked *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SelectPoints(self, vtkVector2f, vtkVector2f_1):
        """
        V.SelectPoints(vtkVector2f, vtkVector2f) -> bool
        C++: bool SelectPoints(const vtkVector2f &min,
            const vtkVector2f &max) override;
        
        Select all points in the specified rectangle.
        """
        ...
    
    def SetColor(self, p_int, p_int_1, p_int_2, p_int_3):
        """
        V.SetColor(int, int, int, int)
        C++: void SetColor(unsigned char r, unsigned char g,
            unsigned char b, unsigned char a) override;
        V.SetColor(float, float, float)
        C++: void SetColor(double r, double g, double b) override;
        
        Set the plot color
        """
        ...
    
    def SetColorSeries(self, vtkColorSeries):
        """
        V.SetColorSeries(vtkColorSeries)
        C++: void SetColorSeries(vtkColorSeries *colorSeries)
        
        Set the color series to use if this becomes a stacked bar plot.
        """
        ...
    
    def SetInputArray(self, p_int, string):
        """
        V.SetInputArray(int, string)
        C++: void SetInputArray(int index, const vtkStdString &name)
            override;
        
        When used to set additional arrays, stacked bars are created.
        """
        ...
    
    def Update(self):
        """
        V.Update()
        C++: void Update() override;
        
        Perform any updates to the item that may be necessary before
        rendering. The scene should take care of calling this on all
        items before their Paint function is invoked.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


