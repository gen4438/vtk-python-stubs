"""
This type stub file was generated by pyright.
"""

from .vtkWidgetRepresentation import vtkWidgetRepresentation

class vtkParallelopipedRepresentation(vtkWidgetRepresentation):
    """
    vtkParallelopipedRepresentation - Default representation for
    vtkParallelopipedWidget
    
    Superclass: vtkWidgetRepresentation
    
    This class provides the default geometrical representation for
    vtkParallelopipedWidget. As a result of interactions of the widget,
    this representation can take on of the following shapes:
    
    1) A parallelopiped. (8 handles, 6 faces)
    
    2) Paralleopiped with a chair depression on any one handle. (A chair
    is a depression on one of the handles that carves inwards so as to
    allow the user to visualize cuts in the volume). (14 handles, 9
    faces).
    
    @sa
    vtkParallelopipedWidget
    """
    def BuildRepresentation(self):
        """
        V.BuildRepresentation()
        C++: void BuildRepresentation() override;
        
        This actually constructs the geometry of the widget from the
        various data parameters.
        """
        ...
    
    def ComputeInteractionState(self, p_int, p_int_1, p_int_2):
        """
        V.ComputeInteractionState(int, int, int) -> int
        C++: int ComputeInteractionState(int X, int Y, int modify=0)
            override;
        
        Given and x-y display coordinate, compute the interaction state
        of the widget.
        """
        ...
    
    def GetActors(self, vtkPropCollection):
        """
        V.GetActors(vtkPropCollection)
        C++: void GetActors(vtkPropCollection *pc) override;
        
        Methods to satisfy the superclass.
        """
        ...
    
    def GetBoundingPlanes(self, vtkPlaneCollection):
        """
        V.GetBoundingPlanes(vtkPlaneCollection)
        C++: void GetBoundingPlanes(vtkPlaneCollection *pc)
        
        Get the bounding planes of the object. The first 6 planes will be
        bounding planes of the parallelopiped. If in chair mode, three
        additional planes will be present. The last three planes will be
        those of the chair. The normals of all the planes will point into
        the object.
        """
        ...
    
    def GetBounds(self):
        """
        V.GetBounds() -> (float, float, float, float, float, float)
        C++: double *GetBounds() override;
        
        The parallelopiped polydata.
        """
        ...
    
    def GetFaceProperty(self):
        """
        V.GetFaceProperty() -> vtkProperty
        C++: virtual vtkProperty *GetFaceProperty()
        
        Get the face properties. When a face is being translated, the
        face gets highlighted with the SelectedFaceProperty.
        """
        ...
    
    def GetHandleProperty(self):
        """
        V.GetHandleProperty() -> vtkProperty
        C++: virtual vtkProperty *GetHandleProperty()
        
        Set/Get the handle properties.
        """
        ...
    
    def GetHandleRepresentation(self, p_int):
        """
        V.GetHandleRepresentation(int) -> vtkHandleRepresentation
        C++: vtkHandleRepresentation *GetHandleRepresentation(int index)
        """
        ...
    
    def GetHoveredHandleProperty(self):
        """
        V.GetHoveredHandleProperty() -> vtkProperty
        C++: virtual vtkProperty *GetHoveredHandleProperty()
        
        Set/Get the handle properties.
        """
        ...
    
    def GetMinimumThickness(self):
        """
        V.GetMinimumThickness() -> float
        C++: virtual double GetMinimumThickness()
        
        Minimum thickness for the parallelopiped. User interactions
        cannot make any individual axis of the parallopiped thinner than
        this value. Default is 0.05 expressed as a fraction of the
        diagonal of the bounding box used in the PlaceWidget()
        invocation.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard methods for instances of this class.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard methods for instances of this class.
        """
        ...
    
    def GetOutlineProperty(self):
        """
        V.GetOutlineProperty() -> vtkProperty
        C++: virtual vtkProperty *GetOutlineProperty()
        
        Get the outline properties. These are the properties with which
        the parallelopiped wireframe is rendered.
        """
        ...
    
    def GetPolyData(self, vtkPolyData):
        """
        V.GetPolyData(vtkPolyData)
        C++: void GetPolyData(vtkPolyData *pd)
        
        The parallelopiped polydata.
        """
        ...
    
    def GetSelectedFaceProperty(self):
        """
        V.GetSelectedFaceProperty() -> vtkProperty
        C++: virtual vtkProperty *GetSelectedFaceProperty()
        
        Get the face properties. When a face is being translated, the
        face gets highlighted with the SelectedFaceProperty.
        """
        ...
    
    def GetSelectedHandleProperty(self):
        """
        V.GetSelectedHandleProperty() -> vtkProperty
        C++: virtual vtkProperty *GetSelectedHandleProperty()
        
        Set/Get the handle properties.
        """
        ...
    
    def GetSelectedOutlineProperty(self):
        """
        V.GetSelectedOutlineProperty() -> vtkProperty
        C++: virtual vtkProperty *GetSelectedOutlineProperty()
        
        Get the outline properties. These are the properties with which
        the parallelopiped wireframe is rendered.
        """
        ...
    
    def HandlesOff(self):
        """
        V.HandlesOff()
        C++: void HandlesOff()
        
        Turns the visibility of the handles on/off. Sometimes they may
        get in the way of visualization.
        """
        ...
    
    def HandlesOn(self):
        """
        V.HandlesOn()
        C++: void HandlesOn()
        
        Turns the visibility of the handles on/off. Sometimes they may
        get in the way of visualization.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard methods for instances of this class.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard methods for instances of this class.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkParallelopipedRepresentation
        C++: vtkParallelopipedRepresentation *NewInstance()
        
        Standard methods for instances of this class.
        """
        ...
    
    def PlaceWidget(self, *args, **kwargs):
        """
        V.PlaceWidget([[float, float, float], [float, float, float],
            [float, float, float], [float, float, float], [float, float,
            float], [float, float, float], [float, float, float], [float,
            float, float]])
        C++: virtual void PlaceWidget(double corners[8][3])
        V.PlaceWidget([float, float, float, float, float, float])
        C++: void PlaceWidget(double bounds[6]) override;
        
        Place the widget in the scene. You can use either of the two APIs
        :
        1) PlaceWidget( double bounds[6] ) Creates a cuboid conforming to
        the said bounds.
        2) PlaceWidget( double corners[8][3] ) Creates a parallelopiped
           with corners specified. The order in which corners are
           specified must obey the following rule: Corner 0 - 1 - 2 - 3 -
        0  forms a face Corner 4 - 5 - 6 - 7 - 4  forms a face Corner 0 -
        4 - 5 - 1 - 0  forms a face Corner 1 - 5 - 6 - 2 - 1  forms a
           face Corner 2 - 6 - 7 - 3 - 2  forms a face Corner 3 - 7 - 4 -
        0 - 3  forms a face
        """
        ...
    
    def PositionHandles(self):
        """
        V.PositionHandles()
        C++: virtual void PositionHandles()
        
        Synchronize the parallelopiped handle positions with the
        Polygonal datastructure.
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: void ReleaseGraphicsResources(vtkWindow *w) override;
        
        Methods required by vtkProp superclass.
        """
        ...
    
    def RenderOpaqueGeometry(self, vtkViewport):
        """
        V.RenderOpaqueGeometry(vtkViewport) -> int
        C++: int RenderOpaqueGeometry(vtkViewport *viewport) override;
        
        Methods required by vtkProp superclass.
        """
        ...
    
    def RenderOverlay(self, vtkViewport):
        """
        V.RenderOverlay(vtkViewport) -> int
        C++: int RenderOverlay(vtkViewport *viewport) override;
        
        Methods required by vtkProp superclass.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkParallelopipedRepresentation
        C++: static vtkParallelopipedRepresentation *SafeDownCast(
            vtkObjectBase *o)
        
        Standard methods for instances of this class.
        """
        ...
    
    def Scale(self, p_int, p_int_1):
        """
        V.Scale(int, int)
        C++: virtual void Scale(int X, int Y)
        """
        ...
    
    def SetHandleProperty(self, vtkProperty):
        """
        V.SetHandleProperty(vtkProperty)
        C++: virtual void SetHandleProperty(vtkProperty *)
        
        Set/Get the handle properties.
        """
        ...
    
    def SetHandleRepresentation(self, vtkHandleRepresentation):
        """
        V.SetHandleRepresentation(vtkHandleRepresentation)
        C++: void SetHandleRepresentation(vtkHandleRepresentation *handle)
        """
        ...
    
    def SetHoveredHandleProperty(self, vtkProperty):
        """
        V.SetHoveredHandleProperty(vtkProperty)
        C++: virtual void SetHoveredHandleProperty(vtkProperty *)
        
        Set/Get the handle properties.
        """
        ...
    
    def SetInteractionState(self, p_int):
        """
        V.SetInteractionState(int)
        C++: virtual void SetInteractionState(int _arg)
        
        The interaction state may be set from a widget (e.g.,
        PointWidget) or other object. This controls how the interaction
        with the widget proceeds.
        """
        ...
    
    def SetMinimumThickness(self, p_float):
        """
        V.SetMinimumThickness(float)
        C++: virtual void SetMinimumThickness(double _arg)
        
        Minimum thickness for the parallelopiped. User interactions
        cannot make any individual axis of the parallopiped thinner than
        this value. Default is 0.05 expressed as a fraction of the
        diagonal of the bounding box used in the PlaceWidget()
        invocation.
        """
        ...
    
    def SetSelectedHandleProperty(self, vtkProperty):
        """
        V.SetSelectedHandleProperty(vtkProperty)
        C++: virtual void SetSelectedHandleProperty(vtkProperty *)
        
        Set/Get the handle properties.
        """
        ...
    
    def Translate(self, p_float=..., p_float=..., p_float=...):
        """
        V.Translate([float, float, float])
        C++: virtual void Translate(double translation[3])
        V.Translate(int, int)
        C++: virtual void Translate(int X, int Y)
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    ChairMode = ...
    Inside = ...
    Outside = ...
    RequestChairMode = ...
    RequestResizeParallelopiped = ...
    RequestResizeParallelopipedAlongAnAxis = ...
    RequestRotateParallelopiped = ...
    RequestScaleParallelopiped = ...
    RequestTranslateParallelopiped = ...
    ResizingParallelopiped = ...
    ResizingParallelopipedAlongAnAxis = ...
    RotatingParallelopiped = ...
    ScalingParallelopiped = ...
    TranslatingParallelopiped = ...
    _InteractionState = ...
    __dict__ = ...
    __vtkname__ = ...


