"""
This type stub file was generated by pyright.
"""

from .vtkWidgetRepresentation import vtkWidgetRepresentation

class vtkResliceCursorRepresentation(vtkWidgetRepresentation):
    """
    vtkResliceCursorRepresentation - represent the vtkResliceCursorWidget
    
    Superclass: vtkWidgetRepresentation
    
    This class is the base class for the reslice cursor representation
    subclasses. It represents a cursor that may be interactively
    translated, rotated through an image and perform thick / thick
    reformats.
    @sa
    vtkResliceCursorLineRepresentation
    vtkResliceCursorThickLineRepresentation vtkResliceCursorWidget
    vtkResliceCursor
    """
    def ActivateText(self, p_int):
        """
        V.ActivateText(int)
        C++: void ActivateText(int)
        
        INTERNAL - Do not use. Internal methods used by the widget to
        manage text displays for annotations.
        """
        ...
    
    def BuildRepresentation(self):
        """
        V.BuildRepresentation()
        C++: void BuildRepresentation() override;
        
        These are methods that satisfy vtkWidgetRepresentation's API.
        """
        ...
    
    def DisplayTextOff(self):
        """
        V.DisplayTextOff()
        C++: virtual void DisplayTextOff()
        
        Enable/disable text display of window-level, image coordinates
        and scalar values in a render window.
        """
        ...
    
    def DisplayTextOn(self):
        """
        V.DisplayTextOn()
        C++: virtual void DisplayTextOn()
        
        Enable/disable text display of window-level, image coordinates
        and scalar values in a render window.
        """
        ...
    
    def GetColorMap(self):
        """
        V.GetColorMap() -> vtkImageMapToColors
        C++: virtual vtkImageMapToColors *GetColorMap()
        
        Convenience method to get the vtkImageMapToColors filter used by
        this widget.  The user can properly render other transparent
        actors in a scene by calling the filter's SetOutputFormatToRGB
        and PassAlphaToOutputOff.
        """
        ...
    
    def GetCursorAlgorithm(self):
        """
        V.GetCursorAlgorithm() -> vtkResliceCursorPolyDataAlgorithm
        C++: virtual vtkResliceCursorPolyDataAlgorithm *GetCursorAlgorithm(
            )
        
        Get the underlying cursor source.
        """
        ...
    
    def GetDisplayText(self):
        """
        V.GetDisplayText() -> int
        C++: virtual vtkTypeBool GetDisplayText()
        
        Enable/disable text display of window-level, image coordinates
        and scalar values in a render window.
        """
        ...
    
    def GetImageActor(self):
        """
        V.GetImageActor() -> vtkImageActor
        C++: virtual vtkImageActor *GetImageActor()
        
        Get the displayed image actor
        """
        ...
    
    def GetLevel(self):
        """
        V.GetLevel() -> float
        C++: double GetLevel()
        
        Set/Get the current window and level values.  SetWindowLevel
        should only be called after SetInput.  If a shared lookup table
        is being used, a callback is required to update the window level
        values without having to update the lookup table again.
        """
        ...
    
    def GetLookupTable(self):
        """
        V.GetLookupTable() -> vtkScalarsToColors
        C++: virtual vtkScalarsToColors *GetLookupTable()
        
        Set/Get the internal lookuptable (lut) to one defined by the
        user, or, alternatively, to the lut of another Reslice cusror
        widget.  In this way, a set of three orthogonal planes can share
        the same lut so that window-levelling is performed uniformly
        among planes.  The default internal lut can be re- set/allocated
        by setting to 0 (nullptr).
        """
        ...
    
    def GetManipulationMode(self):
        """
        V.GetManipulationMode() -> int
        C++: virtual int GetManipulationMode()
        
        INTERNAL - Do not use Set the manipulation mode. This is done by
        the widget
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard VTK methods.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard VTK methods.
        """
        ...
    
    def GetPlaneSource(self):
        """
        V.GetPlaneSource() -> vtkPlaneSource
        C++: virtual vtkPlaneSource *GetPlaneSource()
        
        Get the plane source on which the texture (the thin/thick
        resliced image is displayed)
        """
        ...
    
    def GetReslice(self):
        """
        V.GetReslice() -> vtkImageAlgorithm
        C++: virtual vtkImageAlgorithm *GetReslice()
        
        Get the current reslice class and reslice axes
        """
        ...
    
    def GetResliceAxes(self):
        """
        V.GetResliceAxes() -> vtkMatrix4x4
        C++: virtual vtkMatrix4x4 *GetResliceAxes()
        
        Get the current reslice class and reslice axes
        """
        ...
    
    def GetResliceCursor(self):
        """
        V.GetResliceCursor() -> vtkResliceCursor
        C++: virtual vtkResliceCursor *GetResliceCursor()
        """
        ...
    
    def GetRestrictPlaneToVolume(self):
        """
        V.GetRestrictPlaneToVolume() -> int
        C++: virtual vtkTypeBool GetRestrictPlaneToVolume()
        
        Make sure that the resliced image remains within the volume.
        Default is On.
        """
        ...
    
    def GetShowReslicedImage(self):
        """
        V.GetShowReslicedImage() -> int
        C++: virtual vtkTypeBool GetShowReslicedImage()
        
        Show the resliced image ?
        """
        ...
    
    def GetTextProperty(self):
        """
        V.GetTextProperty() -> vtkTextProperty
        C++: vtkTextProperty *GetTextProperty()
        
        Set/Get the text property for the image data and window-level
        annotation.
        """
        ...
    
    def GetThicknessLabelFormat(self):
        """
        V.GetThicknessLabelFormat() -> string
        C++: virtual char *GetThicknessLabelFormat()
        
        Specify the format to use for labelling the distance. Note that
        an empty string results in no label, or a format string without a
        "%" character will not print the thickness value.
        """
        ...
    
    def GetThicknessLabelPosition(self):
        """
        V.GetThicknessLabelPosition() -> (float, ...)
        C++: virtual double *GetThicknessLabelPosition()
        V.GetThicknessLabelPosition([float, float, float])
        C++: virtual void GetThicknessLabelPosition(double pos[3])
        
        Get the position of the widget's label in display coordinates.
        """
        ...
    
    def GetThicknessLabelText(self):
        """
        V.GetThicknessLabelText() -> string
        C++: virtual char *GetThicknessLabelText()
        
        Get the text shown in the widget's label.
        """
        ...
    
    def GetTolerance(self):
        """
        V.GetTolerance() -> int
        C++: virtual int GetTolerance()
        
        The tolerance representing the distance to the representation (in
        pixels) in which the cursor is considered near enough to the
        representation to be active.
        """
        ...
    
    def GetToleranceMaxValue(self):
        """
        V.GetToleranceMaxValue() -> int
        C++: virtual int GetToleranceMaxValue()
        
        The tolerance representing the distance to the representation (in
        pixels) in which the cursor is considered near enough to the
        representation to be active.
        """
        ...
    
    def GetToleranceMinValue(self):
        """
        V.GetToleranceMinValue() -> int
        C++: virtual int GetToleranceMinValue()
        
        The tolerance representing the distance to the representation (in
        pixels) in which the cursor is considered near enough to the
        representation to be active.
        """
        ...
    
    def GetUseImageActor(self):
        """
        V.GetUseImageActor() -> int
        C++: virtual vtkTypeBool GetUseImageActor()
        
        Render as a 2D image, or render as a plane with a texture in
        physical space.
        """
        ...
    
    def GetWindow(self):
        """
        V.GetWindow() -> float
        C++: double GetWindow()
        
        Set/Get the current window and level values.  SetWindowLevel
        should only be called after SetInput.  If a shared lookup table
        is being used, a callback is required to update the window level
        values without having to update the lookup table again.
        """
        ...
    
    def GetWindowLevel(self, p_float=..., p_float=...):
        """
        V.GetWindowLevel([float, float])
        C++: void GetWindowLevel(double wl[2])
        
        Set/Get the current window and level values.  SetWindowLevel
        should only be called after SetInput.  If a shared lookup table
        is being used, a callback is required to update the window level
        values without having to update the lookup table again.
        """
        ...
    
    def GetWorldThicknessLabelPosition(self, p_float=..., p_float=..., p_float=...):
        """
        V.GetWorldThicknessLabelPosition([float, float, float])
        C++: virtual void GetWorldThicknessLabelPosition(double pos[3])
        
        Get the position of the widget's label in display coordinates.
        """
        ...
    
    def InitializeReslicePlane(self):
        """
        V.InitializeReslicePlane()
        C++: virtual void InitializeReslicePlane()
        
        Initialize the reslice planes and the camera center. This is done
        automatically, the first time we render.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard VTK methods.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard VTK methods.
        """
        ...
    
    def ManageTextDisplay(self):
        """
        V.ManageTextDisplay()
        C++: void ManageTextDisplay()
        
        INTERNAL - Do not use. Internal methods used by the widget to
        manage text displays for annotations.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkResliceCursorRepresentation
        C++: vtkResliceCursorRepresentation *NewInstance()
        
        Standard VTK methods.
        """
        ...
    
    def ResetCamera(self):
        """
        V.ResetCamera()
        C++: virtual void ResetCamera()
        
        Initialize the reslice planes and the camera center. This is done
        automatically, the first time we render.
        """
        ...
    
    def RestrictPlaneToVolumeOff(self):
        """
        V.RestrictPlaneToVolumeOff()
        C++: virtual void RestrictPlaneToVolumeOff()
        
        Make sure that the resliced image remains within the volume.
        Default is On.
        """
        ...
    
    def RestrictPlaneToVolumeOn(self):
        """
        V.RestrictPlaneToVolumeOn()
        C++: virtual void RestrictPlaneToVolumeOn()
        
        Make sure that the resliced image remains within the volume.
        Default is On.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkResliceCursorRepresentation
        C++: static vtkResliceCursorRepresentation *SafeDownCast(
            vtkObjectBase *o)
        
        Standard VTK methods.
        """
        ...
    
    def SetColorMap(self, vtkImageMapToColors):
        """
        V.SetColorMap(vtkImageMapToColors)
        C++: virtual void SetColorMap(vtkImageMapToColors *)
        
        Convenience method to get the vtkImageMapToColors filter used by
        this widget.  The user can properly render other transparent
        actors in a scene by calling the filter's SetOutputFormatToRGB
        and PassAlphaToOutputOff.
        """
        ...
    
    def SetDisplayText(self, p_int):
        """
        V.SetDisplayText(int)
        C++: virtual void SetDisplayText(vtkTypeBool _arg)
        
        Enable/disable text display of window-level, image coordinates
        and scalar values in a render window.
        """
        ...
    
    def SetLookupTable(self, vtkScalarsToColors):
        """
        V.SetLookupTable(vtkScalarsToColors)
        C++: virtual void SetLookupTable(vtkScalarsToColors *)
        
        Set/Get the internal lookuptable (lut) to one defined by the
        user, or, alternatively, to the lut of another Reslice cusror
        widget.  In this way, a set of three orthogonal planes can share
        the same lut so that window-levelling is performed uniformly
        among planes.  The default internal lut can be re- set/allocated
        by setting to 0 (nullptr).
        """
        ...
    
    def SetManipulationMode(self, p_int):
        """
        V.SetManipulationMode(int)
        C++: void SetManipulationMode(int m)
        
        INTERNAL - Do not use Set the manipulation mode. This is done by
        the widget
        """
        ...
    
    def SetRestrictPlaneToVolume(self, p_int):
        """
        V.SetRestrictPlaneToVolume(int)
        C++: virtual void SetRestrictPlaneToVolume(vtkTypeBool _arg)
        
        Make sure that the resliced image remains within the volume.
        Default is On.
        """
        ...
    
    def SetShowReslicedImage(self, p_int):
        """
        V.SetShowReslicedImage(int)
        C++: virtual void SetShowReslicedImage(vtkTypeBool _arg)
        
        Show the resliced image ?
        """
        ...
    
    def SetTextProperty(self, vtkTextProperty):
        """
        V.SetTextProperty(vtkTextProperty)
        C++: void SetTextProperty(vtkTextProperty *tprop)
        
        Set/Get the text property for the image data and window-level
        annotation.
        """
        ...
    
    def SetThicknessLabelFormat(self, string):
        """
        V.SetThicknessLabelFormat(string)
        C++: virtual void SetThicknessLabelFormat(const char *_arg)
        
        Specify the format to use for labelling the distance. Note that
        an empty string results in no label, or a format string without a
        "%" character will not print the thickness value.
        """
        ...
    
    def SetTolerance(self, p_int):
        """
        V.SetTolerance(int)
        C++: virtual void SetTolerance(int _arg)
        
        The tolerance representing the distance to the representation (in
        pixels) in which the cursor is considered near enough to the
        representation to be active.
        """
        ...
    
    def SetUseImageActor(self, p_int):
        """
        V.SetUseImageActor(int)
        C++: virtual void SetUseImageActor(vtkTypeBool _arg)
        
        Render as a 2D image, or render as a plane with a texture in
        physical space.
        """
        ...
    
    def SetWindowLevel(self, p_float, p_float_1, p_int):
        """
        V.SetWindowLevel(float, float, int)
        C++: void SetWindowLevel(double window, double level, int copy=0)
        
        Set/Get the current window and level values.  SetWindowLevel
        should only be called after SetInput.  If a shared lookup table
        is being used, a callback is required to update the window level
        values without having to update the lookup table again.
        """
        ...
    
    def ShowReslicedImageOff(self):
        """
        V.ShowReslicedImageOff()
        C++: virtual void ShowReslicedImageOff()
        
        Show the resliced image ?
        """
        ...
    
    def ShowReslicedImageOn(self):
        """
        V.ShowReslicedImageOn()
        C++: virtual void ShowReslicedImageOn()
        
        Show the resliced image ?
        """
        ...
    
    def UseImageActorOff(self):
        """
        V.UseImageActorOff()
        C++: virtual void UseImageActorOff()
        
        Render as a 2D image, or render as a plane with a texture in
        physical space.
        """
        ...
    
    def UseImageActorOn(self):
        """
        V.UseImageActorOn()
        C++: virtual void UseImageActorOn()
        
        Render as a 2D image, or render as a plane with a texture in
        physical space.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    NearAxis1 = ...
    NearAxis2 = ...
    NearCenter = ...
    OnAxis1 = ...
    OnAxis2 = ...
    OnCenter = ...
    Outside = ...
    PanAndRotate = ...
    ResizeThickness = ...
    RotateBothAxes = ...
    WindowLevelling = ...
    __dict__ = ...
    __vtkname__ = ...


