"""
This type stub file was generated by pyright.
"""

from .vtkBorderWidget import vtkBorderWidget

class vtkCameraWidget(vtkBorderWidget):
    """
    vtkCameraWidget - 2D widget for saving a series of camera views
    
    Superclass: vtkBorderWidget
    
    This class provides support for interactively saving a series of
    camera views into an interpolated path (using vtkCameraInterpolator).
    To use the class start by specifying a camera to interpolate, and
    then simply start recording by hitting the "record" button,
    manipulate the camera (by using an interactor, direct scripting, or
    any other means), and then save the camera view. Repeat this process
    to record a series of views.  The user can then play back
    interpolated camera views using the vtkCameraInterpolator.
    
    @sa
    vtkBorderWidget vtkCameraInterpolator
    """
    def CreateDefaultRepresentation(self):
        """
        V.CreateDefaultRepresentation()
        C++: void CreateDefaultRepresentation() override;
        
        Create the default widget representation if one is not set.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard VTK class methods.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard VTK class methods.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard VTK class methods.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard VTK class methods.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkCameraWidget
        C++: vtkCameraWidget *NewInstance()
        
        Standard VTK class methods.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkCameraWidget
        C++: static vtkCameraWidget *SafeDownCast(vtkObjectBase *o)
        
        Standard VTK class methods.
        """
        ...
    
    def SetRepresentation(self, vtkCameraRepresentation):
        """
        V.SetRepresentation(vtkCameraRepresentation)
        C++: void SetRepresentation(vtkCameraRepresentation *r)
        
        Specify an instance of vtkWidgetRepresentation used to represent
        this widget in the scene. Note that the representation is a
        subclass of vtkProp so it can be added to the renderer
        independent of the widget.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


