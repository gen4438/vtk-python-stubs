"""
This type stub file was generated by pyright.
"""

from .vtkBorderRepresentation import vtkBorderRepresentation

class vtkCaptionRepresentation(vtkBorderRepresentation):
    """
    vtkCaptionRepresentation - represents vtkCaptionWidget in the scene
    
    Superclass: vtkBorderRepresentation
    
    This class represents vtkCaptionWidget. A caption is defined by some
    text with a leader (e.g., arrow) that points from the text to a point
    in the scene. The caption is defined by an instance of
    vtkCaptionActor2D. It uses the event bindings of its superclass
    (vtkBorderWidget) to control the placement of the text, and adds the
    ability to move the attachment point around. In addition, when the
    caption text is selected, the widget emits a ActivateEvent that
    observers can watch for. This is useful for opening GUI dialogoues to
    adjust font characteristics, etc. (Please see the superclass for a
    description of event bindings.)
    
    Note that this widget extends the behavior of its superclass
    vtkBorderRepresentation.
    
    @sa
    vtkCaptionWidget vtkBorderWidget vtkBorderRepresentation
    vtkCaptionActor
    """
    def BuildRepresentation(self):
        """
        V.BuildRepresentation()
        C++: void BuildRepresentation() override;
        
        Satisfy the superclasses API.
        """
        ...
    
    def GetActors2D(self, vtkPropCollection):
        """
        V.GetActors2D(vtkPropCollection)
        C++: void GetActors2D(vtkPropCollection *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def GetAnchorPosition(self, p_float=..., p_float=..., p_float=...):
        """
        V.GetAnchorPosition([float, float, float])
        C++: void GetAnchorPosition(double pos[3])
        
        Specify the position of the anchor (i.e., the point that the
        caption is anchored to). Note that the position should be
        specified in world coordinates.
        """
        ...
    
    def GetAnchorRepresentation(self):
        """
        V.GetAnchorRepresentation() -> vtkPointHandleRepresentation3D
        C++: virtual vtkPointHandleRepresentation3D *GetAnchorRepresentation(
            )
        
        Set and get the instances of vtkPointHandleRepresention3D used to
        implement this representation. Normally default representations
        are created, but you can specify the ones you want to use.
        """
        ...
    
    def GetCaptionActor2D(self):
        """
        V.GetCaptionActor2D() -> vtkCaptionActor2D
        C++: virtual vtkCaptionActor2D *GetCaptionActor2D()
        
        Specify the vtkCaptionActor2D to manage. If not specified, then
        one is automatically created.
        """
        ...
    
    def GetFontFactor(self):
        """
        V.GetFontFactor() -> float
        C++: virtual double GetFontFactor()
        
        Set/Get the factor that controls the overall size of the fonts of
        the caption when the text actor's ScaledText is OFF
        """
        ...
    
    def GetFontFactorMaxValue(self):
        """
        V.GetFontFactorMaxValue() -> float
        C++: virtual double GetFontFactorMaxValue()
        
        Set/Get the factor that controls the overall size of the fonts of
        the caption when the text actor's ScaledText is OFF
        """
        ...
    
    def GetFontFactorMinValue(self):
        """
        V.GetFontFactorMinValue() -> float
        C++: virtual double GetFontFactorMinValue()
        
        Set/Get the factor that controls the overall size of the fonts of
        the caption when the text actor's ScaledText is OFF
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard VTK class methods.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard VTK class methods.
        """
        ...
    
    def GetSize(self, p_float=..., p_float=...):
        """
        V.GetSize([float, float])
        C++: void GetSize(double size[2]) override;
        
        Subclasses should implement these methods. See the superclasses'
        documentation for more information.
        """
        ...
    
    def HasTranslucentPolygonalGeometry(self):
        """
        V.HasTranslucentPolygonalGeometry() -> int
        C++: vtkTypeBool HasTranslucentPolygonalGeometry() override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard VTK class methods.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard VTK class methods.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkCaptionRepresentation
        C++: vtkCaptionRepresentation *NewInstance()
        
        Standard VTK class methods.
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: void ReleaseGraphicsResources(vtkWindow *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def RenderOpaqueGeometry(self, vtkViewport):
        """
        V.RenderOpaqueGeometry(vtkViewport) -> int
        C++: int RenderOpaqueGeometry(vtkViewport *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def RenderOverlay(self, vtkViewport):
        """
        V.RenderOverlay(vtkViewport) -> int
        C++: int RenderOverlay(vtkViewport *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def RenderTranslucentPolygonalGeometry(self, vtkViewport):
        """
        V.RenderTranslucentPolygonalGeometry(vtkViewport) -> int
        C++: int RenderTranslucentPolygonalGeometry(vtkViewport *)
            override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkCaptionRepresentation
        C++: static vtkCaptionRepresentation *SafeDownCast(
            vtkObjectBase *o)
        
        Standard VTK class methods.
        """
        ...
    
    def SetAnchorPosition(self, p_float=..., p_float=..., p_float=...):
        """
        V.SetAnchorPosition([float, float, float])
        C++: void SetAnchorPosition(double pos[3])
        
        Specify the position of the anchor (i.e., the point that the
        caption is anchored to). Note that the position should be
        specified in world coordinates.
        """
        ...
    
    def SetAnchorRepresentation(self, vtkPointHandleRepresentation3D):
        """
        V.SetAnchorRepresentation(vtkPointHandleRepresentation3D)
        C++: void SetAnchorRepresentation(
            vtkPointHandleRepresentation3D *)
        
        Set and get the instances of vtkPointHandleRepresention3D used to
        implement this representation. Normally default representations
        are created, but you can specify the ones you want to use.
        """
        ...
    
    def SetCaptionActor2D(self, vtkCaptionActor2D):
        """
        V.SetCaptionActor2D(vtkCaptionActor2D)
        C++: void SetCaptionActor2D(vtkCaptionActor2D *captionActor)
        
        Specify the vtkCaptionActor2D to manage. If not specified, then
        one is automatically created.
        """
        ...
    
    def SetFontFactor(self, p_float):
        """
        V.SetFontFactor(float)
        C++: virtual void SetFontFactor(double _arg)
        
        Set/Get the factor that controls the overall size of the fonts of
        the caption when the text actor's ScaledText is OFF
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


