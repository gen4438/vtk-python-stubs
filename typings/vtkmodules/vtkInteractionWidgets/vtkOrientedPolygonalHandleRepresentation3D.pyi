"""
This type stub file was generated by pyright.
"""

from .vtkAbstractPolygonalHandleRepresentation3D import vtkAbstractPolygonalHandleRepresentation3D

class vtkOrientedPolygonalHandleRepresentation3D(vtkAbstractPolygonalHandleRepresentation3D):
    """
    vtkOrientedPolygonalHandleRepresentation3D - represent a user defined
    handle geometry in 3D while maintaining a fixed orientation w.r.t the
    camera.
    
    Superclass: vtkAbstractPolygonalHandleRepresentation3D
    
    This class serves as the geometrical representation of a
    vtkHandleWidget. The handle can be represented by an arbitrary
    polygonal data (vtkPolyData), set via SetHandle(vtkPolyData *). The
    actual position of the handle will be initially assumed to be
    (0,0,0). You can specify an offset from this position if desired.
    This class differs from vtkPolygonalHandleRepresentation3D in that
    the handle will always remain front facing, ie it maintains a fixed
    orientation with respect to the camera. This is done by using
    vtkFollowers internally to render the actors.
    @sa
    vtkPolygonalHandleRepresentation3D vtkHandleRepresentation
    vtkHandleWidget
    """
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard methods for instances of this class.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard methods for instances of this class.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard methods for instances of this class.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard methods for instances of this class.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkOrientedPolygonalHandleRepresentation3D
        C++: vtkOrientedPolygonalHandleRepresentation3D *NewInstance()
        
        Standard methods for instances of this class.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase)
            -> vtkOrientedPolygonalHandleRepresentation3D
        C++: static vtkOrientedPolygonalHandleRepresentation3D *SafeDownCast(
            vtkObjectBase *o)
        
        Standard methods for instances of this class.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


