"""
This type stub file was generated by pyright.
"""

from .vtkBorderRepresentation import vtkBorderRepresentation

class vtkCameraRepresentation(vtkBorderRepresentation):
    """
    vtkCameraRepresentation - represent the vtkCameraWidget
    
    Superclass: vtkBorderRepresentation
    
    This class provides support for interactively saving a series of
    camera views into an interpolated path (using vtkCameraInterpolator).
    The class typically works in conjunction with vtkCameraWidget. To use
    this class simply specify the camera to interpolate and use the
    methods AddCameraToPath(), AnimatePath(), and InitializePath() to add
    a new camera view, animate the current views, and initialize the
    interpolation.
    
    @sa
    vtkCameraWidget vtkCameraInterpolator
    """
    def AddCameraToPath(self):
        """
        V.AddCameraToPath()
        C++: void AddCameraToPath()
        
        These methods are used to create interpolated camera paths.  The
        AddCameraToPath() method adds the view defined by the current
        camera (via SetCamera()) to the interpolated camera path.
        AnimatePath() interpolates NumberOfFrames along the current path.
        InitializePath() resets the interpolated path to its initial,
        empty configuration.
        """
        ...
    
    def AnimatePath(self, vtkRenderWindowInteractor):
        """
        V.AnimatePath(vtkRenderWindowInteractor)
        C++: void AnimatePath(vtkRenderWindowInteractor *rwi)
        
        These methods are used to create interpolated camera paths.  The
        AddCameraToPath() method adds the view defined by the current
        camera (via SetCamera()) to the interpolated camera path.
        AnimatePath() interpolates NumberOfFrames along the current path.
        InitializePath() resets the interpolated path to its initial,
        empty configuration.
        """
        ...
    
    def BuildRepresentation(self):
        """
        V.BuildRepresentation()
        C++: void BuildRepresentation() override;
        
        Satisfy the superclasses' API.
        """
        ...
    
    def GetActors2D(self, vtkPropCollection):
        """
        V.GetActors2D(vtkPropCollection)
        C++: void GetActors2D(vtkPropCollection *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def GetCamera(self):
        """
        V.GetCamera() -> vtkCamera
        C++: virtual vtkCamera *GetCamera()
        
        Specify the camera to interpolate. This must be specified by the
        user.
        """
        ...
    
    def GetInterpolator(self):
        """
        V.GetInterpolator() -> vtkCameraInterpolator
        C++: virtual vtkCameraInterpolator *GetInterpolator()
        
        Get the vtkCameraInterpolator used to interpolate and save the
        sequence of camera views. If not defined, one is created
        automatically. Note that you can access this object to set the
        interpolation type (linear, spline) and other instance variables.
        """
        ...
    
    def GetNumberOfFrames(self):
        """
        V.GetNumberOfFrames() -> int
        C++: virtual int GetNumberOfFrames()
        
        Set the number of frames to generate when playback is initiated.
        """
        ...
    
    def GetNumberOfFramesMaxValue(self):
        """
        V.GetNumberOfFramesMaxValue() -> int
        C++: virtual int GetNumberOfFramesMaxValue()
        
        Set the number of frames to generate when playback is initiated.
        """
        ...
    
    def GetNumberOfFramesMinValue(self):
        """
        V.GetNumberOfFramesMinValue() -> int
        C++: virtual int GetNumberOfFramesMinValue()
        
        Set the number of frames to generate when playback is initiated.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard VTK class methods.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard VTK class methods.
        """
        ...
    
    def GetProperty(self):
        """
        V.GetProperty() -> vtkProperty2D
        C++: virtual vtkProperty2D *GetProperty()
        
        By obtaining this property you can specify the properties of the
        representation.
        """
        ...
    
    def GetSize(self, p_float=..., p_float=...):
        """
        V.GetSize([float, float])
        C++: void GetSize(double size[2]) override;
        
        Subclasses should implement these methods. See the superclasses'
        documentation for more information.
        """
        ...
    
    def HasTranslucentPolygonalGeometry(self):
        """
        V.HasTranslucentPolygonalGeometry() -> int
        C++: vtkTypeBool HasTranslucentPolygonalGeometry() override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def InitializePath(self):
        """
        V.InitializePath()
        C++: void InitializePath()
        
        These methods are used to create interpolated camera paths.  The
        AddCameraToPath() method adds the view defined by the current
        camera (via SetCamera()) to the interpolated camera path.
        AnimatePath() interpolates NumberOfFrames along the current path.
        InitializePath() resets the interpolated path to its initial,
        empty configuration.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard VTK class methods.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard VTK class methods.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkCameraRepresentation
        C++: vtkCameraRepresentation *NewInstance()
        
        Standard VTK class methods.
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: void ReleaseGraphicsResources(vtkWindow *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def RenderOpaqueGeometry(self, vtkViewport):
        """
        V.RenderOpaqueGeometry(vtkViewport) -> int
        C++: int RenderOpaqueGeometry(vtkViewport *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def RenderOverlay(self, vtkViewport):
        """
        V.RenderOverlay(vtkViewport) -> int
        C++: int RenderOverlay(vtkViewport *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def RenderTranslucentPolygonalGeometry(self, vtkViewport):
        """
        V.RenderTranslucentPolygonalGeometry(vtkViewport) -> int
        C++: int RenderTranslucentPolygonalGeometry(vtkViewport *)
            override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkCameraRepresentation
        C++: static vtkCameraRepresentation *SafeDownCast(
            vtkObjectBase *o)
        
        Standard VTK class methods.
        """
        ...
    
    def SetCamera(self, vtkCamera):
        """
        V.SetCamera(vtkCamera)
        C++: void SetCamera(vtkCamera *camera)
        
        Specify the camera to interpolate. This must be specified by the
        user.
        """
        ...
    
    def SetInterpolator(self, vtkCameraInterpolator):
        """
        V.SetInterpolator(vtkCameraInterpolator)
        C++: void SetInterpolator(vtkCameraInterpolator *camInt)
        
        Get the vtkCameraInterpolator used to interpolate and save the
        sequence of camera views. If not defined, one is created
        automatically. Note that you can access this object to set the
        interpolation type (linear, spline) and other instance variables.
        """
        ...
    
    def SetNumberOfFrames(self, p_int):
        """
        V.SetNumberOfFrames(int)
        C++: virtual void SetNumberOfFrames(int _arg)
        
        Set the number of frames to generate when playback is initiated.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


