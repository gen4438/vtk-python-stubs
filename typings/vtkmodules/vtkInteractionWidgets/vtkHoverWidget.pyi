"""
This type stub file was generated by pyright.
"""

from .vtkAbstractWidget import vtkAbstractWidget

class vtkHoverWidget(vtkAbstractWidget):
    """
    vtkHoverWidget - invoke a vtkTimerEvent when hovering
    
    Superclass: vtkAbstractWidget
    
    The vtkHoverWidget is used to invoke an event when hovering in a
    render window. Hovering occurs when mouse motion (in the render
    window) does not occur for a specified amount of time (i.e.,
    TimerDuration). This class can be used as is (by observing
    TimerEvents) or for class derivation for those classes wishing to do
    more with the hover event.
    
    To use this widget, specify an instance of vtkHoverWidget and specify
    the time (in milliseconds) defining the hover period. Unlike most
    widgets, this widget does not require a representation (although
    subclasses like vtkBalloonWidget do require a representation).
    
    @par Event Bindings: By default, the widget observes the following
    VTK events (i.e., it watches the vtkRenderWindowInteractor for these
    events):
    
    
      MouseMoveEvent - manages a timer used to determine whether the
    mouse
                       is hovering.
      TimerEvent - when the time between events (e.g., mouse move), then
    a
                   timer event is invoked.
      KeyPressEvent - when the "Enter" key is pressed after the balloon
    appears,
                      a callback is activated (e.g.,
    WidgetActivateEvent). 
    
    @par Event Bindings: Note that the event bindings described above can
    be changed using this class's vtkWidgetEventTranslator. This class
    translates VTK events into the vtkHoverWidget's widget events:
    
    
      vtkWidgetEvent::Move -- start (or reset) the timer
      vtkWidgetEvent::TimedOut -- when enough time is elapsed between
    defined
                                  VTK events the hover event is invoked.
      vtkWidgetEvent::SelectAction -- activate any callbacks associated
                                      with the balloon. 
    
    @par Event Bindings: This widget invokes the following VTK events on
    itself when the widget determines that it is hovering. Note that
    observers of this widget can listen for these events and take
    appropriate action.
    
    
      vtkCommand::TimerEvent (when hovering is determined to occur)
      vtkCommand::EndInteractionEvent (after a hover has occurred and the
                                       mouse begins moving again).
      vtkCommand::WidgetActivateEvent (when the balloon is selected with
    a
                                       keypress). 
    
    @sa
    vtkAbstractWidget
    """
    def CreateDefaultRepresentation(self):
        """
        V.CreateDefaultRepresentation()
        C++: void CreateDefaultRepresentation() override;
        
        A default representation, of which there is none, is created.
        Note that the superclasses vtkAbstractWidget::GetRepresentation()
        method returns nullptr.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard methods for a VTK class.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard methods for a VTK class.
        """
        ...
    
    def GetTimerDuration(self):
        """
        V.GetTimerDuration() -> int
        C++: virtual int GetTimerDuration()
        
        Specify the hovering interval (in milliseconds). If after moving
        the mouse the pointer stays over a vtkProp for this duration,
        then a vtkTimerEvent::TimerEvent is invoked.
        """
        ...
    
    def GetTimerDurationMaxValue(self):
        """
        V.GetTimerDurationMaxValue() -> int
        C++: virtual int GetTimerDurationMaxValue()
        
        Specify the hovering interval (in milliseconds). If after moving
        the mouse the pointer stays over a vtkProp for this duration,
        then a vtkTimerEvent::TimerEvent is invoked.
        """
        ...
    
    def GetTimerDurationMinValue(self):
        """
        V.GetTimerDurationMinValue() -> int
        C++: virtual int GetTimerDurationMinValue()
        
        Specify the hovering interval (in milliseconds). If after moving
        the mouse the pointer stays over a vtkProp for this duration,
        then a vtkTimerEvent::TimerEvent is invoked.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard methods for a VTK class.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard methods for a VTK class.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkHoverWidget
        C++: vtkHoverWidget *NewInstance()
        
        Standard methods for a VTK class.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkHoverWidget
        C++: static vtkHoverWidget *SafeDownCast(vtkObjectBase *o)
        
        Standard methods for a VTK class.
        """
        ...
    
    def SetEnabled(self, p_int):
        """
        V.SetEnabled(int)
        C++: void SetEnabled(int) override;
        
        The method for activating and deactivating this widget. This
        method must be overridden because it performs special
        timer-related operations.
        """
        ...
    
    def SetTimerDuration(self, p_int):
        """
        V.SetTimerDuration(int)
        C++: virtual void SetTimerDuration(int _arg)
        
        Specify the hovering interval (in milliseconds). If after moving
        the mouse the pointer stays over a vtkProp for this duration,
        then a vtkTimerEvent::TimerEvent is invoked.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


