"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkRenderingCore as __vtkmodules_vtkRenderingCore

class vtkResliceCursorActor(__vtkmodules_vtkRenderingCore.vtkProp3D):
    """
    vtkResliceCursorActor - Represent a reslice cursor
    
    Superclass: vtkProp3D
    
    A reslice cursor consists of a pair of lines (cross hairs), thin or
    thick, that may be interactively manipulated for thin/thick reformats
    through the data.
    @sa
    vtkResliceCursor vtkResliceCursorPolyDataAlgorithm
    vtkResliceCursorWidget vtkResliceCursorRepresentation
    vtkResliceCursorLineRepresentation
    """
    def GetBounds(self):
        """
        V.GetBounds() -> (float, float, float, float, float, float)
        C++: double *GetBounds() override;
        
        Get the bounds for this Actor as (Xmin,Xmax,Ymin,Ymax,Zmin,Zmax).
        """
        ...
    
    def GetCenterlineActor(self, p_int):
        """
        V.GetCenterlineActor(int) -> vtkActor
        C++: vtkActor *GetCenterlineActor(int axis)
        
        Get the centerline actor along a particular axis
        """
        ...
    
    def GetCenterlineProperty(self, p_int):
        """
        V.GetCenterlineProperty(int) -> vtkProperty
        C++: vtkProperty *GetCenterlineProperty(int i)
        
        Get property of the internal actor.
        """
        ...
    
    def GetCursorAlgorithm(self):
        """
        V.GetCursorAlgorithm() -> vtkResliceCursorPolyDataAlgorithm
        C++: virtual vtkResliceCursorPolyDataAlgorithm *GetCursorAlgorithm(
            )
        
        Get the cursor algorithm. The cursor must be set on the algorithm
        """
        ...
    
    def GetMTime(self):
        """
        V.GetMTime() -> int
        C++: vtkMTimeType GetMTime() override;
        
        Get the actors mtime plus consider its algorithm.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard VTK methods
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard VTK methods
        """
        ...
    
    def GetThickSlabProperty(self, p_int):
        """
        V.GetThickSlabProperty(int) -> vtkProperty
        C++: vtkProperty *GetThickSlabProperty(int i)
        
        Get property of the internal actor.
        """
        ...
    
    def HasTranslucentPolygonalGeometry(self):
        """
        V.HasTranslucentPolygonalGeometry() -> int
        C++: vtkTypeBool HasTranslucentPolygonalGeometry() override;
        
        Does this prop have some translucent polygonal geometry? No.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard VTK methods
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard VTK methods
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkResliceCursorActor
        C++: vtkResliceCursorActor *NewInstance()
        
        Standard VTK methods
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: void ReleaseGraphicsResources(vtkWindow *) override;
        
        Release any graphics resources that are being consumed by this
        actor. The parameter window could be used to determine which
        graphic resources to release.
        """
        ...
    
    def RenderOpaqueGeometry(self, vtkViewport):
        """
        V.RenderOpaqueGeometry(vtkViewport) -> int
        C++: int RenderOpaqueGeometry(vtkViewport *viewport) override;
        
        Support the standard render methods.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkResliceCursorActor
        C++: static vtkResliceCursorActor *SafeDownCast(vtkObjectBase *o)
        
        Standard VTK methods
        """
        ...
    
    def SetUserMatrix(self, vtkMatrix4x4):
        """
        V.SetUserMatrix(vtkMatrix4x4)
        C++: virtual void SetUserMatrix(vtkMatrix4x4 *matrix)
        
        Set the user matrix on all the internal actors.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


