"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkCommonCore as __vtkmodules_vtkCommonCore

class vtkImageOrthoPlanes(__vtkmodules_vtkCommonCore.vtkObject):
    """
    vtkImageOrthoPlanes - Connect three vtkImagePlaneWidgets together
    
    Superclass: vtkObject
    
    vtkImageOrthoPlanes is an event observer class that listens to the
    events from three vtkImagePlaneWidgets and keeps their orientations
    and scales synchronized.
    @sa
    vtkImagePlaneWidget@par Thanks: Thanks to Atamai Inc. for developing
    and contributing this class.
    """
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetPlane(self, p_int):
        """
        V.GetPlane(int) -> vtkImagePlaneWidget
        C++: vtkImagePlaneWidget *GetPlane(int i)
        
        You must set three planes for the widget.
        """
        ...
    
    def GetTransform(self):
        """
        V.GetTransform() -> vtkTransform
        C++: vtkTransform *GetTransform()
        
        Get the transform for the planes.
        """
        ...
    
    def HandlePlaneEvent(self, vtkImagePlaneWidget):
        """
        V.HandlePlaneEvent(vtkImagePlaneWidget)
        C++: void HandlePlaneEvent(vtkImagePlaneWidget *imagePlaneWidget)
        
        A public method to be used only by the event callback.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkImageOrthoPlanes
        C++: vtkImageOrthoPlanes *NewInstance()
        """
        ...
    
    def ResetPlanes(self):
        """
        V.ResetPlanes()
        C++: void ResetPlanes()
        
        Reset the planes to original scale, rotation, and location.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkImageOrthoPlanes
        C++: static vtkImageOrthoPlanes *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetPlane(self, p_int, vtkImagePlaneWidget):
        """
        V.SetPlane(int, vtkImagePlaneWidget)
        C++: void SetPlane(int i, vtkImagePlaneWidget *imagePlaneWidget)
        
        You must set three planes for the widget.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


