"""
This type stub file was generated by pyright.
"""

from .vtkBorderRepresentation import vtkBorderRepresentation

class vtkTextRepresentation(vtkBorderRepresentation):
    """
    vtkTextRepresentation - represent text for vtkTextWidget
    
    Superclass: vtkBorderRepresentation
    
    This class represents text for a vtkTextWidget.  This class provides
    support for interactively placing text on the 2D overlay plane. The
    text is defined by an instance of vtkTextActor.
    
    @sa
    vtkTextRepresentation vtkBorderWidget vtkAbstractWidget
    vtkWidgetRepresentation
    """
    def BuildRepresentation(self):
        """
        V.BuildRepresentation()
        C++: void BuildRepresentation() override;
        
        Satisfy the superclasses API.
        """
        ...
    
    def ExecuteTextActorModifiedEvent(self, vtkObject, p_int, void):
        """
        V.ExecuteTextActorModifiedEvent(vtkObject, int, void)
        C++: void ExecuteTextActorModifiedEvent(vtkObject *obj,
            unsigned long enumEvent, void *p)
        
        Internal. Execute events observed by internal observer
        """
        ...
    
    def ExecuteTextPropertyModifiedEvent(self, vtkObject, p_int, void):
        """
        V.ExecuteTextPropertyModifiedEvent(vtkObject, int, void)
        C++: void ExecuteTextPropertyModifiedEvent(vtkObject *obj,
            unsigned long enumEvent, void *p)
        
        Internal. Execute events observed by internal observer
        """
        ...
    
    def GetActors2D(self, vtkPropCollection):
        """
        V.GetActors2D(vtkPropCollection)
        C++: void GetActors2D(vtkPropCollection *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard VTK methods.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard VTK methods.
        """
        ...
    
    def GetSize(self, p_float=..., p_float=...):
        """
        V.GetSize([float, float])
        C++: void GetSize(double size[2]) override;
        
        Subclasses should implement these methods. See the superclasses'
        documentation for more information.
        """
        ...
    
    def GetText(self):
        """
        V.GetText() -> string
        C++: const char *GetText()
        
        Get/Set the text string display by this representation.
        """
        ...
    
    def GetTextActor(self):
        """
        V.GetTextActor() -> vtkTextActor
        C++: virtual vtkTextActor *GetTextActor()
        
        Specify the vtkTextActor to manage. If not specified, then one is
        automatically created.
        """
        ...
    
    def GetWindowLocation(self):
        """
        V.GetWindowLocation() -> int
        C++: virtual int GetWindowLocation()
        
        Set the text position, by enumeration ( AnyLocation = 0,
        LowerLeftCorner, LowerRightCorner, LowerCenter, UpperLeftCorner,
        UpperRightCorner, UpperCenter) related to the render window
        """
        ...
    
    def HasTranslucentPolygonalGeometry(self):
        """
        V.HasTranslucentPolygonalGeometry() -> int
        C++: vtkTypeBool HasTranslucentPolygonalGeometry() override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard VTK methods.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard VTK methods.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkTextRepresentation
        C++: vtkTextRepresentation *NewInstance()
        
        Standard VTK methods.
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: void ReleaseGraphicsResources(vtkWindow *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def RenderOpaqueGeometry(self, vtkViewport):
        """
        V.RenderOpaqueGeometry(vtkViewport) -> int
        C++: int RenderOpaqueGeometry(vtkViewport *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def RenderOverlay(self, vtkViewport):
        """
        V.RenderOverlay(vtkViewport) -> int
        C++: int RenderOverlay(vtkViewport *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def RenderTranslucentPolygonalGeometry(self, vtkViewport):
        """
        V.RenderTranslucentPolygonalGeometry(vtkViewport) -> int
        C++: int RenderTranslucentPolygonalGeometry(vtkViewport *)
            override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkTextRepresentation
        C++: static vtkTextRepresentation *SafeDownCast(vtkObjectBase *o)
        
        Standard VTK methods.
        """
        ...
    
    def SetPosition(self, p_float, p_float_1):
        """
        V.SetPosition(float, float)
        C++: void SetPosition(double x, double y) override;
        V.SetPosition([float, float])
        C++: void SetPosition(double pos[2]) override;
        
        Set the text position, by overriding the same function of
        vtkBorderRepresentation so that the Modified() will be called.
        """
        ...
    
    def SetText(self, string):
        """
        V.SetText(string)
        C++: void SetText(const char *text)
        
        Get/Set the text string display by this representation.
        """
        ...
    
    def SetTextActor(self, vtkTextActor):
        """
        V.SetTextActor(vtkTextActor)
        C++: void SetTextActor(vtkTextActor *textActor)
        
        Specify the vtkTextActor to manage. If not specified, then one is
        automatically created.
        """
        ...
    
    def SetWindowLocation(self, p_int):
        """
        V.SetWindowLocation(int)
        C++: virtual void SetWindowLocation(int enumLocation)
        
        Set the text position, by enumeration ( AnyLocation = 0,
        LowerLeftCorner, LowerRightCorner, LowerCenter, UpperLeftCorner,
        UpperRightCorner, UpperCenter) related to the render window
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    AnyLocation = ...
    LowerCenter = ...
    LowerLeftCorner = ...
    LowerRightCorner = ...
    UpperCenter = ...
    UpperLeftCorner = ...
    UpperRightCorner = ...
    __dict__ = ...
    __vtkname__ = ...


