"""
This type stub file was generated by pyright.
"""

from .vtkWidgetRepresentation import vtkWidgetRepresentation

class vtkTensorProbeRepresentation(vtkWidgetRepresentation):
    """
    vtkTensorProbeRepresentation - Abstract class that serves as a
    representation for vtkTensorProbeWidget
    
    Superclass: vtkWidgetRepresentation
    
    The class serves as an abstract geometrical representation for the
    vtkTensorProbeWidget. It is left to the concrete implementation to
    render the tensors as it desires. For instance,
    vtkEllipsoidTensorProbeRepresentation renders the tensors as
    ellipsoids.
    
    @sa
    vtkTensorProbeWidget
    """
    def BuildRepresentation(self):
        """
        V.BuildRepresentation()
        C++: void BuildRepresentation() override;
        
        See vtkWidgetRepresentation for details.
        """
        ...
    
    def GetActors(self, vtkPropCollection):
        """
        V.GetActors(vtkPropCollection)
        C++: void GetActors(vtkPropCollection *) override;
        
        See vtkProp for details.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard methods for instances of this class.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard methods for instances of this class.
        """
        ...
    
    def GetProbeCellId(self):
        """
        V.GetProbeCellId() -> int
        C++: virtual vtkIdType GetProbeCellId()
        
        Set the position of the Tensor probe.
        """
        ...
    
    def GetProbePosition(self):
        """
        V.GetProbePosition() -> (float, float, float)
        C++: virtual double *GetProbePosition()
        
        Set the position of the Tensor probe.
        """
        ...
    
    def Initialize(self):
        """
        V.Initialize()
        C++: void Initialize()
        
        Set the probe position to a reasonable location on the
        trajectory.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard methods for instances of this class.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard methods for instances of this class.
        """
        ...
    
    def Move(self, p_float=..., p_float=...):
        """
        V.Move([float, float]) -> int
        C++: virtual int Move(double motionVector[2])
        
        INTERNAL - Do not use This method is invoked by the widget during
        user interaction. Move probe based on the position and the motion
        vector.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkTensorProbeRepresentation
        C++: vtkTensorProbeRepresentation *NewInstance()
        
        Standard methods for instances of this class.
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: void ReleaseGraphicsResources(vtkWindow *) override;
        
        See vtkProp for details.
        """
        ...
    
    def RenderOpaqueGeometry(self, vtkViewport):
        """
        V.RenderOpaqueGeometry(vtkViewport) -> int
        C++: int RenderOpaqueGeometry(vtkViewport *) override;
        
        See vtkWidgetRepresentation for details.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkTensorProbeRepresentation
        C++: static vtkTensorProbeRepresentation *SafeDownCast(
            vtkObjectBase *o)
        
        Standard methods for instances of this class.
        """
        ...
    
    def SelectProbe(self, p_int=..., p_int=...):
        """
        V.SelectProbe([int, int]) -> int
        C++: virtual int SelectProbe(int pos[2])
        
        This method is invoked by the widget during user interaction. Can
        we pick the tensor glyph at the current cursor pos
        """
        ...
    
    def SetProbeCellId(self, p_int):
        """
        V.SetProbeCellId(int)
        C++: virtual void SetProbeCellId(vtkIdType _arg)
        
        Set the position of the Tensor probe.
        """
        ...
    
    def SetProbePosition(self, p_float, p_float_1, p_float_2):
        """
        V.SetProbePosition(float, float, float)
        C++: virtual void SetProbePosition(double _arg1, double _arg2,
            double _arg3)
        V.SetProbePosition((float, float, float))
        C++: virtual void SetProbePosition(const double _arg[3])
        
        Set the position of the Tensor probe.
        """
        ...
    
    def SetTrajectory(self, vtkPolyData):
        """
        V.SetTrajectory(vtkPolyData)
        C++: virtual void SetTrajectory(vtkPolyData *)
        
        Set the trajectory that we are trying to probe tensors on
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


