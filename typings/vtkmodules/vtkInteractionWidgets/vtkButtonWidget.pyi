"""
This type stub file was generated by pyright.
"""

from .vtkAbstractWidget import vtkAbstractWidget

class vtkButtonWidget(vtkAbstractWidget):
    """
    vtkButtonWidget - activate an n-state button
    
    Superclass: vtkAbstractWidget
    
    The vtkButtonWidget is used to interface with an n-state button. That
    is each selection moves to the next button state (e.g., moves from
    "on" to "off"). The widget uses modulo list traversal to transition
    through one or more states. (A single state is simply a "selection"
    event; traversal through the list can be in the forward or backward
    direction.)
    
    Depending on the nature of the representation the appearance of the
    button can change dramatically, the specifics of appearance changes
    are a function of the associated vtkButtonRepresentation (or
    subclass).
    
    @par Event Bindings: By default, the widget responds to the following
    VTK events (i.e., it watches the vtkRenderWindowInteractor for these
    events):
    
    
      LeftButtonPressEvent - select button
      LeftButtonReleaseEvent - end the button selection process 
    
    @par Event Bindings: Note that the event bindings described above can
    be changed using this class's vtkWidgetEventTranslator. This class
    translates VTK events into the vtkButtonWidget's widget events:
    
    
      vtkWidgetEvent::Select -- some part of the widget has been selected
      vtkWidgetEvent::EndSelect -- the selection process has completed 
    
    @par Event Bindings: In turn, when these widget events are processed,
    the vtkButtonWidget invokes the following VTK events on itself (which
    observers can listen for):
    
    
      vtkCommand::StateChangedEvent (on vtkWidgetEvent::EndSelect)
    """
    def CreateDefaultRepresentation(self):
        """
        V.CreateDefaultRepresentation()
        C++: void CreateDefaultRepresentation() override;
        
        Create the default widget representation if one is not set.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard macros.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard macros.
        """
        ...
    
    def GetSliderRepresentation(self):
        """
        V.GetSliderRepresentation() -> vtkButtonRepresentation
        C++: vtkButtonRepresentation *GetSliderRepresentation()
        
        Return the representation as a vtkButtonRepresentation.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard macros.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard macros.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkButtonWidget
        C++: vtkButtonWidget *NewInstance()
        
        Standard macros.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkButtonWidget
        C++: static vtkButtonWidget *SafeDownCast(vtkObjectBase *o)
        
        Standard macros.
        """
        ...
    
    def SetEnabled(self, p_int):
        """
        V.SetEnabled(int)
        C++: void SetEnabled(int) override;
        
        The method for activating and deactivating this widget. This
        method must be overridden because it is a composite widget and
        does more than its superclasses' vtkAbstractWidget::SetEnabled()
        method. The method finds and sets the active viewport on the
        internal balloon representation.
        """
        ...
    
    def SetRepresentation(self, vtkButtonRepresentation):
        """
        V.SetRepresentation(vtkButtonRepresentation)
        C++: void SetRepresentation(vtkButtonRepresentation *r)
        
        Specify an instance of vtkWidgetRepresentation used to represent
        this widget in the scene. Note that the representation is a
        subclass of vtkProp so it can be added to the renderer
        independent of the widget.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


