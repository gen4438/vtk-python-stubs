"""
This type stub file was generated by pyright.
"""

from .vtkAbstractWidget import vtkAbstractWidget

class vtkCheckerboardWidget(vtkAbstractWidget):
    """
    vtkCheckerboardWidget - interactively set the number of divisions in
    2D image checkerboard
    
    Superclass: vtkAbstractWidget
    
    The vtkCheckerboardWidget is used to interactively control an
    instance of vtkImageCheckerboard (and an associated vtkImageActor
    used to display the checkerboard). The user can adjust the number of
    divisions in each of the i-j directions in a 2D image. A frame
    appears around the vtkImageActor with sliders along each side of the
    frame. The user can interactively adjust the sliders to the desired
    number of checkerboard subdivisions.
    
    To use this widget, specify an instance of vtkImageCheckerboard and
    an instance of vtkImageActor. By default, the widget responds to the
    following events:
    
    If the slider bead is selected:
      LeftButtonPressEvent - select slider (if on slider)
      LeftButtonReleaseEvent - release slider
      MouseMoveEvent - move slider If the end caps or slider tube of a
    slider are selected:
      LeftButtonPressEvent - jump (or animate) to cap or point on tube; 
    It is possible to change these event bindings. Please refer to the
    documentation for vtkSliderWidget for more information. Advanced
    users may directly access and manipulate the sliders by obtaining the
    instances of vtkSliderWidget composing the vtkCheckerboard widget.
    
    @sa
    vtkImageCheckerboard vtkImageActor vtkSliderWidget
    vtkRectilinearWipeWidget
    """
    def CreateDefaultRepresentation(self):
        """
        V.CreateDefaultRepresentation()
        C++: void CreateDefaultRepresentation() override;
        
        Create the default widget representation if one is not set.
        """
        ...
    
    def GetCheckerboardRepresentation(self):
        """
        V.GetCheckerboardRepresentation() -> vtkCheckerboardRepresentation
        C++: vtkCheckerboardRepresentation *GetCheckerboardRepresentation(
            )
        
        Return the representation as a vtkCheckerboardRepresentation.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard methods for a VTK class.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard methods for a VTK class.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard methods for a VTK class.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard methods for a VTK class.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkCheckerboardWidget
        C++: vtkCheckerboardWidget *NewInstance()
        
        Standard methods for a VTK class.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkCheckerboardWidget
        C++: static vtkCheckerboardWidget *SafeDownCast(vtkObjectBase *o)
        
        Standard methods for a VTK class.
        """
        ...
    
    def SetEnabled(self, p_int):
        """
        V.SetEnabled(int)
        C++: void SetEnabled(int) override;
        
        The method for activating and deactivating this widget. This
        method must be overridden because it is a composite widget and
        does more than its superclasses' vtkAbstractWidget::SetEnabled()
        method.
        """
        ...
    
    def SetRepresentation(self, vtkCheckerboardRepresentation):
        """
        V.SetRepresentation(vtkCheckerboardRepresentation)
        C++: void SetRepresentation(vtkCheckerboardRepresentation *r)
        
        Specify an instance of vtkWidgetRepresentation used to represent
        this widget in the scene. Note that the representation is a
        subclass of vtkProp so it can be added to the renderer
        independent of the widget.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


