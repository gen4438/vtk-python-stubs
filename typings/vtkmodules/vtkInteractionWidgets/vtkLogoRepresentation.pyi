"""
This type stub file was generated by pyright.
"""

from .vtkBorderRepresentation import vtkBorderRepresentation

class vtkLogoRepresentation(vtkBorderRepresentation):
    """
    vtkLogoRepresentation - represent the vtkLogoWidget
    
    Superclass: vtkBorderRepresentation
    
    This class provides support for interactively positioning a logo. A
    logo is defined by an instance of vtkImage. The properties of the
    image, including transparency, can be set with an instance of
    vtkProperty2D. To position the logo, use the superclass's Position
    and Position2 coordinates.
    
    @sa
    vtkLogoWidget
    """
    def BuildRepresentation(self):
        """
        V.BuildRepresentation()
        C++: void BuildRepresentation() override;
        
        Satisfy the superclasses' API.
        """
        ...
    
    def GetActors2D(self, vtkPropCollection):
        """
        V.GetActors2D(vtkPropCollection)
        C++: void GetActors2D(vtkPropCollection *pc) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def GetImage(self):
        """
        V.GetImage() -> vtkImageData
        C++: virtual vtkImageData *GetImage()
        
        Specify/retrieve the image to display in the balloon.
        """
        ...
    
    def GetImageProperty(self):
        """
        V.GetImageProperty() -> vtkProperty2D
        C++: virtual vtkProperty2D *GetImageProperty()
        
        Set/get the image property (relevant only if an image is shown).
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard VTK class methods.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard VTK class methods.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard VTK class methods.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard VTK class methods.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkLogoRepresentation
        C++: vtkLogoRepresentation *NewInstance()
        
        Standard VTK class methods.
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: void ReleaseGraphicsResources(vtkWindow *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def RenderOverlay(self, vtkViewport):
        """
        V.RenderOverlay(vtkViewport) -> int
        C++: int RenderOverlay(vtkViewport *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkLogoRepresentation
        C++: static vtkLogoRepresentation *SafeDownCast(vtkObjectBase *o)
        
        Standard VTK class methods.
        """
        ...
    
    def SetImage(self, vtkImageData):
        """
        V.SetImage(vtkImageData)
        C++: virtual void SetImage(vtkImageData *img)
        
        Specify/retrieve the image to display in the balloon.
        """
        ...
    
    def SetImageProperty(self, vtkProperty2D):
        """
        V.SetImageProperty(vtkProperty2D)
        C++: virtual void SetImageProperty(vtkProperty2D *p)
        
        Set/get the image property (relevant only if an image is shown).
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


