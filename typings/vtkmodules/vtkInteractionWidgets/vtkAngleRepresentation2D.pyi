"""
This type stub file was generated by pyright.
"""

from .vtkAngleRepresentation import vtkAngleRepresentation

class vtkAngleRepresentation2D(vtkAngleRepresentation):
    """
    vtkAngleRepresentation2D - represent the vtkAngleWidget
    
    Superclass: vtkAngleRepresentation
    
    The vtkAngleRepresentation2D is a representation for the
    vtkAngleWidget. This representation consists of two rays and three
    vtkHandleRepresentations to place and manipulate the three points
    defining the angle representation. (Note: the three points are
    referred to as Point1, Center, and Point2, at the two end points
    (Point1 and Point2) and Center (around which the angle is measured).
    This particular implementation is a 2D representation, meaning that
    it draws in the overlay plane.
    
    @sa
    vtkAngleWidget vtkHandleRepresentation
    """
    def BuildRepresentation(self):
        """
        V.BuildRepresentation()
        C++: void BuildRepresentation() override;
        
        Method defined by vtkWidgetRepresentation superclass and needed
        here.
        """
        ...
    
    def GetAngle(self):
        """
        V.GetAngle() -> float
        C++: double GetAngle() override;
        
        Satisfy the superclasses API.
        """
        ...
    
    def GetArc(self):
        """
        V.GetArc() -> vtkLeaderActor2D
        C++: virtual vtkLeaderActor2D *GetArc()
        
        Set/Get the three leaders used to create this representation. By
        obtaining these leaders the user can set the appropriate
        properties, etc.
        """
        ...
    
    def GetCenterDisplayPosition(self, p_float=..., p_float=..., p_float=...):
        """
        V.GetCenterDisplayPosition([float, float, float])
        C++: void GetCenterDisplayPosition(double pos[3]) override;
        
        Methods to Set/Get the coordinates of the two points defining
        this representation. Note that methods are available for both
        display and world coordinates.
        """
        ...
    
    def GetCenterWorldPosition(self, p_float=..., p_float=..., p_float=...):
        """
        V.GetCenterWorldPosition([float, float, float])
        C++: void GetCenterWorldPosition(double pos[3]) override;
        
        Methods to Set/Get the coordinates of the two points defining
        this representation. Note that methods are available for both
        display and world coordinates.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard VTK methods.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard VTK methods.
        """
        ...
    
    def GetPoint1DisplayPosition(self, p_float=..., p_float=..., p_float=...):
        """
        V.GetPoint1DisplayPosition([float, float, float])
        C++: void GetPoint1DisplayPosition(double pos[3]) override;
        
        Methods to Set/Get the coordinates of the two points defining
        this representation. Note that methods are available for both
        display and world coordinates.
        """
        ...
    
    def GetPoint1WorldPosition(self, p_float=..., p_float=..., p_float=...):
        """
        V.GetPoint1WorldPosition([float, float, float])
        C++: void GetPoint1WorldPosition(double pos[3]) override;
        
        Methods to Set/Get the coordinates of the two points defining
        this representation. Note that methods are available for both
        display and world coordinates.
        """
        ...
    
    def GetPoint2DisplayPosition(self, p_float=..., p_float=..., p_float=...):
        """
        V.GetPoint2DisplayPosition([float, float, float])
        C++: void GetPoint2DisplayPosition(double pos[3]) override;
        
        Methods to Set/Get the coordinates of the two points defining
        this representation. Note that methods are available for both
        display and world coordinates.
        """
        ...
    
    def GetPoint2WorldPosition(self, p_float=..., p_float=..., p_float=...):
        """
        V.GetPoint2WorldPosition([float, float, float])
        C++: void GetPoint2WorldPosition(double pos[3]) override;
        
        Methods to Set/Get the coordinates of the two points defining
        this representation. Note that methods are available for both
        display and world coordinates.
        """
        ...
    
    def GetRay1(self):
        """
        V.GetRay1() -> vtkLeaderActor2D
        C++: virtual vtkLeaderActor2D *GetRay1()
        
        Set/Get the three leaders used to create this representation. By
        obtaining these leaders the user can set the appropriate
        properties, etc.
        """
        ...
    
    def GetRay2(self):
        """
        V.GetRay2() -> vtkLeaderActor2D
        C++: virtual vtkLeaderActor2D *GetRay2()
        
        Set/Get the three leaders used to create this representation. By
        obtaining these leaders the user can set the appropriate
        properties, etc.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard VTK methods.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard VTK methods.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkAngleRepresentation2D
        C++: vtkAngleRepresentation2D *NewInstance()
        
        Standard VTK methods.
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: void ReleaseGraphicsResources(vtkWindow *w) override;
        
        Methods required by vtkProp superclass.
        """
        ...
    
    def RenderOverlay(self, vtkViewport):
        """
        V.RenderOverlay(vtkViewport) -> int
        C++: int RenderOverlay(vtkViewport *viewport) override;
        
        Methods required by vtkProp superclass.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkAngleRepresentation2D
        C++: static vtkAngleRepresentation2D *SafeDownCast(
            vtkObjectBase *o)
        
        Standard VTK methods.
        """
        ...
    
    def SetCenterDisplayPosition(self, p_float=..., p_float=..., p_float=...):
        """
        V.SetCenterDisplayPosition([float, float, float])
        C++: void SetCenterDisplayPosition(double pos[3]) override;
        
        Methods to Set/Get the coordinates of the two points defining
        this representation. Note that methods are available for both
        display and world coordinates.
        """
        ...
    
    def SetPoint1DisplayPosition(self, p_float=..., p_float=..., p_float=...):
        """
        V.SetPoint1DisplayPosition([float, float, float])
        C++: void SetPoint1DisplayPosition(double pos[3]) override;
        
        Methods to Set/Get the coordinates of the two points defining
        this representation. Note that methods are available for both
        display and world coordinates.
        """
        ...
    
    def SetPoint2DisplayPosition(self, p_float=..., p_float=..., p_float=...):
        """
        V.SetPoint2DisplayPosition([float, float, float])
        C++: void SetPoint2DisplayPosition(double pos[3]) override;
        
        Methods to Set/Get the coordinates of the two points defining
        this representation. Note that methods are available for both
        display and world coordinates.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


