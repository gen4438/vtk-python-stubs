"""
This type stub file was generated by pyright.
"""

from .vtkBorderRepresentation import vtkBorderRepresentation

class vtkScalarBarRepresentation(vtkBorderRepresentation):
    """
    vtkScalarBarRepresentation - represent scalar bar for
    vtkScalarBarWidget
    
    Superclass: vtkBorderRepresentation
    
    This class represents a scalar bar for a vtkScalarBarWidget.  This
    class provides support for interactively placing a scalar bar on the
    2D overlay plane.  The scalar bar is defined by an instance of
    vtkScalarBarActor.
    
    One specialty of this class is that if the scalar bar is moved near
    enough to an edge, it's orientation is flipped to match that edge.
    
    @sa
    vtkScalarBarWidget vtkWidgetRepresentation vtkScalarBarActor
    """
    def BuildRepresentation(self):
        """
        V.BuildRepresentation()
        C++: void BuildRepresentation() override;
        
        Satisfy the superclass' API.
        """
        ...
    
    def GetActors2D(self, vtkPropCollection):
        """
        V.GetActors2D(vtkPropCollection)
        C++: void GetActors2D(vtkPropCollection *collection) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def GetAutoOrient(self):
        """
        V.GetAutoOrient() -> bool
        C++: virtual bool GetAutoOrient()
        
        If true, the orientation will be updated based on the widget's
        position. Default is true.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Define standard methods.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Define standard methods.
        """
        ...
    
    def GetOrientation(self):
        """
        V.GetOrientation() -> int
        C++: int GetOrientation()
        
        Get/Set the orientation.
        """
        ...
    
    def GetScalarBarActor(self):
        """
        V.GetScalarBarActor() -> vtkScalarBarActor
        C++: virtual vtkScalarBarActor *GetScalarBarActor()
        
        The prop that is placed in the renderer.
        """
        ...
    
    def GetSize(self, p_float=..., p_float=...):
        """
        V.GetSize([float, float])
        C++: void GetSize(double size[2]) override;
        
        Satisfy the superclass' API.
        """
        ...
    
    def GetVisibility(self):
        """
        V.GetVisibility() -> int
        C++: vtkTypeBool GetVisibility() override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def HasTranslucentPolygonalGeometry(self):
        """
        V.HasTranslucentPolygonalGeometry() -> int
        C++: vtkTypeBool HasTranslucentPolygonalGeometry() override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Define standard methods.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Define standard methods.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkScalarBarRepresentation
        C++: vtkScalarBarRepresentation *NewInstance()
        
        Define standard methods.
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: void ReleaseGraphicsResources(vtkWindow *window) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def RenderOpaqueGeometry(self, vtkViewport):
        """
        V.RenderOpaqueGeometry(vtkViewport) -> int
        C++: int RenderOpaqueGeometry(vtkViewport *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def RenderOverlay(self, vtkViewport):
        """
        V.RenderOverlay(vtkViewport) -> int
        C++: int RenderOverlay(vtkViewport *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def RenderTranslucentPolygonalGeometry(self, vtkViewport):
        """
        V.RenderTranslucentPolygonalGeometry(vtkViewport) -> int
        C++: int RenderTranslucentPolygonalGeometry(vtkViewport *)
            override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkScalarBarRepresentation
        C++: static vtkScalarBarRepresentation *SafeDownCast(
            vtkObjectBase *o)
        
        Define standard methods.
        """
        ...
    
    def SetAutoOrient(self, bool):
        """
        V.SetAutoOrient(bool)
        C++: virtual void SetAutoOrient(bool _arg)
        
        If true, the orientation will be updated based on the widget's
        position. Default is true.
        """
        ...
    
    def SetOrientation(self, p_int):
        """
        V.SetOrientation(int)
        C++: void SetOrientation(int orient)
        
        Get/Set the orientation.
        """
        ...
    
    def SetScalarBarActor(self, vtkScalarBarActor):
        """
        V.SetScalarBarActor(vtkScalarBarActor)
        C++: virtual void SetScalarBarActor(vtkScalarBarActor *)
        
        The prop that is placed in the renderer.
        """
        ...
    
    def SetVisibility(self, p_int):
        """
        V.SetVisibility(int)
        C++: void SetVisibility(vtkTypeBool) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def WidgetInteraction(self, p_float=..., p_float=...):
        """
        V.WidgetInteraction([float, float])
        C++: void WidgetInteraction(double eventPos[2]) override;
        
        Satisfy the superclass' API.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


