"""
This type stub file was generated by pyright.
"""

from .vtkBorderRepresentation import vtkBorderRepresentation

class vtkProgressBarRepresentation(vtkBorderRepresentation):
    """
    vtkProgressBarRepresentation - represent a vtkProgressBarWidget
    
    Superclass: vtkBorderRepresentation
    
    This class is used to represent a vtkProgressBarWidget.
    
    @sa
    vtkProgressBarWidget
    """
    def BuildRepresentation(self):
        """
        V.BuildRepresentation()
        C++: void BuildRepresentation() override;
        
        Satisfy the superclasses' API.
        """
        ...
    
    def DrawBackgroundOff(self):
        """
        V.DrawBackgroundOff()
        C++: virtual void DrawBackgroundOff()
        
        Set/Get background visibility Default is off
        """
        ...
    
    def DrawBackgroundOn(self):
        """
        V.DrawBackgroundOn()
        C++: virtual void DrawBackgroundOn()
        
        Set/Get background visibility Default is off
        """
        ...
    
    def GetActors2D(self, vtkPropCollection):
        """
        V.GetActors2D(vtkPropCollection)
        C++: void GetActors2D(vtkPropCollection *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def GetBackgroundColor(self):
        """
        V.GetBackgroundColor() -> (float, float, float)
        C++: virtual double *GetBackgroundColor()
        
        Set/Get the background color Default is white
        """
        ...
    
    def GetDrawBackground(self):
        """
        V.GetDrawBackground() -> bool
        C++: virtual bool GetDrawBackground()
        
        Set/Get background visibility Default is off
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard VTK class methods.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard VTK class methods.
        """
        ...
    
    def GetProgressBarColor(self):
        """
        V.GetProgressBarColor() -> (float, float, float)
        C++: virtual double *GetProgressBarColor()
        
        Set/Get the progress bar color Default is pure green
        """
        ...
    
    def GetProgressRate(self):
        """
        V.GetProgressRate() -> float
        C++: virtual double GetProgressRate()
        
        Set/Get the progress rate of the progress bar, between 0 and 1
        default is 0
        """
        ...
    
    def GetProgressRateMaxValue(self):
        """
        V.GetProgressRateMaxValue() -> float
        C++: virtual double GetProgressRateMaxValue()
        
        Set/Get the progress rate of the progress bar, between 0 and 1
        default is 0
        """
        ...
    
    def GetProgressRateMinValue(self):
        """
        V.GetProgressRateMinValue() -> float
        C++: virtual double GetProgressRateMinValue()
        
        Set/Get the progress rate of the progress bar, between 0 and 1
        default is 0
        """
        ...
    
    def GetProperty(self):
        """
        V.GetProperty() -> vtkProperty2D
        C++: virtual vtkProperty2D *GetProperty()
        
        By obtaining this property you can specify the properties of the
        representation.
        """
        ...
    
    def GetSize(self, p_float=..., p_float=...):
        """
        V.GetSize([float, float])
        C++: void GetSize(double size[2]) override;
        
        Satisfy the superclasses' API.
        """
        ...
    
    def HasTranslucentPolygonalGeometry(self):
        """
        V.HasTranslucentPolygonalGeometry() -> int
        C++: vtkTypeBool HasTranslucentPolygonalGeometry() override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard VTK class methods.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard VTK class methods.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkProgressBarRepresentation
        C++: vtkProgressBarRepresentation *NewInstance()
        
        Standard VTK class methods.
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: void ReleaseGraphicsResources(vtkWindow *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def RenderOpaqueGeometry(self, vtkViewport):
        """
        V.RenderOpaqueGeometry(vtkViewport) -> int
        C++: int RenderOpaqueGeometry(vtkViewport *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def RenderOverlay(self, vtkViewport):
        """
        V.RenderOverlay(vtkViewport) -> int
        C++: int RenderOverlay(vtkViewport *) override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def RenderTranslucentPolygonalGeometry(self, vtkViewport):
        """
        V.RenderTranslucentPolygonalGeometry(vtkViewport) -> int
        C++: int RenderTranslucentPolygonalGeometry(vtkViewport *)
            override;
        
        These methods are necessary to make this representation behave as
        a vtkProp.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkProgressBarRepresentation
        C++: static vtkProgressBarRepresentation *SafeDownCast(
            vtkObjectBase *o)
        
        Standard VTK class methods.
        """
        ...
    
    def SetBackgroundColor(self, p_float, p_float_1, p_float_2):
        """
        V.SetBackgroundColor(float, float, float)
        C++: virtual void SetBackgroundColor(double _arg1, double _arg2,
            double _arg3)
        V.SetBackgroundColor((float, float, float))
        C++: virtual void SetBackgroundColor(const double _arg[3])
        
        Set/Get the background color Default is white
        """
        ...
    
    def SetDrawBackground(self, bool):
        """
        V.SetDrawBackground(bool)
        C++: virtual void SetDrawBackground(bool _arg)
        
        Set/Get background visibility Default is off
        """
        ...
    
    def SetProgressBarColor(self, p_float, p_float_1, p_float_2):
        """
        V.SetProgressBarColor(float, float, float)
        C++: virtual void SetProgressBarColor(double _arg1, double _arg2,
            double _arg3)
        V.SetProgressBarColor((float, float, float))
        C++: virtual void SetProgressBarColor(const double _arg[3])
        
        Set/Get the progress bar color Default is pure green
        """
        ...
    
    def SetProgressRate(self, p_float):
        """
        V.SetProgressRate(float)
        C++: virtual void SetProgressRate(double _arg)
        
        Set/Get the progress rate of the progress bar, between 0 and 1
        default is 0
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


