"""
This type stub file was generated by pyright.
"""

from .vtkAbstractWidget import vtkAbstractWidget

class vtkBoxWidget2(vtkAbstractWidget):
    """
    vtkBoxWidget2 - 3D widget for manipulating a box
    
    Superclass: vtkAbstractWidget
    
    This 3D widget interacts with a vtkBoxRepresentation class (i.e., it
    handles the events that drive its corresponding representation). The
    representation is assumed to represent a region of interest that is
    represented by an arbitrarily oriented hexahedron (or box) with
    interior face angles of 90 degrees (i.e., orthogonal faces). The
    representation manifests seven handles that can be moused on and
    manipulated, plus the six faces can also be interacted with. The
    first six handles are placed on the six faces, the seventh is in the
    center of the box. In addition, a bounding box outline is shown, the
    "faces" of which can be selected for object rotation or scaling. A
    nice feature of vtkBoxWidget2, like any 3D widget, will work with the
    current interactor style. That is, if vtkBoxWidget2 does not handle
    an event, then all other registered observers (including the
    interactor style) have an opportunity to process the event.
    Otherwise, the vtkBoxWidget will terminate the processing of the
    event that it handles.
    
    To use this widget, you generally pair it with a vtkBoxRepresentation
    (or a subclass). Various options are available in the representation
    for controlling how the widget appears, and how the widget functions.
    
    @par Event Bindings: By default, the widget responds to the following
    VTK events (i.e., it watches the vtkRenderWindowInteractor for these
    events):
    
    If one of the seven handles are selected:
      LeftButtonPressEvent - select the appropriate handle
      LeftButtonReleaseEvent - release the currently selected handle
      MouseMoveEvent - move the handle If one of the faces is selected:
      LeftButtonPressEvent - select a box face
      LeftButtonReleaseEvent - release the box face
      MouseMoveEvent - rotate the box In all the cases, independent of
    what is picked, the widget responds to the following VTK events:
      MiddleButtonPressEvent - translate the widget
      MiddleButtonReleaseEvent - release the widget
      RightButtonPressEvent - scale the widget's representation
      RightButtonReleaseEvent - stop scaling the widget
      MouseMoveEvent - scale (if right button) or move (if middle button)
    the widget 
    
    @par Event Bindings: Note that the event bindings described above can
    be changed using this class's vtkWidgetEventTranslator. This class
    translates VTK events into the vtkBoxWidget2's widget events:
    
    
      vtkWidgetEvent::Select -- some part of the widget has been selected
      vtkWidgetEvent::EndSelect -- the selection process has completed
      vtkWidgetEvent::Scale -- some part of the widget has been selected
      vtkWidgetEvent::EndScale -- the selection process has completed
      vtkWidgetEvent::Translate -- some part of the widget has been
    selected
      vtkWidgetEvent::EndTranslate -- the selection process has completed
      vtkWidgetEvent::Move -- a request for motion has been invoked 
    
    @par Event Bindings: In turn, when these widget events are processed,
    the vtkBoxWidget2 invokes the following VTK events on itself (which
    observers can listen for):
    
    
      vtkCommand::StartInteractionEvent (on vtkWidgetEvent::Select)
      vtkCommand::EndInteractionEvent (on vtkWidgetEvent::EndSelect)
      vtkCommand::InteractionEvent (on vtkWidgetEvent::Move) 
    
    @par Event Bindings: This class, and the affiliated
    vtkBoxRepresentation, are second generation VTK widgets. An earlier
    version of this functionality was defined in the class vtkBoxWidget.
    
    @sa
    vtkBoxRepresentation vtkBoxWidget
    """
    def CreateDefaultRepresentation(self):
        """
        V.CreateDefaultRepresentation()
        C++: void CreateDefaultRepresentation() override;
        
        Create the default widget representation if one is not set. By
        default, this is an instance of the vtkBoxRepresentation class.
        """
        ...
    
    def GetMoveFacesEnabled(self):
        """
        V.GetMoveFacesEnabled() -> int
        C++: virtual vtkTypeBool GetMoveFacesEnabled()
        
        Control the behavior of the widget (i.e., how it processes
        events). Translation, rotation, scaling and face movement can all
        be enabled and disabled. Scaling refers to scaling of the whole
        widget at once, (default is through right mouse button) while
        face movement refers to scaling of the widget one face (axis) at
        a time (default through grabbing one of the representation
        spherical handles).
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard class methods for type information and printing.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard class methods for type information and printing.
        """
        ...
    
    def GetRotationEnabled(self):
        """
        V.GetRotationEnabled() -> int
        C++: virtual vtkTypeBool GetRotationEnabled()
        
        Control the behavior of the widget (i.e., how it processes
        events). Translation, rotation, scaling and face movement can all
        be enabled and disabled. Scaling refers to scaling of the whole
        widget at once, (default is through right mouse button) while
        face movement refers to scaling of the widget one face (axis) at
        a time (default through grabbing one of the representation
        spherical handles).
        """
        ...
    
    def GetScalingEnabled(self):
        """
        V.GetScalingEnabled() -> int
        C++: virtual vtkTypeBool GetScalingEnabled()
        
        Control the behavior of the widget (i.e., how it processes
        events). Translation, rotation, scaling and face movement can all
        be enabled and disabled. Scaling refers to scaling of the whole
        widget at once, (default is through right mouse button) while
        face movement refers to scaling of the widget one face (axis) at
        a time (default through grabbing one of the representation
        spherical handles).
        """
        ...
    
    def GetTranslationEnabled(self):
        """
        V.GetTranslationEnabled() -> int
        C++: virtual vtkTypeBool GetTranslationEnabled()
        
        Control the behavior of the widget (i.e., how it processes
        events). Translation, rotation, scaling and face movement can all
        be enabled and disabled. Scaling refers to scaling of the whole
        widget at once, (default is through right mouse button) while
        face movement refers to scaling of the widget one face (axis) at
        a time (default through grabbing one of the representation
        spherical handles).
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard class methods for type information and printing.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard class methods for type information and printing.
        """
        ...
    
    def MoveFacesEnabledOff(self):
        """
        V.MoveFacesEnabledOff()
        C++: virtual void MoveFacesEnabledOff()
        
        Control the behavior of the widget (i.e., how it processes
        events). Translation, rotation, scaling and face movement can all
        be enabled and disabled. Scaling refers to scaling of the whole
        widget at once, (default is through right mouse button) while
        face movement refers to scaling of the widget one face (axis) at
        a time (default through grabbing one of the representation
        spherical handles).
        """
        ...
    
    def MoveFacesEnabledOn(self):
        """
        V.MoveFacesEnabledOn()
        C++: virtual void MoveFacesEnabledOn()
        
        Control the behavior of the widget (i.e., how it processes
        events). Translation, rotation, scaling and face movement can all
        be enabled and disabled. Scaling refers to scaling of the whole
        widget at once, (default is through right mouse button) while
        face movement refers to scaling of the widget one face (axis) at
        a time (default through grabbing one of the representation
        spherical handles).
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkBoxWidget2
        C++: vtkBoxWidget2 *NewInstance()
        
        Standard class methods for type information and printing.
        """
        ...
    
    def RotationEnabledOff(self):
        """
        V.RotationEnabledOff()
        C++: virtual void RotationEnabledOff()
        
        Control the behavior of the widget (i.e., how it processes
        events). Translation, rotation, scaling and face movement can all
        be enabled and disabled. Scaling refers to scaling of the whole
        widget at once, (default is through right mouse button) while
        face movement refers to scaling of the widget one face (axis) at
        a time (default through grabbing one of the representation
        spherical handles).
        """
        ...
    
    def RotationEnabledOn(self):
        """
        V.RotationEnabledOn()
        C++: virtual void RotationEnabledOn()
        
        Control the behavior of the widget (i.e., how it processes
        events). Translation, rotation, scaling and face movement can all
        be enabled and disabled. Scaling refers to scaling of the whole
        widget at once, (default is through right mouse button) while
        face movement refers to scaling of the widget one face (axis) at
        a time (default through grabbing one of the representation
        spherical handles).
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkBoxWidget2
        C++: static vtkBoxWidget2 *SafeDownCast(vtkObjectBase *o)
        
        Standard class methods for type information and printing.
        """
        ...
    
    def ScalingEnabledOff(self):
        """
        V.ScalingEnabledOff()
        C++: virtual void ScalingEnabledOff()
        
        Control the behavior of the widget (i.e., how it processes
        events). Translation, rotation, scaling and face movement can all
        be enabled and disabled. Scaling refers to scaling of the whole
        widget at once, (default is through right mouse button) while
        face movement refers to scaling of the widget one face (axis) at
        a time (default through grabbing one of the representation
        spherical handles).
        """
        ...
    
    def ScalingEnabledOn(self):
        """
        V.ScalingEnabledOn()
        C++: virtual void ScalingEnabledOn()
        
        Control the behavior of the widget (i.e., how it processes
        events). Translation, rotation, scaling and face movement can all
        be enabled and disabled. Scaling refers to scaling of the whole
        widget at once, (default is through right mouse button) while
        face movement refers to scaling of the widget one face (axis) at
        a time (default through grabbing one of the representation
        spherical handles).
        """
        ...
    
    def SetEnabled(self, p_int):
        """
        V.SetEnabled(int)
        C++: void SetEnabled(int enabling) override;
        
        Override superclasses' SetEnabled() method because the line
        widget must enable its internal handle widgets.
        """
        ...
    
    def SetMoveFacesEnabled(self, p_int):
        """
        V.SetMoveFacesEnabled(int)
        C++: virtual void SetMoveFacesEnabled(vtkTypeBool _arg)
        
        Control the behavior of the widget (i.e., how it processes
        events). Translation, rotation, scaling and face movement can all
        be enabled and disabled. Scaling refers to scaling of the whole
        widget at once, (default is through right mouse button) while
        face movement refers to scaling of the widget one face (axis) at
        a time (default through grabbing one of the representation
        spherical handles).
        """
        ...
    
    def SetRepresentation(self, vtkBoxRepresentation):
        """
        V.SetRepresentation(vtkBoxRepresentation)
        C++: void SetRepresentation(vtkBoxRepresentation *r)
        
        Specify an instance of vtkWidgetRepresentation used to represent
        this widget in the scene. Note that the representation is a
        subclass of vtkProp so it can be added to the renderer
        independent of the widget.
        """
        ...
    
    def SetRotationEnabled(self, p_int):
        """
        V.SetRotationEnabled(int)
        C++: virtual void SetRotationEnabled(vtkTypeBool _arg)
        
        Control the behavior of the widget (i.e., how it processes
        events). Translation, rotation, scaling and face movement can all
        be enabled and disabled. Scaling refers to scaling of the whole
        widget at once, (default is through right mouse button) while
        face movement refers to scaling of the widget one face (axis) at
        a time (default through grabbing one of the representation
        spherical handles).
        """
        ...
    
    def SetScalingEnabled(self, p_int):
        """
        V.SetScalingEnabled(int)
        C++: virtual void SetScalingEnabled(vtkTypeBool _arg)
        
        Control the behavior of the widget (i.e., how it processes
        events). Translation, rotation, scaling and face movement can all
        be enabled and disabled. Scaling refers to scaling of the whole
        widget at once, (default is through right mouse button) while
        face movement refers to scaling of the widget one face (axis) at
        a time (default through grabbing one of the representation
        spherical handles).
        """
        ...
    
    def SetTranslationEnabled(self, p_int):
        """
        V.SetTranslationEnabled(int)
        C++: virtual void SetTranslationEnabled(vtkTypeBool _arg)
        
        Control the behavior of the widget (i.e., how it processes
        events). Translation, rotation, scaling and face movement can all
        be enabled and disabled. Scaling refers to scaling of the whole
        widget at once, (default is through right mouse button) while
        face movement refers to scaling of the widget one face (axis) at
        a time (default through grabbing one of the representation
        spherical handles).
        """
        ...
    
    def TranslationEnabledOff(self):
        """
        V.TranslationEnabledOff()
        C++: virtual void TranslationEnabledOff()
        
        Control the behavior of the widget (i.e., how it processes
        events). Translation, rotation, scaling and face movement can all
        be enabled and disabled. Scaling refers to scaling of the whole
        widget at once, (default is through right mouse button) while
        face movement refers to scaling of the widget one face (axis) at
        a time (default through grabbing one of the representation
        spherical handles).
        """
        ...
    
    def TranslationEnabledOn(self):
        """
        V.TranslationEnabledOn()
        C++: virtual void TranslationEnabledOn()
        
        Control the behavior of the widget (i.e., how it processes
        events). Translation, rotation, scaling and face movement can all
        be enabled and disabled. Scaling refers to scaling of the whole
        widget at once, (default is through right mouse button) while
        face movement refers to scaling of the widget one face (axis) at
        a time (default through grabbing one of the representation
        spherical handles).
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


