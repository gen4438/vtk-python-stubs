"""
This type stub file was generated by pyright.
"""

from .vtkHoverWidget import vtkHoverWidget

class vtkBalloonWidget(vtkHoverWidget):
    """
    vtkBalloonWidget - popup text balloons above instance of vtkProp when
    hovering occurs
    
    Superclass: vtkHoverWidget
    
    The vtkBalloonWidget is used to popup text and/or an image when the
    mouse hovers over an instance of vtkProp. The widget keeps track of
    (vtkProp,vtkBalloon) pairs (where the internal vtkBalloon class is
    defined by a pair of vtkStdString and vtkImageData), and when the
    mouse stops moving for a user-specified period of time over the
    vtkProp, then the vtkBalloon is drawn nearby the vtkProp. Note that
    an instance of vtkBalloonRepresentation is used to draw the balloon.
    
    To use this widget, specify an instance of vtkBalloonWidget and a
    representation (e.g., vtkBalloonRepresentation). Then list all
    instances of vtkProp, a text string, and/or an instance of
    vtkImageData to be associated with each vtkProp. (Note that you can
    specify both text and an image, or just one or the other.) You may
    also wish to specify the hover delay (i.e., set in the superclass
    vtkHoverWidget).
    
    @par Event Bindings: By default, the widget observes the following
    VTK events (i.e., it watches the vtkRenderWindowInteractor for these
    events):
    
    
      MouseMoveEvent - occurs when mouse is moved in render window.
      TimerEvent - occurs when the time between events (e.g., mouse move)
                   is greater than TimerDuration.
      KeyPressEvent - when the "Enter" key is pressed after the balloon
    appears,
                      a callback is activated (e.g.,
    WidgetActivateEvent). 
    
    @par Event Bindings: Note that the event bindings described above can
    be changed using this class's vtkWidgetEventTranslator. This class
    translates VTK events into the vtkBalloonWidget's widget events:
    
    
      vtkWidgetEvent::Move -- start the timer
      vtkWidgetEvent::TimedOut -- when hovering occurs,
      vtkWidgetEvent::SelectAction -- activate any callbacks associated
                                      with the balloon. 
    
    @par Event Bindings: This widget invokes the following VTK events on
    itself (which observers can listen for):
    
    
      vtkCommand::TimerEvent (when hovering is determined to occur)
      vtkCommand::EndInteractionEvent (after a hover has occurred and the
                                       mouse begins moving again).
      vtkCommand::WidgetActivateEvent (when the balloon is selected with
    a
                                       keypress). 
    
    @sa
    vtkAbstractWidget
    """
    def AddBalloon(self, vtkProp, string, vtkImageData):
        """
        V.AddBalloon(vtkProp, string, vtkImageData)
        C++: void AddBalloon(vtkProp *prop, const char *str,
            vtkImageData *img)
        V.AddBalloon(vtkProp, string)
        C++: void AddBalloon(vtkProp *prop, const char *str)
        
        Add and remove text and/or an image to be associated with a
        vtkProp. You may add one or both of them.
        """
        ...
    
    def CreateDefaultRepresentation(self):
        """
        V.CreateDefaultRepresentation()
        C++: void CreateDefaultRepresentation() override;
        
        Create the default widget representation if one is not set.
        """
        ...
    
    def GetBalloonImage(self, vtkProp):
        """
        V.GetBalloonImage(vtkProp) -> vtkImageData
        C++: vtkImageData *GetBalloonImage(vtkProp *prop)
        
        Methods to retrieve the information associated with each vtkProp
        (i.e., the information that makes up each balloon). A nullptr
        will be returned if the vtkProp does not exist, or if a string or
        image have not been associated with the specified vtkProp.
        """
        ...
    
    def GetBalloonRepresentation(self):
        """
        V.GetBalloonRepresentation() -> vtkBalloonRepresentation
        C++: vtkBalloonRepresentation *GetBalloonRepresentation()
        
        Return the representation as a vtkBalloonRepresentation.
        """
        ...
    
    def GetBalloonString(self, vtkProp):
        """
        V.GetBalloonString(vtkProp) -> string
        C++: const char *GetBalloonString(vtkProp *prop)
        
        Methods to retrieve the information associated with each vtkProp
        (i.e., the information that makes up each balloon). A nullptr
        will be returned if the vtkProp does not exist, or if a string or
        image have not been associated with the specified vtkProp.
        """
        ...
    
    def GetCurrentProp(self):
        """
        V.GetCurrentProp() -> vtkProp
        C++: virtual vtkProp *GetCurrentProp()
        
        Return the current vtkProp that is being hovered over. Note that
        the value may be nullptr (if hovering over nothing or the mouse
        is moving).
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard methods for a VTK class.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard methods for a VTK class.
        """
        ...
    
    def GetPicker(self):
        """
        V.GetPicker() -> vtkAbstractPropPicker
        C++: virtual vtkAbstractPropPicker *GetPicker()
        
        Set/Get the object used to perform pick operations. Since the
        vtkBalloonWidget operates on vtkProps, the picker must be a
        subclass of vtkAbstractPropPicker. (Note: if not specified, an
        instance of vtkPropPicker is used.)
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard methods for a VTK class.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard methods for a VTK class.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkBalloonWidget
        C++: vtkBalloonWidget *NewInstance()
        
        Standard methods for a VTK class.
        """
        ...
    
    def RegisterPickers(self):
        """
        V.RegisterPickers()
        C++: void RegisterPickers() override;
        
        Register internal Pickers in the Picking Manager. Must be
        reimplemented by concrete widgets to register their pickers.
        """
        ...
    
    def RemoveBalloon(self, vtkProp):
        """
        V.RemoveBalloon(vtkProp)
        C++: void RemoveBalloon(vtkProp *prop)
        
        Add and remove text and/or an image to be associated with a
        vtkProp. You may add one or both of them.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkBalloonWidget
        C++: static vtkBalloonWidget *SafeDownCast(vtkObjectBase *o)
        
        Standard methods for a VTK class.
        """
        ...
    
    def SetEnabled(self, p_int):
        """
        V.SetEnabled(int)
        C++: void SetEnabled(int) override;
        
        The method for activating and deactivating this widget. This
        method must be overridden because it performs special
        timer-related operations.
        """
        ...
    
    def SetPicker(self, vtkAbstractPropPicker):
        """
        V.SetPicker(vtkAbstractPropPicker)
        C++: void SetPicker(vtkAbstractPropPicker *)
        
        Set/Get the object used to perform pick operations. Since the
        vtkBalloonWidget operates on vtkProps, the picker must be a
        subclass of vtkAbstractPropPicker. (Note: if not specified, an
        instance of vtkPropPicker is used.)
        """
        ...
    
    def SetRepresentation(self, vtkBalloonRepresentation):
        """
        V.SetRepresentation(vtkBalloonRepresentation)
        C++: void SetRepresentation(vtkBalloonRepresentation *r)
        
        Specify an instance of vtkWidgetRepresentation used to represent
        this widget in the scene. Note that the representation is a
        subclass of vtkProp so it can be added to the renderer
        independent of the widget.
        """
        ...
    
    def UpdateBalloonImage(self, vtkProp, vtkImageData):
        """
        V.UpdateBalloonImage(vtkProp, vtkImageData)
        C++: void UpdateBalloonImage(vtkProp *prop, vtkImageData *image)
        
        Update the balloon string or image. If the specified prop does
        not exist, then nothing is added not changed.
        """
        ...
    
    def UpdateBalloonString(self, vtkProp, string):
        """
        V.UpdateBalloonString(vtkProp, string)
        C++: void UpdateBalloonString(vtkProp *prop, const char *str)
        
        Update the balloon string or image. If the specified prop does
        not exist, then nothing is added not changed.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


