"""
This type stub file was generated by pyright.
"""

from .vtkImageWriter import vtkImageWriter

class vtkJPEGWriter(vtkImageWriter):
    """
    vtkJPEGWriter - Writes JPEG files.
    
    Superclass: vtkImageWriter
    
    vtkJPEGWriter writes JPEG files. It supports 1 and 3 component data
    of unsigned char. It relies on the IJG's libjpeg.  Thanks to IJG for
    supplying a public jpeg IO library.
    
    @sa
    vtkJPEGReader
    """
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetProgressive(self):
        """
        V.GetProgressive() -> int
        C++: virtual vtkTypeUBool GetProgressive()
        
        Progressive JPEG generation.
        """
        ...
    
    def GetQuality(self):
        """
        V.GetQuality() -> int
        C++: virtual int GetQuality()
        
        Compression quality. 0 = Low quality, 100 = High quality
        """
        ...
    
    def GetQualityMaxValue(self):
        """
        V.GetQualityMaxValue() -> int
        C++: virtual int GetQualityMaxValue()
        
        Compression quality. 0 = Low quality, 100 = High quality
        """
        ...
    
    def GetQualityMinValue(self):
        """
        V.GetQualityMinValue() -> int
        C++: virtual int GetQualityMinValue()
        
        Compression quality. 0 = Low quality, 100 = High quality
        """
        ...
    
    def GetResult(self):
        """
        V.GetResult() -> vtkUnsignedCharArray
        C++: virtual vtkUnsignedCharArray *GetResult()
        
        When writing to memory this is the result, it will be nullptr
        until the data is written the first time
        """
        ...
    
    def GetWriteToMemory(self):
        """
        V.GetWriteToMemory() -> int
        C++: virtual vtkTypeUBool GetWriteToMemory()
        
        Write the image to memory (a vtkUnsignedCharArray)
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkJPEGWriter
        C++: vtkJPEGWriter *NewInstance()
        """
        ...
    
    def ProgressiveOff(self):
        """
        V.ProgressiveOff()
        C++: virtual void ProgressiveOff()
        
        Progressive JPEG generation.
        """
        ...
    
    def ProgressiveOn(self):
        """
        V.ProgressiveOn()
        C++: virtual void ProgressiveOn()
        
        Progressive JPEG generation.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkJPEGWriter
        C++: static vtkJPEGWriter *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetProgressive(self, p_int):
        """
        V.SetProgressive(int)
        C++: virtual void SetProgressive(vtkTypeUBool _arg)
        
        Progressive JPEG generation.
        """
        ...
    
    def SetQuality(self, p_int):
        """
        V.SetQuality(int)
        C++: virtual void SetQuality(int _arg)
        
        Compression quality. 0 = Low quality, 100 = High quality
        """
        ...
    
    def SetResult(self, vtkUnsignedCharArray):
        """
        V.SetResult(vtkUnsignedCharArray)
        C++: virtual void SetResult(vtkUnsignedCharArray *)
        
        When writing to memory this is the result, it will be nullptr
        until the data is written the first time
        """
        ...
    
    def SetWriteToMemory(self, p_int):
        """
        V.SetWriteToMemory(int)
        C++: virtual void SetWriteToMemory(vtkTypeUBool _arg)
        
        Write the image to memory (a vtkUnsignedCharArray)
        """
        ...
    
    def Write(self):
        """
        V.Write()
        C++: void Write() override;
        
        The main interface which triggers the writer to start.
        """
        ...
    
    def WriteToMemoryOff(self):
        """
        V.WriteToMemoryOff()
        C++: virtual void WriteToMemoryOff()
        
        Write the image to memory (a vtkUnsignedCharArray)
        """
        ...
    
    def WriteToMemoryOn(self):
        """
        V.WriteToMemoryOn()
        C++: virtual void WriteToMemoryOn()
        
        Write the image to memory (a vtkUnsignedCharArray)
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


