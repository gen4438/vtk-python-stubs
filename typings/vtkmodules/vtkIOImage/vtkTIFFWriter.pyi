"""
This type stub file was generated by pyright.
"""

from .vtkImageWriter import vtkImageWriter

class vtkTIFFWriter(vtkImageWriter):
    """
    vtkTIFFWriter - write out image data as a TIFF file
    
    Superclass: vtkImageWriter
    
    vtkTIFFWriter writes image data as a TIFF data file. Data can be
    written uncompressed or compressed. Several forms of compression are
    supported including packed bits, JPEG, deflation, and LZW. (Note: LZW
    compression is currently under patent in the US and is disabled until
    the patent expires. However, the mechanism for supporting this
    compression is available for those with a valid license or to whom
    the patent does not apply.)
    """
    def GetCompression(self):
        """
        V.GetCompression() -> int
        C++: virtual int GetCompression()
        
        Set compression type. Sinze LZW compression is patented outside
        US, the additional work steps have to be taken in order to use
        that compression.
        """
        ...
    
    def GetCompressionMaxValue(self):
        """
        V.GetCompressionMaxValue() -> int
        C++: virtual int GetCompressionMaxValue()
        
        Set compression type. Sinze LZW compression is patented outside
        US, the additional work steps have to be taken in order to use
        that compression.
        """
        ...
    
    def GetCompressionMinValue(self):
        """
        V.GetCompressionMinValue() -> int
        C++: virtual int GetCompressionMinValue()
        
        Set compression type. Sinze LZW compression is patented outside
        US, the additional work steps have to be taken in order to use
        that compression.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkTIFFWriter
        C++: vtkTIFFWriter *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkTIFFWriter
        C++: static vtkTIFFWriter *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetCompression(self, p_int):
        """
        V.SetCompression(int)
        C++: virtual void SetCompression(int _arg)
        
        Set compression type. Sinze LZW compression is patented outside
        US, the additional work steps have to be taken in order to use
        that compression.
        """
        ...
    
    def SetCompressionToDeflate(self):
        """
        V.SetCompressionToDeflate()
        C++: void SetCompressionToDeflate()
        
        Set compression type. Sinze LZW compression is patented outside
        US, the additional work steps have to be taken in order to use
        that compression.
        """
        ...
    
    def SetCompressionToJPEG(self):
        """
        V.SetCompressionToJPEG()
        C++: void SetCompressionToJPEG()
        
        Set compression type. Sinze LZW compression is patented outside
        US, the additional work steps have to be taken in order to use
        that compression.
        """
        ...
    
    def SetCompressionToLZW(self):
        """
        V.SetCompressionToLZW()
        C++: void SetCompressionToLZW()
        
        Set compression type. Sinze LZW compression is patented outside
        US, the additional work steps have to be taken in order to use
        that compression.
        """
        ...
    
    def SetCompressionToNoCompression(self):
        """
        V.SetCompressionToNoCompression()
        C++: void SetCompressionToNoCompression()
        
        Set compression type. Sinze LZW compression is patented outside
        US, the additional work steps have to be taken in order to use
        that compression.
        """
        ...
    
    def SetCompressionToPackBits(self):
        """
        V.SetCompressionToPackBits()
        C++: void SetCompressionToPackBits()
        
        Set compression type. Sinze LZW compression is patented outside
        US, the additional work steps have to be taken in order to use
        that compression.
        """
        ...
    
    def Write(self):
        """
        V.Write()
        C++: void Write() override;
        
        The main interface which triggers the writer to start.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    Deflate = ...
    JPEG = ...
    LZW = ...
    NoCompression = ...
    PackBits = ...
    __dict__ = ...
    __vtkname__ = ...


