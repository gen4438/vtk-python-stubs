"""
This type stub file was generated by pyright.
"""

from .vtkImageReader2 import vtkImageReader2

class vtkTIFFReader(vtkImageReader2):
    """
    vtkTIFFReader - read TIFF files
    
    Superclass: vtkImageReader2
    
    vtkTIFFReader is a source object that reads TIFF files. It should be
    able to read almost any TIFF file
    
    @sa
    vtkTIFFWriter
    """
    def CanReadFile(self, string):
        """
        V.CanReadFile(string) -> int
        C++: int CanReadFile(const char *fname) override;
        
        Is the given file name a tiff file?
        """
        ...
    
    def GetDescriptiveName(self):
        """
        V.GetDescriptiveName() -> string
        C++: const char *GetDescriptiveName() override;
        
        Return a descriptive name for the file format that might be
        useful in a GUI.
        """
        ...
    
    def GetFileExtensions(self):
        """
        V.GetFileExtensions() -> string
        C++: const char *GetFileExtensions() override;
        
        Get the file extensions for this format. Returns a string with a
        space separated list of extensions in the format .extension
        """
        ...
    
    def GetIgnoreColorMap(self):
        """
        V.GetIgnoreColorMap() -> bool
        C++: virtual bool GetIgnoreColorMap()
        
        When set to true (default false), TIFFTAG_COLORMAP, if any, will
        be ignored.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetOrientationType(self):
        """
        V.GetOrientationType() -> int
        C++: virtual unsigned int GetOrientationType()
        """
        ...
    
    def GetOrientationTypeSpecifiedFlag(self):
        """
        V.GetOrientationTypeSpecifiedFlag() -> bool
        C++: virtual bool GetOrientationTypeSpecifiedFlag()
        
        Get method to check if orientation type is specified.
        """
        ...
    
    def GetOriginSpecifiedFlag(self):
        """
        V.GetOriginSpecifiedFlag() -> bool
        C++: virtual bool GetOriginSpecifiedFlag()
        
        Set/get methods to see if manual origin has been set.
        """
        ...
    
    def GetSpacingSpecifiedFlag(self):
        """
        V.GetSpacingSpecifiedFlag() -> bool
        C++: virtual bool GetSpacingSpecifiedFlag()
        
        Set/get if the spacing flag has been specified.
        """
        ...
    
    def IgnoreColorMapOff(self):
        """
        V.IgnoreColorMapOff()
        C++: virtual void IgnoreColorMapOff()
        
        When set to true (default false), TIFFTAG_COLORMAP, if any, will
        be ignored.
        """
        ...
    
    def IgnoreColorMapOn(self):
        """
        V.IgnoreColorMapOn()
        C++: virtual void IgnoreColorMapOn()
        
        When set to true (default false), TIFFTAG_COLORMAP, if any, will
        be ignored.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkTIFFReader
        C++: vtkTIFFReader *NewInstance()
        """
        ...
    
    def OriginSpecifiedFlagOff(self):
        """
        V.OriginSpecifiedFlagOff()
        C++: virtual void OriginSpecifiedFlagOff()
        
        Set/get methods to see if manual origin has been set.
        """
        ...
    
    def OriginSpecifiedFlagOn(self):
        """
        V.OriginSpecifiedFlagOn()
        C++: virtual void OriginSpecifiedFlagOn()
        
        Set/get methods to see if manual origin has been set.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkTIFFReader
        C++: static vtkTIFFReader *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetIgnoreColorMap(self, bool):
        """
        V.SetIgnoreColorMap(bool)
        C++: virtual void SetIgnoreColorMap(bool _arg)
        
        When set to true (default false), TIFFTAG_COLORMAP, if any, will
        be ignored.
        """
        ...
    
    def SetOrientationType(self, p_int):
        """
        V.SetOrientationType(int)
        C++: void SetOrientationType(unsigned int orientationType)
        
        Set orientation type ORIENTATION_TOPLEFT         1       (row 0
        top, col 0 lhs) ORIENTATION_TOPRIGHT        2       (row 0 top,
        col 0 rhs) ORIENTATION_BOTRIGHT        3       (row 0 bottom, col
        0 rhs) ORIENTATION_BOTLEFT         4       (row 0 bottom, col 0
        lhs) ORIENTATION_LEFTTOP         5       (row 0 lhs, col 0 top)
        ORIENTATION_RIGHTTOP        6       (row 0 rhs, col 0 top)
        ORIENTATION_RIGHTBOT        7       (row 0 rhs, col 0 bottom)
        ORIENTATION_LEFTBOT         8       (row 0 lhs, col 0 bottom)
        User need to explicitly include vtk_tiff.h header to have access
        to those #define
        """
        ...
    
    def SetOriginSpecifiedFlag(self, bool):
        """
        V.SetOriginSpecifiedFlag(bool)
        C++: virtual void SetOriginSpecifiedFlag(bool _arg)
        
        Set/get methods to see if manual origin has been set.
        """
        ...
    
    def SetSpacingSpecifiedFlag(self, bool):
        """
        V.SetSpacingSpecifiedFlag(bool)
        C++: virtual void SetSpacingSpecifiedFlag(bool _arg)
        
        Set/get if the spacing flag has been specified.
        """
        ...
    
    def SpacingSpecifiedFlagOff(self):
        """
        V.SpacingSpecifiedFlagOff()
        C++: virtual void SpacingSpecifiedFlagOff()
        
        Set/get if the spacing flag has been specified.
        """
        ...
    
    def SpacingSpecifiedFlagOn(self):
        """
        V.SpacingSpecifiedFlagOn()
        C++: virtual void SpacingSpecifiedFlagOn()
        
        Set/get if the spacing flag has been specified.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


