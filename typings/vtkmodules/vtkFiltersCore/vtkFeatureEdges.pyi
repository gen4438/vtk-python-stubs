"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkCommonExecutionModel as __vtkmodules_vtkCommonExecutionModel

class vtkFeatureEdges(__vtkmodules_vtkCommonExecutionModel.vtkPolyDataAlgorithm):
    """
    vtkFeatureEdges - extract interior, boundary, non-manifold, and/or
             sharp edges from polygonal data
    
    Superclass: vtkPolyDataAlgorithm
    
    vtkFeatureEdges is a filter to extract special types of edges from
    input polygonal data. These edges are either 1) boundary (used by one
    polygon) or a line cell; 2) non-manifold (used by three or more
    polygons); 3) feature edges (edges used by two triangles and whose
    dihedral angle > FeatureAngle); or 4) manifold edges (edges used by
    exactly two polygons). These edges may be extracted in any
    combination. Edges may also be "colored" (i.e., scalar values
    assigned) based on edge type. The cell coloring is assigned to the
    cell data of the extracted edges.
    
    @warning
    To see the coloring of the lines you may have to set the ScalarMode
    instance variable of the mapper to SetScalarModeToUseCellData().
    (This is only a problem if there are point data scalars.)
    
    @sa
    vtkExtractEdges
    """
    def BoundaryEdgesOff(self):
        """
        V.BoundaryEdgesOff()
        C++: virtual void BoundaryEdgesOff()
        
        Turn on/off the extraction of boundary edges.
        """
        ...
    
    def BoundaryEdgesOn(self):
        """
        V.BoundaryEdgesOn()
        C++: virtual void BoundaryEdgesOn()
        
        Turn on/off the extraction of boundary edges.
        """
        ...
    
    def ColoringOff(self):
        """
        V.ColoringOff()
        C++: virtual void ColoringOff()
        
        Turn on/off the coloring of edges by type.
        """
        ...
    
    def ColoringOn(self):
        """
        V.ColoringOn()
        C++: virtual void ColoringOn()
        
        Turn on/off the coloring of edges by type.
        """
        ...
    
    def CreateDefaultLocator(self):
        """
        V.CreateDefaultLocator()
        C++: void CreateDefaultLocator()
        
        Create default locator. Used to create one when none is
        specified.
        """
        ...
    
    def ExtractAllEdgeTypesOff(self):
        """
        V.ExtractAllEdgeTypesOff()
        C++: void ExtractAllEdgeTypesOff()
        
        Methods for turning the extraction of all types of edges on; and
        turning the extraction of all types of edges off.
        """
        ...
    
    def ExtractAllEdgeTypesOn(self):
        """
        V.ExtractAllEdgeTypesOn()
        C++: void ExtractAllEdgeTypesOn()
        
        Methods for turning the extraction of all types of edges on; and
        turning the extraction of all types of edges off.
        """
        ...
    
    def FeatureEdgesOff(self):
        """
        V.FeatureEdgesOff()
        C++: virtual void FeatureEdgesOff()
        
        Turn on/off the extraction of feature edges.
        """
        ...
    
    def FeatureEdgesOn(self):
        """
        V.FeatureEdgesOn()
        C++: virtual void FeatureEdgesOn()
        
        Turn on/off the extraction of feature edges.
        """
        ...
    
    def GetBoundaryEdges(self):
        """
        V.GetBoundaryEdges() -> bool
        C++: virtual bool GetBoundaryEdges()
        
        Turn on/off the extraction of boundary edges.
        """
        ...
    
    def GetColoring(self):
        """
        V.GetColoring() -> bool
        C++: virtual bool GetColoring()
        
        Turn on/off the coloring of edges by type.
        """
        ...
    
    def GetFeatureAngle(self):
        """
        V.GetFeatureAngle() -> float
        C++: virtual double GetFeatureAngle()
        
        Specify the feature angle for extracting feature edges.
        """
        ...
    
    def GetFeatureAngleMaxValue(self):
        """
        V.GetFeatureAngleMaxValue() -> float
        C++: virtual double GetFeatureAngleMaxValue()
        
        Specify the feature angle for extracting feature edges.
        """
        ...
    
    def GetFeatureAngleMinValue(self):
        """
        V.GetFeatureAngleMinValue() -> float
        C++: virtual double GetFeatureAngleMinValue()
        
        Specify the feature angle for extracting feature edges.
        """
        ...
    
    def GetFeatureEdges(self):
        """
        V.GetFeatureEdges() -> bool
        C++: virtual bool GetFeatureEdges()
        
        Turn on/off the extraction of feature edges.
        """
        ...
    
    def GetLocator(self):
        """
        V.GetLocator() -> vtkIncrementalPointLocator
        C++: virtual vtkIncrementalPointLocator *GetLocator()
        
        Set / get a spatial locator for merging points. By default an
        instance of vtkMergePoints is used.
        """
        ...
    
    def GetManifoldEdges(self):
        """
        V.GetManifoldEdges() -> bool
        C++: virtual bool GetManifoldEdges()
        
        Turn on/off the extraction of manifold edges. This typically
        correspond to interior edges.
        """
        ...
    
    def GetMTime(self):
        """
        V.GetMTime() -> int
        C++: vtkMTimeType GetMTime() override;
        
        Return MTime also considering the locator.
        """
        ...
    
    def GetNonManifoldEdges(self):
        """
        V.GetNonManifoldEdges() -> bool
        C++: virtual bool GetNonManifoldEdges()
        
        Turn on/off the extraction of non-manifold edges.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard methods for type information and printing.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard methods for type information and printing.
        """
        ...
    
    def GetOutputPointsPrecision(self):
        """
        V.GetOutputPointsPrecision() -> int
        C++: virtual int GetOutputPointsPrecision()
        
        Set/get the desired precision for the output point type. See the
        documentation for the vtkAlgorithm::DesiredOutputPrecision enum
        for an explanation of the available precision settings.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard methods for type information and printing.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard methods for type information and printing.
        """
        ...
    
    def ManifoldEdgesOff(self):
        """
        V.ManifoldEdgesOff()
        C++: virtual void ManifoldEdgesOff()
        
        Turn on/off the extraction of manifold edges. This typically
        correspond to interior edges.
        """
        ...
    
    def ManifoldEdgesOn(self):
        """
        V.ManifoldEdgesOn()
        C++: virtual void ManifoldEdgesOn()
        
        Turn on/off the extraction of manifold edges. This typically
        correspond to interior edges.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkFeatureEdges
        C++: vtkFeatureEdges *NewInstance()
        
        Standard methods for type information and printing.
        """
        ...
    
    def NonManifoldEdgesOff(self):
        """
        V.NonManifoldEdgesOff()
        C++: virtual void NonManifoldEdgesOff()
        
        Turn on/off the extraction of non-manifold edges.
        """
        ...
    
    def NonManifoldEdgesOn(self):
        """
        V.NonManifoldEdgesOn()
        C++: virtual void NonManifoldEdgesOn()
        
        Turn on/off the extraction of non-manifold edges.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkFeatureEdges
        C++: static vtkFeatureEdges *SafeDownCast(vtkObjectBase *o)
        
        Standard methods for type information and printing.
        """
        ...
    
    def SetBoundaryEdges(self, bool):
        """
        V.SetBoundaryEdges(bool)
        C++: virtual void SetBoundaryEdges(bool _arg)
        
        Turn on/off the extraction of boundary edges.
        """
        ...
    
    def SetColoring(self, bool):
        """
        V.SetColoring(bool)
        C++: virtual void SetColoring(bool _arg)
        
        Turn on/off the coloring of edges by type.
        """
        ...
    
    def SetFeatureAngle(self, p_float):
        """
        V.SetFeatureAngle(float)
        C++: virtual void SetFeatureAngle(double _arg)
        
        Specify the feature angle for extracting feature edges.
        """
        ...
    
    def SetFeatureEdges(self, bool):
        """
        V.SetFeatureEdges(bool)
        C++: virtual void SetFeatureEdges(bool _arg)
        
        Turn on/off the extraction of feature edges.
        """
        ...
    
    def SetLocator(self, vtkIncrementalPointLocator):
        """
        V.SetLocator(vtkIncrementalPointLocator)
        C++: void SetLocator(vtkIncrementalPointLocator *locator)
        
        Set / get a spatial locator for merging points. By default an
        instance of vtkMergePoints is used.
        """
        ...
    
    def SetManifoldEdges(self, bool):
        """
        V.SetManifoldEdges(bool)
        C++: virtual void SetManifoldEdges(bool _arg)
        
        Turn on/off the extraction of manifold edges. This typically
        correspond to interior edges.
        """
        ...
    
    def SetNonManifoldEdges(self, bool):
        """
        V.SetNonManifoldEdges(bool)
        C++: virtual void SetNonManifoldEdges(bool _arg)
        
        Turn on/off the extraction of non-manifold edges.
        """
        ...
    
    def SetOutputPointsPrecision(self, p_int):
        """
        V.SetOutputPointsPrecision(int)
        C++: virtual void SetOutputPointsPrecision(int _arg)
        
        Set/get the desired precision for the output point type. See the
        documentation for the vtkAlgorithm::DesiredOutputPrecision enum
        for an explanation of the available precision settings.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


