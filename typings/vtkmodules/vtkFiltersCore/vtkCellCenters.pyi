"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkCommonExecutionModel as __vtkmodules_vtkCommonExecutionModel

class vtkCellCenters(__vtkmodules_vtkCommonExecutionModel.vtkPolyDataAlgorithm):
    """
    vtkCellCenters - generate points at center of cells
    
    Superclass: vtkPolyDataAlgorithm
    
    vtkCellCenters is a filter that takes as input any dataset and
    generates on output points at the center of the cells in the dataset.
    These points can be used for placing glyphs (vtkGlyph3D) or labeling
    (vtkLabeledDataMapper). (The center is the parametric center of the
    cell, not necessarily the geometric or bounding box center.) The cell
    attributes will be associated with the points on output.
    
    @warning
    You can choose to generate just points or points and vertex cells.
    Vertex cells are drawn during rendering; points are not. Use the ivar
    VertexCells to generate cells.
    
    ote Empty cells will be ignored but will require a one by one cell to
    point data copy that will make the processing slower.
    
    @sa
    vtkGlyph3D vtkLabeledDataMapper
    """
    def ComputeCellCenters(self, vtkDataSet, vtkDoubleArray):
        """
        V.ComputeCellCenters(vtkDataSet, vtkDoubleArray)
        C++: static void ComputeCellCenters(vtkDataSet *dataset,
            vtkDoubleArray *centers)
        
        Compute centers of cells from a dataset, storing them in the
        centers array.
        """
        ...
    
    def CopyArraysOff(self):
        """
        V.CopyArraysOff()
        C++: virtual void CopyArraysOff()
        
        Enable/disable whether input cell data arrays should be passed
        through (or copied) as output point data arrays. Default is
        `true` i.e. the arrays will be propagated.
        """
        ...
    
    def CopyArraysOn(self):
        """
        V.CopyArraysOn()
        C++: virtual void CopyArraysOn()
        
        Enable/disable whether input cell data arrays should be passed
        through (or copied) as output point data arrays. Default is
        `true` i.e. the arrays will be propagated.
        """
        ...
    
    def GetCopyArrays(self):
        """
        V.GetCopyArrays() -> bool
        C++: virtual bool GetCopyArrays()
        
        Enable/disable whether input cell data arrays should be passed
        through (or copied) as output point data arrays. Default is
        `true` i.e. the arrays will be propagated.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetVertexCells(self):
        """
        V.GetVertexCells() -> bool
        C++: virtual bool GetVertexCells()
        
        Enable/disable the generation of vertex cells. The default is
        Off.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkCellCenters
        C++: vtkCellCenters *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkCellCenters
        C++: static vtkCellCenters *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetCopyArrays(self, bool):
        """
        V.SetCopyArrays(bool)
        C++: virtual void SetCopyArrays(bool _arg)
        
        Enable/disable whether input cell data arrays should be passed
        through (or copied) as output point data arrays. Default is
        `true` i.e. the arrays will be propagated.
        """
        ...
    
    def SetVertexCells(self, bool):
        """
        V.SetVertexCells(bool)
        C++: virtual void SetVertexCells(bool _arg)
        
        Enable/disable the generation of vertex cells. The default is
        Off.
        """
        ...
    
    def VertexCellsOff(self):
        """
        V.VertexCellsOff()
        C++: virtual void VertexCellsOff()
        
        Enable/disable the generation of vertex cells. The default is
        Off.
        """
        ...
    
    def VertexCellsOn(self):
        """
        V.VertexCellsOn()
        C++: virtual void VertexCellsOn()
        
        Enable/disable the generation of vertex cells. The default is
        Off.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


