"""
This type stub file was generated by pyright.
"""

from .vtkOpenGLPolyDataMapper import vtkOpenGLPolyDataMapper

class vtkCompositePolyDataMapper2(vtkOpenGLPolyDataMapper):
    """
    vtkCompositePolyDataMapper2 - mapper for composite dataset consisting
    of polygonal data.
    
    Superclass: vtkOpenGLPolyDataMapper
    
    vtkCompositePolyDataMapper2 is similar to vtkCompositePolyDataMapper
    except that instead of creating individual mapper for each block in
    the composite dataset, it iterates over the blocks internally.
    """
    def ColorMissingArraysWithNanColorOff(self):
        """
        V.ColorMissingArraysWithNanColorOff()
        C++: virtual void ColorMissingArraysWithNanColorOff()
        """
        ...
    
    def ColorMissingArraysWithNanColorOn(self):
        """
        V.ColorMissingArraysWithNanColorOn()
        C++: virtual void ColorMissingArraysWithNanColorOn()
        """
        ...
    
    def GetBlockColor(self, p_int):
        """
        V.GetBlockColor(int) -> (float, ...)
        C++: double *GetBlockColor(unsigned int index)
        
        Set/get the color for a block given its flat index.
        """
        ...
    
    def GetBlockOpacity(self, p_int):
        """
        V.GetBlockOpacity(int) -> float
        C++: double GetBlockOpacity(unsigned int index)
        
        Set/get the opacity for a block given its flat index.
        """
        ...
    
    def GetBlockVisibility(self, p_int):
        """
        V.GetBlockVisibility(int) -> bool
        C++: bool GetBlockVisibility(unsigned int index)
        
        Set/get the visibility for a block given its flat index.
        """
        ...
    
    def GetColorMissingArraysWithNanColor(self):
        """
        V.GetColorMissingArraysWithNanColor() -> bool
        C++: virtual bool GetColorMissingArraysWithNanColor()
        """
        ...
    
    def GetCompositeDataDisplayAttributes(self):
        """
        V.GetCompositeDataDisplayAttributes()
            -> vtkCompositeDataDisplayAttributes
        C++: vtkCompositeDataDisplayAttributes *GetCompositeDataDisplayAttributes(
            )
        
        Set/get the composite data set attributes.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def HasOpaqueGeometry(self):
        """
        V.HasOpaqueGeometry() -> bool
        C++: bool HasOpaqueGeometry() override;
        
        Some introspection on the type of data the mapper will render
        used by props to determine if they should invoke the mapper on a
        specific rendering pass.
        """
        ...
    
    def HasTranslucentPolygonalGeometry(self):
        """
        V.HasTranslucentPolygonalGeometry() -> bool
        C++: bool HasTranslucentPolygonalGeometry() override;
        
        Some introspection on the type of data the mapper will render
        used by props to determine if they should invoke the mapper on a
        specific rendering pass.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkCompositePolyDataMapper2
        C++: vtkCompositePolyDataMapper2 *NewInstance()
        """
        ...
    
    def ProcessSelectorPixelBuffers(self, vtkHardwareSelector, Stvector_IjE, vtkProp):
        """
        V.ProcessSelectorPixelBuffers(vtkHardwareSelector, Stvector_IjE,
            vtkProp)
        C++: void ProcessSelectorPixelBuffers(vtkHardwareSelector *sel,
            std::vector<unsigned int> &pixeloffsets, vtkProp *prop)
            override;
        
        allows a mapper to update a selections color buffers Called from
        a prop which in turn is called from the selector
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: void ReleaseGraphicsResources(vtkWindow *) override;
        
        Release any graphics resources that are being consumed by this
        mapper. The parameter window could be used to determine which
        graphic resources to release.
        """
        ...
    
    def RemoveBlockColor(self, p_int):
        """
        V.RemoveBlockColor(int)
        C++: void RemoveBlockColor(unsigned int index)
        
        Set/get the color for a block given its flat index.
        """
        ...
    
    def RemoveBlockColors(self):
        """
        V.RemoveBlockColors()
        C++: void RemoveBlockColors()
        
        Set/get the color for a block given its flat index.
        """
        ...
    
    def RemoveBlockOpacities(self):
        """
        V.RemoveBlockOpacities()
        C++: void RemoveBlockOpacities()
        
        Set/get the opacity for a block given its flat index.
        """
        ...
    
    def RemoveBlockOpacity(self, p_int):
        """
        V.RemoveBlockOpacity(int)
        C++: void RemoveBlockOpacity(unsigned int index)
        
        Set/get the opacity for a block given its flat index.
        """
        ...
    
    def RemoveBlockVisibilites(self):
        """
        V.RemoveBlockVisibilites()
        C++: void RemoveBlockVisibilites()
        """
        ...
    
    def RemoveBlockVisibilities(self):
        """
        V.RemoveBlockVisibilities()
        C++: void RemoveBlockVisibilities()
        
        Set/get the visibility for a block given its flat index.
        """
        ...
    
    def RemoveBlockVisibility(self, p_int):
        """
        V.RemoveBlockVisibility(int)
        C++: void RemoveBlockVisibility(unsigned int index)
        
        Set/get the visibility for a block given its flat index.
        """
        ...
    
    def Render(self, vtkRenderer, vtkActor):
        """
        V.Render(vtkRenderer, vtkActor)
        C++: void Render(vtkRenderer *ren, vtkActor *act) override;
        
        This calls RenderPiece (in a for loop if streaming is necessary).
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkCompositePolyDataMapper2
        C++: static vtkCompositePolyDataMapper2 *SafeDownCast(
            vtkObjectBase *o)
        """
        ...
    
    def SetBlockColor(self, p_int, p_float=..., p_float=..., p_float=...):
        """
        V.SetBlockColor(int, [float, float, float])
        C++: void SetBlockColor(unsigned int index, double color[3])
        V.SetBlockColor(int, float, float, float)
        C++: void SetBlockColor(unsigned int index, double r, double g,
            double b)
        
        Set/get the color for a block given its flat index.
        """
        ...
    
    def SetBlockOpacity(self, p_int, p_float):
        """
        V.SetBlockOpacity(int, float)
        C++: void SetBlockOpacity(unsigned int index, double opacity)
        
        Set/get the opacity for a block given its flat index.
        """
        ...
    
    def SetBlockVisibility(self, p_int, bool):
        """
        V.SetBlockVisibility(int, bool)
        C++: void SetBlockVisibility(unsigned int index, bool visible)
        
        Set/get the visibility for a block given its flat index.
        """
        ...
    
    def SetColorMissingArraysWithNanColor(self, bool):
        """
        V.SetColorMissingArraysWithNanColor(bool)
        C++: virtual void SetColorMissingArraysWithNanColor(bool _arg)
        """
        ...
    
    def SetCompositeDataDisplayAttributes(self, vtkCompositeDataDisplayAttributes):
        """
        V.SetCompositeDataDisplayAttributes(
            vtkCompositeDataDisplayAttributes)
        C++: void SetCompositeDataDisplayAttributes(
            vtkCompositeDataDisplayAttributes *attributes)
        
        Set/get the composite data set attributes.
        """
        ...
    
    def SetInputArrayToProcess(self, p_int, p_int_1, p_int_2, p_int_3, string):
        """
        V.SetInputArrayToProcess(int, int, int, int, string)
        C++: void SetInputArrayToProcess(int idx, int port,
            int connection, int fieldAssociation, const char *name)
            override;
        V.SetInputArrayToProcess(int, int, int, int, int)
        C++: void SetInputArrayToProcess(int idx, int port,
            int connection, int fieldAssociation, int fieldAttributeType)
            override;
        V.SetInputArrayToProcess(int, vtkInformation)
        C++: void SetInputArrayToProcess(int idx, vtkInformation *info)
            override;
        V.SetInputArrayToProcess(int, int, int, string, string)
        C++: virtual void SetInputArrayToProcess(int idx, int port,
            int connection, const char *fieldAssociation,
            const char *attributeTypeorName)
        
        Call SetInputArrayToProcess on helpers.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


