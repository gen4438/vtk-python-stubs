"""
This type stub file was generated by pyright.
"""

from .vtkImageProcessingPass import vtkImageProcessingPass

class vtkSobelGradientMagnitudePass(vtkImageProcessingPass):
    """
    vtkSobelGradientMagnitudePass - Implement a post-processing edge
    detection with a Sobel gradient magnitude render pass.
    
    Superclass: vtkImageProcessingPass
    
    Detect the edges of the image renderered by its delegate.
    Edge-detection uses a Sobel high-pass filter (3x3 kernel).
    
    This pass expects an initialized depth buffer and color buffer.
    Initialized buffers means they have been cleared with farest z-value
    and background color/gradient/transparent color. An opaque pass may
    have been performed right after the initialization.
    
    The delegate is used once.
    
    Its delegate is usually set to a vtkCameraPass or to a
    post-processing pass.
    
    This pass requires a OpenGL context that supports texture objects
    (TO), framebuffer objects (FBO) and GLSL. If not, it will emit an
    error message and will render its delegate and return.
    
    @par Implementation: To compute the gradient magnitude, the x and y
    components of the gradient (Gx and Gy) have to be computed first.
    Each computation of Gx and Gy uses a separable filter. The first pass
    takes the image from the delegate as the single input texture. The
    first pass has two outputs, one for the first part of Gx, Gx1, result
    of a convolution with (-1 0 1), one for the first part of Gy, Gy1,
    result of a convolution with (1 2 1). The second pass has two inputs,
    Gx1 and Gy1. Kernel (1 2 1)^T is applied to Gx1 and kernel (-1 0 1)^T
    is applied to Gx2. It gives the values for Gx and Gy. Those values
    are then used to compute the magnitude of the gradient which is
    stored in the render target. The gradient computation happens per
    component (R,G,B). A is arbitrarily set to 1 (full opacity).
    
    @par Implementation:\image html
    vtkSobelGradientMagnitudePassFigure.png\image latex
    vtkSobelGradientMagnitudePassFigure.eps
    
    @sa
    vtkRenderPass
    """
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkSobelGradientMagnitudePass
        C++: vtkSobelGradientMagnitudePass *NewInstance()
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: void ReleaseGraphicsResources(vtkWindow *w) override;
        
        Release graphics resources and ask components to release their
        own resources.
        \pre w_exists: w!=0
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkSobelGradientMagnitudePass
        C++: static vtkSobelGradientMagnitudePass *SafeDownCast(
            vtkObjectBase *o)
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


