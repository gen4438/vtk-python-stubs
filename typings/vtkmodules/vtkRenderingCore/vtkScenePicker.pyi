"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkCommonCore as __vtkmodules_vtkCommonCore

class vtkScenePicker(__vtkmodules_vtkCommonCore.vtkObject):
    """
    vtkScenePicker - Picks an entire viewport at one shot.
    
    Superclass: vtkObject
    
    The Scene picker, unlike conventional pickers picks an entire
    viewport at one shot and caches the result, which can be retrieved
    later.
       The utility of the class arises during Actor Selection. Let's say
    you have a couple of polygonal objects in your scene and you wish to
    have a status bar that indicates the object your mouse is over.
    Picking repeatedly every time your mouse moves would be very slow.
    The scene picker automatically picks your viewport every time the
    camera is changed and caches the information. Additionally, it
    observes the vtkRenderWindowInteractor to avoid picking during
    interaction, so that you still maintain your interactivity. In
    effect, the picker does an additional pick-render of your scene every
    time you stop interacting with your scene. As an example, see
    Rendering/TestScenePicker.
    
    @warning
    - Unlike a vtkHoverWidget, this class is not timer based. The hover
      widget
      picks a scene when the mouse is over an actor for a specified
    duration.
    - This class uses a vtkHardwareSelector under the hood. Hence, it
      will work only for actors that have opaque geomerty and are
      rendered by a vtkPolyDataMapper.
    
    @sa
    vtkHoverWidget vtkHardwareSelector
    """
    def EnableVertexPickingOff(self):
        """
        V.EnableVertexPickingOff()
        C++: virtual void EnableVertexPickingOff()
        
        Vertex picking (using the method GetVertexId()), required
        additional resources and can slow down still render time by
        5-10%. Enabled by default.
        """
        ...
    
    def EnableVertexPickingOn(self):
        """
        V.EnableVertexPickingOn()
        C++: virtual void EnableVertexPickingOn()
        
        Vertex picking (using the method GetVertexId()), required
        additional resources and can slow down still render time by
        5-10%. Enabled by default.
        """
        ...
    
    def GetCellId(self, p_int=..., p_int=...):
        """
        V.GetCellId([int, int]) -> int
        C++: vtkIdType GetCellId(int displayPos[2])
        
        Get cell id at the pick position. Returns -1 if no cell was
        picked. Makes sense only after Pick has been called.
        """
        ...
    
    def GetEnableVertexPicking(self):
        """
        V.GetEnableVertexPicking() -> int
        C++: virtual vtkTypeBool GetEnableVertexPicking()
        
        Vertex picking (using the method GetVertexId()), required
        additional resources and can slow down still render time by
        5-10%. Enabled by default.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetRenderer(self):
        """
        V.GetRenderer() -> vtkRenderer
        C++: virtual vtkRenderer *GetRenderer()
        
        Set the renderer. Scene picks are restricted to the viewport.
        """
        ...
    
    def GetVertexId(self, p_int=..., p_int=...):
        """
        V.GetVertexId([int, int]) -> int
        C++: vtkIdType GetVertexId(int displayPos[2])
        
        Get cell id at the pick position. Returns -1 if no cell was
        picked. Makes sense only after Pick has been called.
        """
        ...
    
    def GetViewProp(self, p_int=..., p_int=...):
        """
        V.GetViewProp([int, int]) -> vtkProp
        C++: vtkProp *GetViewProp(int displayPos[2])
        
        Get actor at the pick position. Returns NULL if none. Makes sense
        only after Pick has been called.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkScenePicker
        C++: vtkScenePicker *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkScenePicker
        C++: static vtkScenePicker *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetEnableVertexPicking(self, p_int):
        """
        V.SetEnableVertexPicking(int)
        C++: virtual void SetEnableVertexPicking(vtkTypeBool _arg)
        
        Vertex picking (using the method GetVertexId()), required
        additional resources and can slow down still render time by
        5-10%. Enabled by default.
        """
        ...
    
    def SetRenderer(self, vtkRenderer):
        """
        V.SetRenderer(vtkRenderer)
        C++: virtual void SetRenderer(vtkRenderer *)
        
        Set the renderer. Scene picks are restricted to the viewport.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


