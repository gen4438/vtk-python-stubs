"""
This type stub file was generated by pyright.
"""

from .vtkProp3D import vtkProp3D

class vtkBillboardTextActor3D(vtkProp3D):
    """
    vtkBillboardTextActor3D - Renders pixel-aligned text, facing the
    camera, anchored at a 3D point.
    
    Superclass: vtkProp3D
    """
    def ForceOpaqueOff(self):
        """
        V.ForceOpaqueOff()
        C++: virtual void ForceOpaqueOff()
        """
        ...
    
    def ForceOpaqueOn(self):
        """
        V.ForceOpaqueOn()
        C++: virtual void ForceOpaqueOn()
        """
        ...
    
    def ForceTranslucentOff(self):
        """
        V.ForceTranslucentOff()
        C++: virtual void ForceTranslucentOff()
        """
        ...
    
    def ForceTranslucentOn(self):
        """
        V.ForceTranslucentOn()
        C++: virtual void ForceTranslucentOn()
        """
        ...
    
    def GetAnchorDC(self):
        """
        V.GetAnchorDC() -> (float, float, float)
        C++: virtual double *GetAnchorDC()
        
        Returns the anchor position in display coordinates, with depth in
        NDC. Valid after calling RenderOpaqueGeometry.
        """
        ...
    
    def GetBounds(self):
        """
        V.GetBounds() -> (float, float, float, float, float, float)
        C++: double *GetBounds() override;
        V.GetBounds([float, float, float, float, float, float])
        C++: void GetBounds(double bounds[6])
        
        Get the bounds for this Prop3D as
        (Xmin,Xmax,Ymin,Ymax,Zmin,Zmax).
        """
        ...
    
    def GetDisplayOffset(self):
        """
        V.GetDisplayOffset() -> (int, int)
        C++: virtual int *GetDisplayOffset()
        """
        ...
    
    def GetForceOpaque(self):
        """
        V.GetForceOpaque() -> bool
        C++: virtual bool GetForceOpaque()
        """
        ...
    
    def GetForceTranslucent(self):
        """
        V.GetForceTranslucent() -> bool
        C++: virtual bool GetForceTranslucent()
        """
        ...
    
    def GetInput(self):
        """
        V.GetInput() -> string
        C++: virtual char *GetInput()
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetTextProperty(self):
        """
        V.GetTextProperty() -> vtkTextProperty
        C++: virtual vtkTextProperty *GetTextProperty()
        """
        ...
    
    def HasTranslucentPolygonalGeometry(self):
        """
        V.HasTranslucentPolygonalGeometry() -> int
        C++: vtkTypeBool HasTranslucentPolygonalGeometry() override;
        
        Defers to internal actor.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkBillboardTextActor3D
        C++: vtkBillboardTextActor3D *NewInstance()
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: void ReleaseGraphicsResources(vtkWindow *win) override;
        
        WARNING: INTERNAL METHOD - NOT INTENDED FOR GENERAL USE Release
        any graphics resources that are being consumed by this actor. The
        parameter window could be used to determine which graphic
        resources to release.
        """
        ...
    
    def RenderOpaqueGeometry(self, vtkViewport):
        """
        V.RenderOpaqueGeometry(vtkViewport) -> int
        C++: int RenderOpaqueGeometry(vtkViewport *vp) override;
        
        Check/update geometry/texture in opaque pass, since it only
        happens once.
        """
        ...
    
    def RenderTranslucentPolygonalGeometry(self, vtkViewport):
        """
        V.RenderTranslucentPolygonalGeometry(vtkViewport) -> int
        C++: int RenderTranslucentPolygonalGeometry(vtkViewport *vp)
            override;
        
        Just render in translucent pass, since it can execute multiple
        times (depth peeling, for instance).
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkBillboardTextActor3D
        C++: static vtkBillboardTextActor3D *SafeDownCast(
            vtkObjectBase *o)
        """
        ...
    
    def SetDisplayOffset(self, p_int, p_int_1):
        """
        V.SetDisplayOffset(int, int)
        C++: virtual void SetDisplayOffset(int _arg1, int _arg2)
        V.SetDisplayOffset((int, int))
        C++: void SetDisplayOffset(const int _arg[2])
        """
        ...
    
    def SetForceOpaque(self, bool):
        """
        V.SetForceOpaque(bool)
        C++: virtual void SetForceOpaque(bool opaque)
        """
        ...
    
    def SetForceTranslucent(self, bool):
        """
        V.SetForceTranslucent(bool)
        C++: virtual void SetForceTranslucent(bool trans)
        """
        ...
    
    def SetInput(self, string):
        """
        V.SetInput(string)
        C++: void SetInput(const char *in)
        """
        ...
    
    def SetTextProperty(self, vtkTextProperty):
        """
        V.SetTextProperty(vtkTextProperty)
        C++: void SetTextProperty(vtkTextProperty *tprop)
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


