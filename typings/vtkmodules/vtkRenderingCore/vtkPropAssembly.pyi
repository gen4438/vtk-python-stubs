"""
This type stub file was generated by pyright.
"""

from .vtkProp import vtkProp

class vtkPropAssembly(vtkProp):
    """
    vtkPropAssembly - create hierarchies of props
    
    Superclass: vtkProp
    
    vtkPropAssembly is an object that groups props and other prop
    assemblies into a tree-like hierarchy. The props can then be treated
    as a group (e.g., turning visibility on and off).
    
    A vtkPropAssembly object can be used in place of an vtkProp since it
    is a subclass of vtkProp. The difference is that vtkPropAssembly
    maintains a list of other prop and prop assembly instances (its
    "parts") that form the assembly. Note that this process is recursive:
    you can create groups consisting of prop assemblies to arbitrary
    depth.
    
    vtkPropAssembly's and vtkProp's that compose a prop assembly need not
    be added to a renderer's list of props, as long as the parent
    assembly is in the prop list. This is because they are automatically
    renderered during the hierarchical traversal process.
    
    @warning
    vtkPropAssemblies can consist of hierarchies of assemblies, where one
    actor or assembly used in one hierarchy is also used in other
    hierarchies. However, make that there are no cycles (e.g.,
    parent->child->parent), this will cause program failure.
    
    @sa
    vtkProp3D vtkActor vtkAssembly vtkActor2D vtkVolume
    """
    def AddPart(self, vtkProp):
        """
        V.AddPart(vtkProp)
        C++: void AddPart(vtkProp *)
        
        Add a part to the list of parts.
        """
        ...
    
    def BuildPaths(self, vtkAssemblyPaths, vtkAssemblyPath):
        """
        V.BuildPaths(vtkAssemblyPaths, vtkAssemblyPath)
        C++: void BuildPaths(vtkAssemblyPaths *paths,
            vtkAssemblyPath *path) override;
        
        WARNING: INTERNAL METHOD - NOT INTENDED FOR GENERAL USE DO NOT
        USE THIS METHOD OUTSIDE OF THE RENDERING PROCESS Overload the
        superclass' vtkProp BuildPaths() method.
        """
        ...
    
    def GetBounds(self):
        """
        V.GetBounds() -> (float, float, float, float, float, float)
        C++: double *GetBounds() override;
        
        Get the bounds for this prop assembly as
        (Xmin,Xmax,Ymin,Ymax,Zmin,Zmax). May return NULL in some cases
        (meaning the bounds is undefined).
        """
        ...
    
    def GetMTime(self):
        """
        V.GetMTime() -> int
        C++: vtkMTimeType GetMTime() override;
        
        Override default GetMTime method to also consider all of the prop
        assembly's parts.
        """
        ...
    
    def GetNextPath(self):
        """
        V.GetNextPath() -> vtkAssemblyPath
        C++: vtkAssemblyPath *GetNextPath() override;
        
        Methods to traverse the paths (i.e., leaf nodes) of a prop
        assembly. These methods should be contrasted to those that
        traverse the list of parts using GetParts().  GetParts() returns
        a list of children of this assembly, not necessarily the leaf
        nodes of the assembly. To use the methods below - first invoke
        InitPathTraversal() followed by repeated calls to GetNextPath(). 
        GetNextPath() returns a NULL pointer when the list is exhausted.
        (See the superclass vtkProp for more information about paths.)
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfPaths(self):
        """
        V.GetNumberOfPaths() -> int
        C++: int GetNumberOfPaths() override;
        
        Methods to traverse the paths (i.e., leaf nodes) of a prop
        assembly. These methods should be contrasted to those that
        traverse the list of parts using GetParts().  GetParts() returns
        a list of children of this assembly, not necessarily the leaf
        nodes of the assembly. To use the methods below - first invoke
        InitPathTraversal() followed by repeated calls to GetNextPath(). 
        GetNextPath() returns a NULL pointer when the list is exhausted.
        (See the superclass vtkProp for more information about paths.)
        """
        ...
    
    def GetParts(self):
        """
        V.GetParts() -> vtkPropCollection
        C++: vtkPropCollection *GetParts()
        
        Return the list of parts.
        """
        ...
    
    def HasTranslucentPolygonalGeometry(self):
        """
        V.HasTranslucentPolygonalGeometry() -> int
        C++: vtkTypeBool HasTranslucentPolygonalGeometry() override;
        
        Does this prop have some translucent polygonal geometry?
        """
        ...
    
    def InitPathTraversal(self):
        """
        V.InitPathTraversal()
        C++: void InitPathTraversal() override;
        
        Methods to traverse the paths (i.e., leaf nodes) of a prop
        assembly. These methods should be contrasted to those that
        traverse the list of parts using GetParts().  GetParts() returns
        a list of children of this assembly, not necessarily the leaf
        nodes of the assembly. To use the methods below - first invoke
        InitPathTraversal() followed by repeated calls to GetNextPath(). 
        GetNextPath() returns a NULL pointer when the list is exhausted.
        (See the superclass vtkProp for more information about paths.)
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkPropAssembly
        C++: vtkPropAssembly *NewInstance()
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: void ReleaseGraphicsResources(vtkWindow *) override;
        
        Release any graphics resources that are being consumed by this
        actor. The parameter window could be used to determine which
        graphic resources to release.
        """
        ...
    
    def RemovePart(self, vtkProp):
        """
        V.RemovePart(vtkProp)
        C++: void RemovePart(vtkProp *)
        
        Remove a part from the list of parts,
        """
        ...
    
    def RenderOpaqueGeometry(self, vtkViewport):
        """
        V.RenderOpaqueGeometry(vtkViewport) -> int
        C++: int RenderOpaqueGeometry(vtkViewport *ren) override;
        
        Render this assembly and all its parts.  The rendering process is
        recursive. The parts of each assembly are rendered only if the
        visibility for the prop is turned on.
        """
        ...
    
    def RenderOverlay(self, vtkViewport):
        """
        V.RenderOverlay(vtkViewport) -> int
        C++: int RenderOverlay(vtkViewport *ren) override;
        
        Render this assembly and all its parts.  The rendering process is
        recursive. The parts of each assembly are rendered only if the
        visibility for the prop is turned on.
        """
        ...
    
    def RenderTranslucentPolygonalGeometry(self, vtkViewport):
        """
        V.RenderTranslucentPolygonalGeometry(vtkViewport) -> int
        C++: int RenderTranslucentPolygonalGeometry(vtkViewport *ren)
            override;
        
        Render this assembly and all its parts.  The rendering process is
        recursive. The parts of each assembly are rendered only if the
        visibility for the prop is turned on.
        """
        ...
    
    def RenderVolumetricGeometry(self, vtkViewport):
        """
        V.RenderVolumetricGeometry(vtkViewport) -> int
        C++: int RenderVolumetricGeometry(vtkViewport *ren) override;
        
        Render this assembly and all its parts.  The rendering process is
        recursive. The parts of each assembly are rendered only if the
        visibility for the prop is turned on.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkPropAssembly
        C++: static vtkPropAssembly *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def ShallowCopy(self, vtkProp):
        """
        V.ShallowCopy(vtkProp)
        C++: void ShallowCopy(vtkProp *Prop) override;
        
        Shallow copy of this vtkPropAssembly.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


