"""
This type stub file was generated by pyright.
"""

from .vtkAbstractPicker import vtkAbstractPicker

class vtkAbstractPropPicker(vtkAbstractPicker):
    """
    vtkAbstractPropPicker - abstract API for pickers that can pick an
    instance of vtkProp
    
    Superclass: vtkAbstractPicker
    
    vtkAbstractPropPicker is an abstract superclass for pickers that can
    pick an instance of vtkProp. Some pickers, like vtkWorldPointPicker
    (not a subclass of this class), cannot identify the prop that is
    picked. Subclasses of vtkAbstractPropPicker return a prop in the form
    of a vtkAssemblyPath when a pick is invoked. Note that an
    vtkAssemblyPath contain a list of vtkAssemblyNodes, each of which in
    turn contains a reference to a vtkProp and a 4x4 transformation
    matrix. The path fully describes the entire pick path, so you can
    pick assemblies or portions of assemblies, or just grab the tail end
    of the vtkAssemblyPath (which is the picked prop).
    
    @warning
    Because a vtkProp can be placed into different assemblies, or even in
    different leaf positions of the same assembly, the vtkAssemblyPath is
    used to fully qualify exactly which use of the vtkProp was picked,
    including its position (since vtkAssemblyPath includes a
    transformation matrix per node).
    
    @warning
    The class returns information about picked actors, props, etc. Note
    that what is returned by these methods is the top level of the
    assembly path. This can cause a lot of confusion! For example, if you
    pick a vtkAssembly, and the returned vtkAssemblyPath has as a leaf a
    vtkActor, then if you invoke GetActor(), you will get NULL, even
    though an actor was indeed picked. (GetAssembly() will return
    something.) Note that the safest thing to do is to do a
    GetViewProp(), which will always return something if something was
    picked. A better way to manage picking is to work with
    vtkAssemblyPath, since this completely defines the pick path from top
    to bottom in a assembly hierarchy, and avoids confusion when the same
    prop is used in different assemblies.
    
    @warning
    The returned assembly paths refer to assembly nodes that in turn
    refer to vtkProp and vtkMatrix. This association to vtkProp is not a
    reference counted association, meaning that dangling references are
    possible if you do a pick, get an assembly path, and then delete a
    vtkProp. (Reason: assembly paths create many self-referencing loops
    that destroy reference counting.)
    
    @sa
    vtkPropPicker vtkPicker vtkWorldPointPicker vtkCellPicker
    vtkPointPicker vtkAssemblyPath vtkAssemblyNode vtkAssemblyPaths
    vtkAbstractPicker vtkRenderer
    """
    def GetActor(self):
        """
        V.GetActor() -> vtkActor
        C++: virtual vtkActor *GetActor()
        
        Return the vtkActor that has been picked. If NULL, no actor was
        picked.
        """
        ...
    
    def GetActor2D(self):
        """
        V.GetActor2D() -> vtkActor2D
        C++: virtual vtkActor2D *GetActor2D()
        
        Return the vtkActor2D that has been picked. If NULL, no actor2D
        was picked.
        """
        ...
    
    def GetAssembly(self):
        """
        V.GetAssembly() -> vtkAssembly
        C++: virtual vtkAssembly *GetAssembly()
        
        Return the vtkAssembly that has been picked. If NULL, no assembly
        was picked. (Note: the returned assembly is the first node in the
        assembly path. If the path is one node long, then the assembly
        and the prop are the same, assuming that the first node is a
        vtkAssembly.)
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetPath(self):
        """
        V.GetPath() -> vtkAssemblyPath
        C++: virtual vtkAssemblyPath *GetPath()
        
        Return the vtkAssemblyPath that has been picked. The assembly
        path lists all the vtkProps that form an assembly. If no assembly
        is present, then the assembly path will have one node (which is
        the picked prop). The set method is used internally to set the
        path. (Note: the structure of an assembly path is a collection of
        vtkAssemblyNode, each node pointing to a vtkProp and (possibly) a
        transformation matrix.)
        """
        ...
    
    def GetProp3D(self):
        """
        V.GetProp3D() -> vtkProp3D
        C++: virtual vtkProp3D *GetProp3D()
        
        Return the vtkProp that has been picked. If NULL, no vtkProp3D
        was picked.
        """
        ...
    
    def GetPropAssembly(self):
        """
        V.GetPropAssembly() -> vtkPropAssembly
        C++: virtual vtkPropAssembly *GetPropAssembly()
        
        Return the vtkPropAssembly that has been picked. If NULL, no prop
        assembly was picked. (Note: the returned prop assembly is the
        first node in the assembly path. If the path is one node long,
        then the prop assembly and the prop are the same, assuming that
        the first node is a vtkPropAssembly.)
        """
        ...
    
    def GetViewProp(self):
        """
        V.GetViewProp() -> vtkProp
        C++: virtual vtkProp *GetViewProp()
        
        Return the vtkProp that has been picked. If NULL, nothing was
        picked. If anything at all was picked, this method will return
        something.
        """
        ...
    
    def GetVolume(self):
        """
        V.GetVolume() -> vtkVolume
        C++: virtual vtkVolume *GetVolume()
        
        Return the vtkVolume that has been picked. If NULL, no volume was
        picked.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkAbstractPropPicker
        C++: vtkAbstractPropPicker *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkAbstractPropPicker
        C++: static vtkAbstractPropPicker *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetPath(self, vtkAssemblyPath):
        """
        V.SetPath(vtkAssemblyPath)
        C++: virtual void SetPath(vtkAssemblyPath *)
        
        Return the vtkAssemblyPath that has been picked. The assembly
        path lists all the vtkProps that form an assembly. If no assembly
        is present, then the assembly path will have one node (which is
        the picked prop). The set method is used internally to set the
        path. (Note: the structure of an assembly path is a collection of
        vtkAssemblyNode, each node pointing to a vtkProp and (possibly) a
        transformation matrix.)
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


