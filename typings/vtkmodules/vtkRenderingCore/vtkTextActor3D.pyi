"""
This type stub file was generated by pyright.
"""

from .vtkProp3D import vtkProp3D

class vtkTextActor3D(vtkProp3D):
    """
    vtkTextActor3D - An actor that displays text.
    
    Superclass: vtkProp3D
    
    The input text is rendered into a buffer, which in turn is used as a
    texture applied onto a quad (a vtkImageActor is used under the hood).
    @warning
    This class is experimental at the moment.
    - The orientation is not optimized, the quad should be oriented, not
      the text itself when it is rendered in the buffer (we end up with
      excessively big textures for 45 degrees angles). This will be fixed
    first.
    - No checking is done at the moment regarding hardware texture size
      limits.
    
    @sa
    vtkProp3D
    """
    def ForceOpaqueOff(self):
        """
        V.ForceOpaqueOff()
        C++: virtual void ForceOpaqueOff()
        """
        ...
    
    def ForceOpaqueOn(self):
        """
        V.ForceOpaqueOn()
        C++: virtual void ForceOpaqueOn()
        """
        ...
    
    def ForceTranslucentOff(self):
        """
        V.ForceTranslucentOff()
        C++: virtual void ForceTranslucentOff()
        """
        ...
    
    def ForceTranslucentOn(self):
        """
        V.ForceTranslucentOn()
        C++: virtual void ForceTranslucentOn()
        """
        ...
    
    def GetBoundingBox(self, p_int=..., p_int=..., p_int=..., p_int=...):
        """
        V.GetBoundingBox([int, int, int, int]) -> int
        C++: int GetBoundingBox(int bbox[4])
        
        Get the vtkTextRenderer-derived bounding box for the given
        vtkTextProperty and text string str.  Results are returned in the
        four element bbox int array.  This call can be used for sizing
        other elements.
        """
        ...
    
    def GetBounds(self):
        """
        V.GetBounds() -> (float, float, float, float, float, float)
        C++: double *GetBounds() override;
        V.GetBounds([float, float, float, float, float, float])
        C++: void GetBounds(double bounds[6])
        
        Get the bounds for this Prop3D as
        (Xmin,Xmax,Ymin,Ymax,Zmin,Zmax).
        """
        ...
    
    def GetForceOpaque(self):
        """
        V.GetForceOpaque() -> bool
        C++: virtual bool GetForceOpaque()
        """
        ...
    
    def GetForceTranslucent(self):
        """
        V.GetForceTranslucent() -> bool
        C++: virtual bool GetForceTranslucent()
        """
        ...
    
    def GetInput(self):
        """
        V.GetInput() -> string
        C++: virtual char *GetInput()
        
        Set the text string to be displayed.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetRenderedDPI(self):
        """
        V.GetRenderedDPI() -> int
        C++: static int GetRenderedDPI()
        
        Since a 3D text actor is not pixel-aligned and positioned in 3D
        space, the text is rendered at a constant DPI, rather than using
        the current window DPI. This static method returns the DPI value
        used to produce the text images.
        """
        ...
    
    def GetTextProperty(self):
        """
        V.GetTextProperty() -> vtkTextProperty
        C++: virtual vtkTextProperty *GetTextProperty()
        
        Set/Get the text property.
        """
        ...
    
    def HasTranslucentPolygonalGeometry(self):
        """
        V.HasTranslucentPolygonalGeometry() -> int
        C++: vtkTypeBool HasTranslucentPolygonalGeometry() override;
        
        Does this prop have some translucent polygonal geometry?
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkTextActor3D
        C++: vtkTextActor3D *NewInstance()
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: void ReleaseGraphicsResources(vtkWindow *) override;
        
        WARNING: INTERNAL METHOD - NOT INTENDED FOR GENERAL USE DO NOT
        USE THIS METHOD OUTSIDE OF THE RENDERING PROCESS. Release any
        graphics resources that are being consumed by this actor. The
        parameter window could be used to determine which graphic
        resources to release.
        """
        ...
    
    def RenderOpaqueGeometry(self, vtkViewport):
        """
        V.RenderOpaqueGeometry(vtkViewport) -> int
        C++: int RenderOpaqueGeometry(vtkViewport *viewport) override;
        
        WARNING: INTERNAL METHOD - NOT INTENDED FOR GENERAL USE DO NOT
        USE THIS METHOD OUTSIDE OF THE RENDERING PROCESS. Draw the text
        actor to the screen.
        """
        ...
    
    def RenderOverlay(self, vtkViewport):
        """
        V.RenderOverlay(vtkViewport) -> int
        C++: int RenderOverlay(vtkViewport *viewport) override;
        
        WARNING: INTERNAL METHOD - NOT INTENDED FOR GENERAL USE DO NOT
        USE THIS METHOD OUTSIDE OF THE RENDERING PROCESS. Draw the text
        actor to the screen.
        """
        ...
    
    def RenderTranslucentPolygonalGeometry(self, vtkViewport):
        """
        V.RenderTranslucentPolygonalGeometry(vtkViewport) -> int
        C++: int RenderTranslucentPolygonalGeometry(vtkViewport *viewport)
             override;
        
        WARNING: INTERNAL METHOD - NOT INTENDED FOR GENERAL USE DO NOT
        USE THIS METHOD OUTSIDE OF THE RENDERING PROCESS. Draw the text
        actor to the screen.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkTextActor3D
        C++: static vtkTextActor3D *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetForceOpaque(self, bool):
        """
        V.SetForceOpaque(bool)
        C++: virtual void SetForceOpaque(bool opaque)
        """
        ...
    
    def SetForceTranslucent(self, bool):
        """
        V.SetForceTranslucent(bool)
        C++: virtual void SetForceTranslucent(bool trans)
        """
        ...
    
    def SetInput(self, string):
        """
        V.SetInput(string)
        C++: virtual void SetInput(const char *_arg)
        
        Set the text string to be displayed.
        """
        ...
    
    def SetTextProperty(self, vtkTextProperty):
        """
        V.SetTextProperty(vtkTextProperty)
        C++: virtual void SetTextProperty(vtkTextProperty *p)
        
        Set/Get the text property.
        """
        ...
    
    def ShallowCopy(self, vtkProp):
        """
        V.ShallowCopy(vtkProp)
        C++: void ShallowCopy(vtkProp *prop) override;
        
        Shallow copy of this text actor. Overloads the virtual vtkProp
        method.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


