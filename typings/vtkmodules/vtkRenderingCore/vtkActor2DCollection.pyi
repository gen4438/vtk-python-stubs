"""
This type stub file was generated by pyright.
"""

from .vtkPropCollection import vtkPropCollection

class vtkActor2DCollection(vtkPropCollection):
    """
    vtkActor2DCollection - a list of 2D actors
    
    Superclass: vtkPropCollection
    
    vtkActor2DCollection is a subclass of vtkCollection. 
    vtkActor2DCollection maintains a collection of vtkActor2D objects
    that is sorted by layer number, with lower layer numbers at the start
    of the list.  This allows the vtkActor2D objects to be rendered in
    the correct order.
    
    @sa
    vtkActor2D vtkCollection
    """
    def AddItem(self, vtkActor2D):
        """
        V.AddItem(vtkActor2D)
        C++: void AddItem(vtkActor2D *a)
        
        Add an actor to the list.  The new actor is inserted in the list
        according to it's layer number.
        """
        ...
    
    def GetLastActor2D(self):
        """
        V.GetLastActor2D() -> vtkActor2D
        C++: vtkActor2D *GetLastActor2D()
        
        Standard Collection methods
        """
        ...
    
    def GetLastItem(self):
        """
        V.GetLastItem() -> vtkActor2D
        C++: vtkActor2D *GetLastItem()
        
        Access routines that are provided for compatibility with previous
        version of VTK.  Please use the GetNextActor2D(),
        GetLastActor2D() variants where possible.
        """
        ...
    
    def GetNextActor2D(self):
        """
        V.GetNextActor2D() -> vtkActor2D
        C++: vtkActor2D *GetNextActor2D()
        
        Standard Collection methods
        """
        ...
    
    def GetNextItem(self):
        """
        V.GetNextItem() -> vtkActor2D
        C++: vtkActor2D *GetNextItem()
        
        Access routines that are provided for compatibility with previous
        version of VTK.  Please use the GetNextActor2D(),
        GetLastActor2D() variants where possible.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsItemPresent(self, vtkActor2D):
        """
        V.IsItemPresent(vtkActor2D) -> int
        C++: int IsItemPresent(vtkActor2D *a)
        
        Standard Collection methods
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkActor2DCollection
        C++: vtkActor2DCollection *NewInstance()
        """
        ...
    
    def RenderOverlay(self, vtkViewport):
        """
        V.RenderOverlay(vtkViewport)
        C++: void RenderOverlay(vtkViewport *viewport)
        
        Sort and then render the collection of 2D actors.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkActor2DCollection
        C++: static vtkActor2DCollection *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def Sort(self):
        """
        V.Sort()
        C++: void Sort()
        
        Sorts the vtkActor2DCollection by layer number.  Smaller layer
        numbers are first.  Layer numbers can be any integer value.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


