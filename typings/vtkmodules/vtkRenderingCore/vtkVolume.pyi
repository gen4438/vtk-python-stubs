"""
This type stub file was generated by pyright.
"""

from .vtkProp3D import vtkProp3D

class vtkVolume(vtkProp3D):
    """
    vtkVolume - represents a volume (data & properties) in a rendered
    scene
    
    Superclass: vtkProp3D
    
    vtkVolume is used to represent a volumetric entity in a rendering
    scene. It inherits functions related to the volume's position,
    orientation and origin from vtkProp3D. The volume maintains a
    reference to the volumetric data (i.e., the volume mapper). The
    volume also contains a reference to a volume property which contains
    all common volume rendering parameters.
    
    @sa
    vtkAbstractVolumeMapper vtkVolumeProperty vtkProp3D
    """
    def GetArraySize(self):
        """
        V.GetArraySize() -> float
        C++: float GetArraySize()
        
        WARNING: INTERNAL METHOD - NOT INTENDED FOR GENERAL USE DO NOT
        USE THIS METHOD OUTSIDE OF THE RENDERING PROCESS
        """
        ...
    
    def GetBounds(self):
        """
        V.GetBounds() -> (float, float, float, float, float, float)
        C++: double *GetBounds() override;
        V.GetBounds([float, float, float, float, float, float])
        C++: void GetBounds(double bounds[6])
        
        Get the bounds - either all six at once (xmin, xmax, ymin, ymax,
        zmin, zmax) or one at a time.
        """
        ...
    
    def GetCorrectedScalarOpacityArray(self, p_int):
        """
        V.GetCorrectedScalarOpacityArray(int) -> (float, ...)
        C++: float *GetCorrectedScalarOpacityArray(int)
        V.GetCorrectedScalarOpacityArray() -> (float, ...)
        C++: float *GetCorrectedScalarOpacityArray()
        
        WARNING: INTERNAL METHOD - NOT INTENDED FOR GENERAL USE DO NOT
        USE THIS METHOD OUTSIDE OF THE RENDERING PROCESS
        """
        ...
    
    def GetGradientOpacityArray(self, p_int):
        """
        V.GetGradientOpacityArray(int) -> (float, ...)
        C++: float *GetGradientOpacityArray(int)
        V.GetGradientOpacityArray() -> (float, ...)
        C++: float *GetGradientOpacityArray()
        
        WARNING: INTERNAL METHOD - NOT INTENDED FOR GENERAL USE DO NOT
        USE THIS METHOD OUTSIDE OF THE RENDERING PROCESS
        """
        ...
    
    def GetGradientOpacityConstant(self, p_int):
        """
        V.GetGradientOpacityConstant(int) -> float
        C++: float GetGradientOpacityConstant(int)
        V.GetGradientOpacityConstant() -> float
        C++: float GetGradientOpacityConstant()
        
        WARNING: INTERNAL METHOD - NOT INTENDED FOR GENERAL USE DO NOT
        USE THIS METHOD OUTSIDE OF THE RENDERING PROCESS
        """
        ...
    
    def GetGrayArray(self, p_int):
        """
        V.GetGrayArray(int) -> (float, ...)
        C++: float *GetGrayArray(int)
        V.GetGrayArray() -> (float, ...)
        C++: float *GetGrayArray()
        
        WARNING: INTERNAL METHOD - NOT INTENDED FOR GENERAL USE DO NOT
        USE THIS METHOD OUTSIDE OF THE RENDERING PROCESS
        """
        ...
    
    def GetMapper(self):
        """
        V.GetMapper() -> vtkAbstractVolumeMapper
        C++: virtual vtkAbstractVolumeMapper *GetMapper()
        
        Set/Get the volume mapper.
        """
        ...
    
    def GetMaxXBound(self):
        """
        V.GetMaxXBound() -> float
        C++: double GetMaxXBound()
        
        Get the bounds - either all six at once (xmin, xmax, ymin, ymax,
        zmin, zmax) or one at a time.
        """
        ...
    
    def GetMaxYBound(self):
        """
        V.GetMaxYBound() -> float
        C++: double GetMaxYBound()
        
        Get the bounds - either all six at once (xmin, xmax, ymin, ymax,
        zmin, zmax) or one at a time.
        """
        ...
    
    def GetMaxZBound(self):
        """
        V.GetMaxZBound() -> float
        C++: double GetMaxZBound()
        
        Get the bounds - either all six at once (xmin, xmax, ymin, ymax,
        zmin, zmax) or one at a time.
        """
        ...
    
    def GetMinXBound(self):
        """
        V.GetMinXBound() -> float
        C++: double GetMinXBound()
        
        Get the bounds - either all six at once (xmin, xmax, ymin, ymax,
        zmin, zmax) or one at a time.
        """
        ...
    
    def GetMinYBound(self):
        """
        V.GetMinYBound() -> float
        C++: double GetMinYBound()
        
        Get the bounds - either all six at once (xmin, xmax, ymin, ymax,
        zmin, zmax) or one at a time.
        """
        ...
    
    def GetMinZBound(self):
        """
        V.GetMinZBound() -> float
        C++: double GetMinZBound()
        
        Get the bounds - either all six at once (xmin, xmax, ymin, ymax,
        zmin, zmax) or one at a time.
        """
        ...
    
    def GetMTime(self):
        """
        V.GetMTime() -> int
        C++: vtkMTimeType GetMTime() override;
        
        Return the MTime also considering the property etc.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetProperty(self):
        """
        V.GetProperty() -> vtkVolumeProperty
        C++: virtual vtkVolumeProperty *GetProperty()
        
        Set/Get the volume property.
        """
        ...
    
    def GetRedrawMTime(self):
        """
        V.GetRedrawMTime() -> int
        C++: vtkMTimeType GetRedrawMTime() override;
        
        Return the mtime of anything that would cause the rendered image
        to appear differently. Usually this involves checking the mtime
        of the prop plus anything else it depends on such as properties,
        mappers, etc.
        """
        ...
    
    def GetRGBArray(self, p_int):
        """
        V.GetRGBArray(int) -> (float, ...)
        C++: float *GetRGBArray(int)
        V.GetRGBArray() -> (float, ...)
        C++: float *GetRGBArray()
        
        WARNING: INTERNAL METHOD - NOT INTENDED FOR GENERAL USE DO NOT
        USE THIS METHOD OUTSIDE OF THE RENDERING PROCESS
        """
        ...
    
    def GetScalarOpacityArray(self, p_int):
        """
        V.GetScalarOpacityArray(int) -> (float, ...)
        C++: float *GetScalarOpacityArray(int)
        V.GetScalarOpacityArray() -> (float, ...)
        C++: float *GetScalarOpacityArray()
        
        WARNING: INTERNAL METHOD - NOT INTENDED FOR GENERAL USE DO NOT
        USE THIS METHOD OUTSIDE OF THE RENDERING PROCESS
        """
        ...
    
    def GetSupportsSelection(self):
        """
        V.GetSupportsSelection() -> bool
        C++: bool GetSupportsSelection() override;
        
        Used by vtkHardwareSelector to determine if the prop supports
        hardware selection.
        
        @warning INTERNAL METHOD - NOT INTENDED FOR GENERAL USE
        DO NOT USE THIS METHOD OUTSIDE OF THE RENDERING PROCESS
        """
        ...
    
    def GetVolumes(self, vtkPropCollection):
        """
        V.GetVolumes(vtkPropCollection)
        C++: void GetVolumes(vtkPropCollection *vc) override;
        
        For some exporters and other other operations we must be able to
        collect all the actors or volumes. This method is used in that
        process.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkVolume
        C++: vtkVolume *NewInstance()
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: void ReleaseGraphicsResources(vtkWindow *) override;
        
        WARNING: INTERNAL METHOD - NOT INTENDED FOR GENERAL USE Release
        any graphics resources that are being consumed by this volume.
        The parameter window could be used to determine which graphic
        resources to release.
        """
        ...
    
    def RenderVolumetricGeometry(self, vtkViewport):
        """
        V.RenderVolumetricGeometry(vtkViewport) -> int
        C++: int RenderVolumetricGeometry(vtkViewport *viewport) override;
        
        WARNING: INTERNAL METHOD - NOT INTENDED FOR GENERAL USE DO NOT
        USE THIS METHOD OUTSIDE OF THE RENDERING PROCESS Support the
        standard render methods. Depending on the mapper type, the volume
        may be rendered using this method (FRAMEBUFFER volume such as
        texture mapping will be rendered this way)
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkVolume
        C++: static vtkVolume *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetMapper(self, vtkAbstractVolumeMapper):
        """
        V.SetMapper(vtkAbstractVolumeMapper)
        C++: void SetMapper(vtkAbstractVolumeMapper *mapper)
        
        Set/Get the volume mapper.
        """
        ...
    
    def SetProperty(self, vtkVolumeProperty):
        """
        V.SetProperty(vtkVolumeProperty)
        C++: virtual void SetProperty(vtkVolumeProperty *property)
        
        Set/Get the volume property.
        """
        ...
    
    def ShallowCopy(self, vtkProp):
        """
        V.ShallowCopy(vtkProp)
        C++: void ShallowCopy(vtkProp *prop) override;
        
        Shallow copy of this vtkVolume. Overloads the virtual vtkProp
        method.
        """
        ...
    
    def Update(self):
        """
        V.Update()
        C++: void Update()
        
        Update the volume rendering pipeline by updating the volume
        mapper
        """
        ...
    
    def UpdateScalarOpacityforSampleSize(self, vtkRenderer, p_float):
        """
        V.UpdateScalarOpacityforSampleSize(vtkRenderer, float)
        C++: void UpdateScalarOpacityforSampleSize(vtkRenderer *ren,
            float sample_distance)
        
        WARNING: INTERNAL METHOD - NOT INTENDED FOR GENERAL USE DO NOT
        USE THIS METHOD OUTSIDE OF THE RENDERING PROCESS
        """
        ...
    
    def UpdateTransferFunctions(self, vtkRenderer):
        """
        V.UpdateTransferFunctions(vtkRenderer)
        C++: void UpdateTransferFunctions(vtkRenderer *ren)
        
        WARNING: INTERNAL METHOD - NOT INTENDED FOR GENERAL USE DO NOT
        USE THIS METHOD OUTSIDE OF THE RENDERING PROCESS
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


