"""
This type stub file was generated by pyright.
"""

from .vtkProp3D import vtkProp3D

class vtkProp3DFollower(vtkProp3D):
    """
    vtkProp3DFollower - a vtkProp3D that always faces the camera
    
    Superclass: vtkProp3D
    
    vtkProp3DFollower is a type of vtkProp3D that always faces the
    camera. More specifically it will not change its position or scale,
    but it will continually update its orientation so that it is right
    side up and facing the camera. This is typically used for complex
    billboards or props that need to face the viewer at all times.
    
    Note: All of the transformations that can be made to a vtkProp3D will
    take effect with the follower. Thus, if you change the orientation of
    the follower by 90 degrees, then it will follow the camera, but be
    off by 90 degrees.
    
    @sa
    vtkFollower vtkProp3D vtkCamera vtkProp3DAxisFollower
    """
    def ComputeMatrix(self):
        """
        V.ComputeMatrix()
        C++: void ComputeMatrix() override;
        
        Generate the matrix based on ivars. This method overloads its
        superclasses ComputeMatrix() method due to the special
        vtkProp3DFollower matrix operations.
        """
        ...
    
    def GetBounds(self):
        """
        V.GetBounds() -> (float, float, float, float, float, float)
        C++: double *GetBounds() override;
        
        Return the bounds of this vtkProp3D.
        """
        ...
    
    def GetCamera(self):
        """
        V.GetCamera() -> vtkCamera
        C++: virtual vtkCamera *GetCamera()
        
        Set/Get the camera to follow. If this is not set, then the
        follower won't know what to follow and will act like a normal
        vtkProp3D.
        """
        ...
    
    def GetNextPath(self):
        """
        V.GetNextPath() -> vtkAssemblyPath
        C++: vtkAssemblyPath *GetNextPath() override;
        
        Overload vtkProp's method for setting up assembly paths. See the
        documentation for vtkProp.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard VTK methods for type and printing.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard VTK methods for type and printing.
        """
        ...
    
    def GetProp3D(self):
        """
        V.GetProp3D() -> vtkProp3D
        C++: virtual vtkProp3D *GetProp3D()
        
        Set/Get the vtkProp3D to control (i.e., face the camera).
        """
        ...
    
    def HasTranslucentPolygonalGeometry(self):
        """
        V.HasTranslucentPolygonalGeometry() -> int
        C++: vtkTypeBool HasTranslucentPolygonalGeometry() override;
        
        Does this prop have some translucent polygonal geometry?
        """
        ...
    
    def InitPathTraversal(self):
        """
        V.InitPathTraversal()
        C++: void InitPathTraversal() override;
        
        Overload vtkProp's method for setting up assembly paths. See the
        documentation for vtkProp.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard VTK methods for type and printing.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard VTK methods for type and printing.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkProp3DFollower
        C++: vtkProp3DFollower *NewInstance()
        
        Standard VTK methods for type and printing.
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: void ReleaseGraphicsResources(vtkWindow *) override;
        
        Release any graphics resources associated with this
        vtkProp3DFollower.
        """
        ...
    
    def RenderOpaqueGeometry(self, vtkViewport):
        """
        V.RenderOpaqueGeometry(vtkViewport) -> int
        C++: int RenderOpaqueGeometry(vtkViewport *viewport) override;
        
        This causes the actor to be rendered. It in turn will render the
        actor's property, texture map and then mapper. If a property
        hasn't been assigned, then the actor will create one
        automatically.
        """
        ...
    
    def RenderTranslucentPolygonalGeometry(self, vtkViewport):
        """
        V.RenderTranslucentPolygonalGeometry(vtkViewport) -> int
        C++: int RenderTranslucentPolygonalGeometry(vtkViewport *viewport)
             override;
        
        This causes the actor to be rendered. It in turn will render the
        actor's property, texture map and then mapper. If a property
        hasn't been assigned, then the actor will create one
        automatically.
        """
        ...
    
    def RenderVolumetricGeometry(self, vtkViewport):
        """
        V.RenderVolumetricGeometry(vtkViewport) -> int
        C++: int RenderVolumetricGeometry(vtkViewport *viewport) override;
        
        This causes the actor to be rendered. It in turn will render the
        actor's property, texture map and then mapper. If a property
        hasn't been assigned, then the actor will create one
        automatically.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkProp3DFollower
        C++: static vtkProp3DFollower *SafeDownCast(vtkObjectBase *o)
        
        Standard VTK methods for type and printing.
        """
        ...
    
    def SetCamera(self, vtkCamera):
        """
        V.SetCamera(vtkCamera)
        C++: virtual void SetCamera(vtkCamera *)
        
        Set/Get the camera to follow. If this is not set, then the
        follower won't know what to follow and will act like a normal
        vtkProp3D.
        """
        ...
    
    def SetProp3D(self, vtkProp3D):
        """
        V.SetProp3D(vtkProp3D)
        C++: virtual void SetProp3D(vtkProp3D *prop)
        
        Set/Get the vtkProp3D to control (i.e., face the camera).
        """
        ...
    
    def ShallowCopy(self, vtkProp):
        """
        V.ShallowCopy(vtkProp)
        C++: void ShallowCopy(vtkProp *prop) override;
        
        Shallow copy of a follower. Overloads the virtual vtkProp method.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


