"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkCommonCore as __vtkmodules_vtkCommonCore

class vtkAssemblyPaths(__vtkmodules_vtkCommonCore.vtkCollection):
    """
    vtkAssemblyPaths - a list of lists of props representing an assembly
    hierarchy
    
    Superclass: vtkCollection
    
    vtkAssemblyPaths represents an assembly hierarchy as a list of
    vtkAssemblyPath. Each path represents the complete path from the top
    level assembly (if any) down to the leaf prop.
    
    @sa
    vtkAssemblyPath vtkAssemblyNode vtkPicker vtkAssembly vtkProp
    """
    def AddItem(self, vtkAssemblyPath):
        """
        V.AddItem(vtkAssemblyPath)
        C++: void AddItem(vtkAssemblyPath *p)
        
        Add a path to the list.
        """
        ...
    
    def GetMTime(self):
        """
        V.GetMTime() -> int
        C++: vtkMTimeType GetMTime() override;
        
        Override the standard GetMTime() to check for the modified times
        of the paths.
        """
        ...
    
    def GetNextItem(self):
        """
        V.GetNextItem() -> vtkAssemblyPath
        C++: vtkAssemblyPath *GetNextItem()
        
        Get the next path in the list.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsItemPresent(self, vtkAssemblyPath):
        """
        V.IsItemPresent(vtkAssemblyPath) -> int
        C++: int IsItemPresent(vtkAssemblyPath *p)
        
        Determine whether a particular path is present. Returns its
        position in the list.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkAssemblyPaths
        C++: vtkAssemblyPaths *NewInstance()
        """
        ...
    
    def RemoveItem(self, vtkAssemblyPath):
        """
        V.RemoveItem(vtkAssemblyPath)
        C++: void RemoveItem(vtkAssemblyPath *p)
        
        Remove a path from the list.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkAssemblyPaths
        C++: static vtkAssemblyPaths *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


