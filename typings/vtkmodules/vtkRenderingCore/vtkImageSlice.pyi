"""
This type stub file was generated by pyright.
"""

from .vtkProp3D import vtkProp3D

class vtkImageSlice(vtkProp3D):
    """
    vtkImageSlice - represents an image in a 3D scene
    
    Superclass: vtkProp3D
    
    vtkImageSlice is used to represent an image in a 3D scene.  It
    displays the image either as a slice or as a projection from the
    camera's perspective. Adjusting the position and orientation of the
    slice is done by adjusting the focal point and direction of the
    camera, or alternatively the slice can be set manually in
    vtkImageMapper3D. The lookup table and window/leve are set in
    vtkImageProperty. Prop3D methods such as SetPosition() and
    RotateWXYZ() change the position and orientation of the data with
    respect to VTK world coordinates.@par Thanks: Thanks to David Gobbi
    at the Seaman Family MR Centre and Dept. of Clinical Neurosciences,
    Foothills Medical Centre, Calgary, for providing this class.
    @sa
    vtkImageMapper3D vtkImageProperty vtkProp3D
    """
    def ForceTranslucentOff(self):
        """
        V.ForceTranslucentOff()
        C++: virtual void ForceTranslucentOff()
        
        Force the actor to be treated as translucent.
        """
        ...
    
    def ForceTranslucentOn(self):
        """
        V.ForceTranslucentOn()
        C++: virtual void ForceTranslucentOn()
        
        Force the actor to be treated as translucent.
        """
        ...
    
    def GetBounds(self):
        """
        V.GetBounds() -> (float, float, float, float, float, float)
        C++: double *GetBounds() override;
        V.GetBounds([float, float, float, float, float, float])
        C++: void GetBounds(double bounds[6])
        
        Get the bounds - either all six at once (xmin, xmax, ymin, ymax,
        zmin, zmax) or one at a time.
        """
        ...
    
    def GetForceTranslucent(self):
        """
        V.GetForceTranslucent() -> bool
        C++: virtual bool GetForceTranslucent()
        
        Force the actor to be treated as translucent.
        """
        ...
    
    def GetImages(self, vtkPropCollection):
        """
        V.GetImages(vtkPropCollection)
        C++: void GetImages(vtkPropCollection *)
        
        For some exporters and other other operations we must be able to
        collect all the actors, volumes, and images. These methods are
        used in that process.
        """
        ...
    
    def GetMapper(self):
        """
        V.GetMapper() -> vtkImageMapper3D
        C++: virtual vtkImageMapper3D *GetMapper()
        
        Set/Get the mapper.
        """
        ...
    
    def GetMaxXBound(self):
        """
        V.GetMaxXBound() -> float
        C++: double GetMaxXBound()
        
        Get the bounds - either all six at once (xmin, xmax, ymin, ymax,
        zmin, zmax) or one at a time.
        """
        ...
    
    def GetMaxYBound(self):
        """
        V.GetMaxYBound() -> float
        C++: double GetMaxYBound()
        
        Get the bounds - either all six at once (xmin, xmax, ymin, ymax,
        zmin, zmax) or one at a time.
        """
        ...
    
    def GetMaxZBound(self):
        """
        V.GetMaxZBound() -> float
        C++: double GetMaxZBound()
        
        Get the bounds - either all six at once (xmin, xmax, ymin, ymax,
        zmin, zmax) or one at a time.
        """
        ...
    
    def GetMinXBound(self):
        """
        V.GetMinXBound() -> float
        C++: double GetMinXBound()
        
        Get the bounds - either all six at once (xmin, xmax, ymin, ymax,
        zmin, zmax) or one at a time.
        """
        ...
    
    def GetMinYBound(self):
        """
        V.GetMinYBound() -> float
        C++: double GetMinYBound()
        
        Get the bounds - either all six at once (xmin, xmax, ymin, ymax,
        zmin, zmax) or one at a time.
        """
        ...
    
    def GetMinZBound(self):
        """
        V.GetMinZBound() -> float
        C++: double GetMinZBound()
        
        Get the bounds - either all six at once (xmin, xmax, ymin, ymax,
        zmin, zmax) or one at a time.
        """
        ...
    
    def GetMTime(self):
        """
        V.GetMTime() -> int
        C++: vtkMTimeType GetMTime() override;
        
        Return the MTime also considering the property etc.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetProperty(self):
        """
        V.GetProperty() -> vtkImageProperty
        C++: virtual vtkImageProperty *GetProperty()
        
        Set/Get the image display properties.
        """
        ...
    
    def GetRedrawMTime(self):
        """
        V.GetRedrawMTime() -> int
        C++: vtkMTimeType GetRedrawMTime() override;
        
        Return the mtime of anything that would cause the rendered image
        to appear differently. Usually this involves checking the mtime
        of the prop plus anything else it depends on such as properties,
        mappers, etc.
        """
        ...
    
    def HasTranslucentPolygonalGeometry(self):
        """
        V.HasTranslucentPolygonalGeometry() -> int
        C++: vtkTypeBool HasTranslucentPolygonalGeometry() override;
        
        Internal method, should only be used by rendering. This method
        will always return 0 unless ForceTranslucent is On.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkImageSlice
        C++: vtkImageSlice *NewInstance()
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: void ReleaseGraphicsResources(vtkWindow *win) override;
        
        Release any resources held by this prop.
        """
        ...
    
    def Render(self, vtkRenderer):
        """
        V.Render(vtkRenderer)
        C++: virtual void Render(vtkRenderer *)
        
        This causes the image and its mapper to be rendered. Note that a
        side effect of this method is that the pipeline will be updated.
        """
        ...
    
    def RenderOpaqueGeometry(self, vtkViewport):
        """
        V.RenderOpaqueGeometry(vtkViewport) -> int
        C++: int RenderOpaqueGeometry(vtkViewport *viewport) override;
        
        Support the standard render methods.
        """
        ...
    
    def RenderOverlay(self, vtkViewport):
        """
        V.RenderOverlay(vtkViewport) -> int
        C++: int RenderOverlay(vtkViewport *viewport) override;
        
        Support the standard render methods.
        """
        ...
    
    def RenderTranslucentPolygonalGeometry(self, vtkViewport):
        """
        V.RenderTranslucentPolygonalGeometry(vtkViewport) -> int
        C++: int RenderTranslucentPolygonalGeometry(vtkViewport *viewport)
             override;
        
        Support the standard render methods.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkImageSlice
        C++: static vtkImageSlice *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetForceTranslucent(self, bool):
        """
        V.SetForceTranslucent(bool)
        C++: virtual void SetForceTranslucent(bool _arg)
        
        Force the actor to be treated as translucent.
        """
        ...
    
    def SetMapper(self, vtkImageMapper3D):
        """
        V.SetMapper(vtkImageMapper3D)
        C++: void SetMapper(vtkImageMapper3D *mapper)
        
        Set/Get the mapper.
        """
        ...
    
    def SetProperty(self, vtkImageProperty):
        """
        V.SetProperty(vtkImageProperty)
        C++: void SetProperty(vtkImageProperty *property)
        
        Set/Get the image display properties.
        """
        ...
    
    def SetStackedImagePass(self, p_int):
        """
        V.SetStackedImagePass(int)
        C++: void SetStackedImagePass(int pass)
        
        For stacked image rendering, set the pass.  The first pass
        renders just the backing polygon, the second pass renders the
        image, and the third pass renders the depth buffer. Set to -1 to
        render all of these in the same pass.
        """
        ...
    
    def ShallowCopy(self, vtkProp):
        """
        V.ShallowCopy(vtkProp)
        C++: void ShallowCopy(vtkProp *prop) override;
        
        Shallow copy of this vtkImageSlice. Overloads the virtual vtkProp
        method.
        """
        ...
    
    def Update(self):
        """
        V.Update()
        C++: void Update()
        
        Update the rendering pipeline by updating the ImageMapper
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


