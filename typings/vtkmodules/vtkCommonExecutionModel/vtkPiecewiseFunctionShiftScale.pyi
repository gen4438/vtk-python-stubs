"""
This type stub file was generated by pyright.
"""

from .vtkPiecewiseFunctionAlgorithm import vtkPiecewiseFunctionAlgorithm

class vtkPiecewiseFunctionShiftScale(vtkPiecewiseFunctionAlgorithm):
    """
    vtkPiecewiseFunctionShiftScale - 
    
    Superclass: vtkPiecewiseFunctionAlgorithm
    """
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetPositionScale(self):
        """
        V.GetPositionScale() -> float
        C++: virtual double GetPositionScale()
        """
        ...
    
    def GetPositionShift(self):
        """
        V.GetPositionShift() -> float
        C++: virtual double GetPositionShift()
        """
        ...
    
    def GetValueScale(self):
        """
        V.GetValueScale() -> float
        C++: virtual double GetValueScale()
        """
        ...
    
    def GetValueShift(self):
        """
        V.GetValueShift() -> float
        C++: virtual double GetValueShift()
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkPiecewiseFunctionShiftScale
        C++: vtkPiecewiseFunctionShiftScale *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkPiecewiseFunctionShiftScale
        C++: static vtkPiecewiseFunctionShiftScale *SafeDownCast(
            vtkObjectBase *o)
        """
        ...
    
    def SetPositionScale(self, p_float):
        """
        V.SetPositionScale(float)
        C++: virtual void SetPositionScale(double _arg)
        """
        ...
    
    def SetPositionShift(self, p_float):
        """
        V.SetPositionShift(float)
        C++: virtual void SetPositionShift(double _arg)
        """
        ...
    
    def SetValueScale(self, p_float):
        """
        V.SetValueScale(float)
        C++: virtual void SetValueScale(double _arg)
        """
        ...
    
    def SetValueShift(self, p_float):
        """
        V.SetValueShift(float)
        C++: virtual void SetValueShift(double _arg)
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


