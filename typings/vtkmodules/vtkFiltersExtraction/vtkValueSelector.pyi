"""
This type stub file was generated by pyright.
"""

from .vtkSelector import vtkSelector

class vtkValueSelector(vtkSelector):
    """
    vtkValueSelector - selects elements matching chosen values.
    
    Superclass: vtkSelector
    
    vtkValueSelector is a vtkSelector that can select elements matching
    values. This can handle a wide array of
    vtkSelectionNode::SelectionContent types. These include
    vtkSelectionNode::GLOBALIDS, vtkSelectionNode::PEDIGREEIDS,
    vtkSelectionNode::VALUES, vtkSelectionNode::INDICES, and
    vtkSelectionNode::THRESHOLDS.
    
    A few things to note:
    
    * vtkSelectionNode::SelectionList must be 2-component array for
      content-type = vtkSelectionNode::THRESHOLDS and 1-component array
      for all other support content-types. For 1-component selection
      list, this will match items where the field array (or index) value
      matches any value in the selection list. For 2-component selection
      list, this will match those items with values in inclusive-range
      specified by the two components.
    
    * For vtkSelectionNode::VALUES or vtkSelectionNode::THRESHOLDS, the
      field array to select on is defined by the name given the
      SelectionList itself. If the SelectionList has no name (or is an
      empty string), then the active scalars from the dataset will be
      chosen.
    """
    def Finalize(self):
        """
        V.Finalize()
        C++: void Finalize() override;
        
        Does any cleanup of objects created in Initialize
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def Initialize(self, vtkSelectionNode):
        """
        V.Initialize(vtkSelectionNode)
        C++: void Initialize(vtkSelectionNode *node) override;
        
        Sets the vtkSelectionNode used by this selection operator and
        initializes the data structures in the selection operator based
        on the selection.
        
        (for example in the vtkFrustumSelector this creates the vtkPlanes
        implicit function to represent the frustum).
        
        @param node The selection node that determines the behavior of
            this operator.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkValueSelector
        C++: vtkValueSelector *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkValueSelector
        C++: static vtkValueSelector *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


