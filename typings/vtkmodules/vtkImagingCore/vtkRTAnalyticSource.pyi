"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkCommonExecutionModel as __vtkmodules_vtkCommonExecutionModel

class vtkRTAnalyticSource(__vtkmodules_vtkCommonExecutionModel.vtkImageAlgorithm):
    """
    vtkRTAnalyticSource - Create an image for regression testing
    
    Superclass: vtkImageAlgorithm
    
    vtkRTAnalyticSource just produces images with pixel values determined
    by a Maximum*Gaussian*XMag*sin(XFreq*x)*sin(YFreq*y)*cos(ZFreq*z)
    Values are float scalars on point data with name "RTData".
    """
    def GetCenter(self):
        """
        V.GetCenter() -> (float, float, float)
        C++: virtual double *GetCenter()
        
        Set/Get the center of function. Initial value is {0.0,0.0,0.0}
        """
        ...
    
    def GetMaximum(self):
        """
        V.GetMaximum() -> float
        C++: virtual double GetMaximum()
        
        Set/Get the Maximum value of the function. Initial value is
        255.0.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetStandardDeviation(self):
        """
        V.GetStandardDeviation() -> float
        C++: virtual double GetStandardDeviation()
        
        Set/Get the standard deviation of the function. Initial value is
        0.5.
        """
        ...
    
    def GetSubsampleRate(self):
        """
        V.GetSubsampleRate() -> int
        C++: virtual int GetSubsampleRate()
        
        Set/Get the sub-sample rate. Initial value is 1.
        """
        ...
    
    def GetWholeExtent(self):
        """
        V.GetWholeExtent() -> (int, int, int, int, int, int)
        C++: virtual int *GetWholeExtent()
        
        Set/Get the extent of the whole output image. Initial value is
        {-10,10,-10,10,-10,10}
        """
        ...
    
    def GetXFreq(self):
        """
        V.GetXFreq() -> float
        C++: virtual double GetXFreq()
        
        Set/Get the natural frequency in x. Initial value is 60.
        """
        ...
    
    def GetXMag(self):
        """
        V.GetXMag() -> float
        C++: virtual double GetXMag()
        
        Set/Get the magnitude in x. Initial value is 10.
        """
        ...
    
    def GetYFreq(self):
        """
        V.GetYFreq() -> float
        C++: virtual double GetYFreq()
        
        Set/Get the natural frequency in y. Initial value is 30.
        """
        ...
    
    def GetYMag(self):
        """
        V.GetYMag() -> float
        C++: virtual double GetYMag()
        
        Set/Get the magnitude in y. Initial value is 18.
        """
        ...
    
    def GetZFreq(self):
        """
        V.GetZFreq() -> float
        C++: virtual double GetZFreq()
        
        Set/Get the natural frequency in z. Initial value is 40.
        """
        ...
    
    def GetZMag(self):
        """
        V.GetZMag() -> float
        C++: virtual double GetZMag()
        
        Set/Get the magnitude in z. Initial value is 5.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkRTAnalyticSource
        C++: vtkRTAnalyticSource *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkRTAnalyticSource
        C++: static vtkRTAnalyticSource *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetCenter(self, p_float, p_float_1, p_float_2):
        """
        V.SetCenter(float, float, float)
        C++: virtual void SetCenter(double _arg1, double _arg2,
            double _arg3)
        V.SetCenter((float, float, float))
        C++: virtual void SetCenter(const double _arg[3])
        
        Set/Get the center of function. Initial value is {0.0,0.0,0.0}
        """
        ...
    
    def SetMaximum(self, p_float):
        """
        V.SetMaximum(float)
        C++: virtual void SetMaximum(double _arg)
        
        Set/Get the Maximum value of the function. Initial value is
        255.0.
        """
        ...
    
    def SetStandardDeviation(self, p_float):
        """
        V.SetStandardDeviation(float)
        C++: virtual void SetStandardDeviation(double _arg)
        
        Set/Get the standard deviation of the function. Initial value is
        0.5.
        """
        ...
    
    def SetSubsampleRate(self, p_int):
        """
        V.SetSubsampleRate(int)
        C++: virtual void SetSubsampleRate(int _arg)
        
        Set/Get the sub-sample rate. Initial value is 1.
        """
        ...
    
    def SetWholeExtent(self, p_int, p_int_1, p_int_2, p_int_3, p_int_4, p_int_5):
        """
        V.SetWholeExtent(int, int, int, int, int, int)
        C++: void SetWholeExtent(int xMinx, int xMax, int yMin, int yMax,
            int zMin, int zMax)
        
        Set/Get the extent of the whole output image. Initial value is
        {-10,10,-10,10,-10,10}
        """
        ...
    
    def SetXFreq(self, p_float):
        """
        V.SetXFreq(float)
        C++: virtual void SetXFreq(double _arg)
        
        Set/Get the natural frequency in x. Initial value is 60.
        """
        ...
    
    def SetXMag(self, p_float):
        """
        V.SetXMag(float)
        C++: virtual void SetXMag(double _arg)
        
        Set/Get the magnitude in x. Initial value is 10.
        """
        ...
    
    def SetYFreq(self, p_float):
        """
        V.SetYFreq(float)
        C++: virtual void SetYFreq(double _arg)
        
        Set/Get the natural frequency in y. Initial value is 30.
        """
        ...
    
    def SetYMag(self, p_float):
        """
        V.SetYMag(float)
        C++: virtual void SetYMag(double _arg)
        
        Set/Get the magnitude in y. Initial value is 18.
        """
        ...
    
    def SetZFreq(self, p_float):
        """
        V.SetZFreq(float)
        C++: virtual void SetZFreq(double _arg)
        
        Set/Get the natural frequency in z. Initial value is 40.
        """
        ...
    
    def SetZMag(self, p_float):
        """
        V.SetZMag(float)
        C++: virtual void SetZMag(double _arg)
        
        Set/Get the magnitude in z. Initial value is 5.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


