"""
This type stub file was generated by pyright.
"""

from .vtkImagePointDataIterator import vtkImagePointDataIterator

class vtkImagePointIterator(vtkImagePointDataIterator):
    """
    vtkImagePointIterator - iterate over all data points in an image.
    
    Superclass: vtkImagePointDataIterator
    
    This class will iterate over an image.  For each position, it
    provides the (x,y,z) position, the (I,J,K) index, and the point Id. 
    If a stencil is provided, then it also reports, for each point,
    whether the point is inside the stencil.
    
    The iterator can go through the image point-by-point or span-by-span.
    The Next() method advances to the next point, while the NextSpan()
    method skips to the beginning of the next span, where a span is
    defined as a start position and point count within an image row.
    @sa
    vtkImageData vtkImageStencilData vtkImageProgressIterator
    
    vtkImagePointIterator()
    vtkImagePointIterator(vtkImageData *image,
        const int extent[6]=nullptr, vtkImageStencilData *stencil=nullptr,
         vtkAlgorithm *algorithm=nullptr, int threadId=0)
    vtkImagePointIterator(const &vtkImagePointIterator)
    """
    def GetPosition(self):
        """
        V.GetPosition() -> (float, float, float)
        C++: double *GetPosition()
        V.GetPosition([float, float, float])
        C++: void GetPosition(double x[3])
        
        Get the current position.
        """
        ...
    
    def Initialize(self, vtkImageData, , vtkImageStencilData, vtkAlgorithm, p_int_6):
        """
        V.Initialize(vtkImageData, (int, int, int, int, int, int),
            vtkImageStencilData, vtkAlgorithm, int)
        C++: void Initialize(vtkImageData *image,
            const int extent[6]=nullptr,
            vtkImageStencilData *stencil=nullptr,
            vtkAlgorithm *algorithm=nullptr, int threadId=0)
        
        Initialize an iterator.  See constructor for more details.
        """
        ...
    
    def IsAtEnd(self):
        """
        V.IsAtEnd() -> bool
        C++: bool IsAtEnd()
        
        Test if the iterator has completed iterating over the entire
        extent.
        """
        ...
    
    def Next(self):
        """
        V.Next()
        C++: void Next()
        
        Move to the next position (rather than directly to the next
        span). This will automatically advance to the next span if the
        end of the current span is reached.
        """
        ...
    
    def NextSpan(self):
        """
        V.NextSpan()
        C++: void NextSpan()
        
        Move the iterator to the beginning of the next span. A span is a
        contiguous region of the image over which nothing but the point
        Id and the X index changes.
        """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __hash__(self, *args, **kwargs) -> int:
        """ Return hash(self). """
        ...
    
    def __init__(self) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    


