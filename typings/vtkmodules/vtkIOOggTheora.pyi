"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkIOMovie as __vtkmodules_vtkIOMovie

class vtkOggTheoraWriter(__vtkmodules_vtkIOMovie.vtkGenericMovieWriter):
    """
    vtkOggTheoraWriter - Uses the ogg and theora libraries to write video
    files.
    
    Superclass: vtkGenericMovieWriter
    
    vtkOggTheoraWriter is an adapter that allows VTK to use the ogg and
    theora libraries to write movie files.  This class creates .ogv files
    containing theora encoded video without audio.
    
    This implementation is based on vtkFFMPEGWriter and uses some code
    derived from the encoder example distributed with libtheora.
    """
    def End(self):
        """
        V.End()
        C++: void End() override;
        
        These methods start writing an Movie file, write a frame to the
        file and then end the writing process.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetQuality(self):
        """
        V.GetQuality() -> int
        C++: virtual int GetQuality()
        
        Set/Get the compression quality. 0 means worst quality and
        smallest file size 2 means best quality and largest file size
        """
        ...
    
    def GetQualityMaxValue(self):
        """
        V.GetQualityMaxValue() -> int
        C++: virtual int GetQualityMaxValue()
        
        Set/Get the compression quality. 0 means worst quality and
        smallest file size 2 means best quality and largest file size
        """
        ...
    
    def GetQualityMinValue(self):
        """
        V.GetQualityMinValue() -> int
        C++: virtual int GetQualityMinValue()
        
        Set/Get the compression quality. 0 means worst quality and
        smallest file size 2 means best quality and largest file size
        """
        ...
    
    def GetRate(self):
        """
        V.GetRate() -> int
        C++: virtual int GetRate()
        
        Set/Get the frame rate, in frame/s.
        """
        ...
    
    def GetRateMaxValue(self):
        """
        V.GetRateMaxValue() -> int
        C++: virtual int GetRateMaxValue()
        
        Set/Get the frame rate, in frame/s.
        """
        ...
    
    def GetRateMinValue(self):
        """
        V.GetRateMinValue() -> int
        C++: virtual int GetRateMinValue()
        
        Set/Get the frame rate, in frame/s.
        """
        ...
    
    def GetSubsampling(self):
        """
        V.GetSubsampling() -> int
        C++: virtual vtkTypeBool GetSubsampling()
        
        Is the video to be encoded using 4:2:0 subsampling?
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkOggTheoraWriter
        C++: vtkOggTheoraWriter *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkOggTheoraWriter
        C++: static vtkOggTheoraWriter *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetQuality(self, p_int):
        """
        V.SetQuality(int)
        C++: virtual void SetQuality(int _arg)
        
        Set/Get the compression quality. 0 means worst quality and
        smallest file size 2 means best quality and largest file size
        """
        ...
    
    def SetRate(self, p_int):
        """
        V.SetRate(int)
        C++: virtual void SetRate(int _arg)
        
        Set/Get the frame rate, in frame/s.
        """
        ...
    
    def SetSubsampling(self, p_int):
        """
        V.SetSubsampling(int)
        C++: virtual void SetSubsampling(vtkTypeBool _arg)
        
        Is the video to be encoded using 4:2:0 subsampling?
        """
        ...
    
    def Start(self):
        """
        V.Start()
        C++: void Start() override;
        
        These methods start writing an Movie file, write a frame to the
        file and then end the writing process.
        """
        ...
    
    def SubsamplingOff(self):
        """
        V.SubsamplingOff()
        C++: virtual void SubsamplingOff()
        
        Is the video to be encoded using 4:2:0 subsampling?
        """
        ...
    
    def SubsamplingOn(self):
        """
        V.SubsamplingOn()
        C++: virtual void SubsamplingOn()
        
        Is the video to be encoded using 4:2:0 subsampling?
        """
        ...
    
    def Write(self):
        """
        V.Write()
        C++: void Write() override;
        
        These methods start writing an Movie file, write a frame to the
        file and then end the writing process.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


__loader__ = ...
__spec__ = ...
