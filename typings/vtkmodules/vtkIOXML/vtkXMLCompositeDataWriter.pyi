"""
This type stub file was generated by pyright.
"""

from .vtkXMLWriter import vtkXMLWriter

class vtkXMLCompositeDataWriter(vtkXMLWriter):
    """
    vtkXMLCompositeDataWriter - Writer for multi-group datasets
    
    Superclass: vtkXMLWriter
    
    vtkXMLCompositeDataWriter writes (serially) the VTK XML multi-group,
    multi-block hierarchical and hierarchical box files. XML multi-group
    data files are meta-files that point to a list of serial VTK XML
    files.
    @sa
    vtkXMLPCompositeDataWriter
    """
    def GetDefaultFileExtension(self):
        """
        V.GetDefaultFileExtension() -> string
        C++: const char *GetDefaultFileExtension() override;
        
        Get the default file extension for files written by this writer.
        """
        ...
    
    def GetGhostLevel(self):
        """
        V.GetGhostLevel() -> int
        C++: virtual int GetGhostLevel()
        
        Get/Set the number of ghost levels to be written.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetWriteMetaFile(self):
        """
        V.GetWriteMetaFile() -> int
        C++: virtual int GetWriteMetaFile()
        
        Get/Set whether this instance will write the meta-file.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkXMLCompositeDataWriter
        C++: vtkXMLCompositeDataWriter *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkXMLCompositeDataWriter
        C++: static vtkXMLCompositeDataWriter *SafeDownCast(
            vtkObjectBase *o)
        """
        ...
    
    def SetGhostLevel(self, p_int):
        """
        V.SetGhostLevel(int)
        C++: virtual void SetGhostLevel(int _arg)
        
        Get/Set the number of ghost levels to be written.
        """
        ...
    
    def SetWriteMetaFile(self, p_int):
        """
        V.SetWriteMetaFile(int)
        C++: virtual void SetWriteMetaFile(int flag)
        
        Get/Set whether this instance will write the meta-file.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


