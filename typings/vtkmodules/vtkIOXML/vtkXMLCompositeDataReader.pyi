"""
This type stub file was generated by pyright.
"""

from .vtkXMLReader import vtkXMLReader

class vtkXMLCompositeDataReader(vtkXMLReader):
    """
    vtkXMLCompositeDataReader - Reader for multi-group datasets
    
    Superclass: vtkXMLReader
    
    vtkXMLCompositeDataReader reads the VTK XML multi-group data file
    format. XML multi-group data files are meta-files that point to a
    list of serial VTK XML files. When reading in parallel, it will
    distribute sub-blocks among processor. If the number of sub-blocks is
    less than the number of processors, some processors will not have any
    sub-blocks for that group. If the number of sub-blocks is larger than
    the number of processors, each processor will possibly have more than
    1 sub-block.
    """
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetOutput(self):
        """
        V.GetOutput() -> vtkCompositeDataSet
        C++: vtkCompositeDataSet *GetOutput()
        V.GetOutput(int) -> vtkCompositeDataSet
        C++: vtkCompositeDataSet *GetOutput(int)
        
        Get the output data object for a port on this algorithm.
        """
        ...
    
    def GetPieceDistribution(self):
        """
        V.GetPieceDistribution() -> int
        C++: virtual int GetPieceDistribution()
        """
        ...
    
    def GetPieceDistributionMaxValue(self):
        """
        V.GetPieceDistributionMaxValue() -> int
        C++: virtual int GetPieceDistributionMaxValue()
        """
        ...
    
    def GetPieceDistributionMinValue(self):
        """
        V.GetPieceDistributionMinValue() -> int
        C++: virtual int GetPieceDistributionMinValue()
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkXMLCompositeDataReader
        C++: vtkXMLCompositeDataReader *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkXMLCompositeDataReader
        C++: static vtkXMLCompositeDataReader *SafeDownCast(
            vtkObjectBase *o)
        """
        ...
    
    def SetPieceDistribution(self, p_int):
        """
        V.SetPieceDistribution(int)
        C++: virtual void SetPieceDistribution(int _arg)
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    Block = ...
    Interleave = ...
    __dict__ = ...
    __vtkname__ = ...


