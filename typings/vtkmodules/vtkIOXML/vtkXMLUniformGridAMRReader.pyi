"""
This type stub file was generated by pyright.
"""

from .vtkXMLCompositeDataReader import vtkXMLCompositeDataReader

class vtkXMLUniformGridAMRReader(vtkXMLCompositeDataReader):
    """
    vtkXMLUniformGridAMRReader - Reader for amr datasets
    (vtkOverlappingAMR or vtkNonOverlappingAMR).
    
    Superclass: vtkXMLCompositeDataReader
    
    vtkXMLUniformGridAMRReader reads the VTK XML data files for all types
    of amr datasets including vtkOverlappingAMR, vtkNonOverlappingAMR and
    the legacy vtkHierarchicalBoxDataSet. The reader uses information in
    the file to determine what type of dataset is actually being read and
    creates the output-data object accordingly.
    
    This reader can only read files with version 1.1 or greater. Older
    versions can be converted to the newer versions using
    vtkXMLHierarchicalBoxDataFileConverter.
    """
    def GetMaximumLevelsToReadByDefault(self):
        """
        V.GetMaximumLevelsToReadByDefault() -> int
        C++: virtual unsigned int GetMaximumLevelsToReadByDefault()
        
        This reader supports demand-driven heavy data reading i.e.
        downstream pipeline can request specific blocks from the AMR
        using vtkCompositeDataPipeline::UPDATE_COMPOSITE_INDICES() key in
        RequestUpdateExtent() pass. However, when down-stream doesn't
        provide any specific keys, the default behavior can be setup to
        read at-most N levels by default. The number of levels read can
        be set using this method. Set this to 0 to imply no limit.
        Default is 0.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkXMLUniformGridAMRReader
        C++: vtkXMLUniformGridAMRReader *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkXMLUniformGridAMRReader
        C++: static vtkXMLUniformGridAMRReader *SafeDownCast(
            vtkObjectBase *o)
        """
        ...
    
    def SetMaximumLevelsToReadByDefault(self, p_int):
        """
        V.SetMaximumLevelsToReadByDefault(int)
        C++: virtual void SetMaximumLevelsToReadByDefault(
            unsigned int _arg)
        
        This reader supports demand-driven heavy data reading i.e.
        downstream pipeline can request specific blocks from the AMR
        using vtkCompositeDataPipeline::UPDATE_COMPOSITE_INDICES() key in
        RequestUpdateExtent() pass. However, when down-stream doesn't
        provide any specific keys, the default behavior can be setup to
        read at-most N levels by default. The number of levels read can
        be set using this method. Set this to 0 to imply no limit.
        Default is 0.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


