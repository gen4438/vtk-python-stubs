"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkCommonExecutionModel as __vtkmodules_vtkCommonExecutionModel

class vtkInterpolateDataSetAttributes(__vtkmodules_vtkCommonExecutionModel.vtkDataSetAlgorithm):
    """
    vtkInterpolateDataSetAttributes - interpolate scalars, vectors, etc.
    
    Superclass: vtkDataSetAlgorithm
    
    and other dataset attributes
    
    vtkInterpolateDataSetAttributes is a filter that interpolates data
    set attribute values between input data sets. The input to the filter
    must be datasets of the same type, same number of cells, and same
    number of points. The output of the filter is a data set of the same
    type as the input dataset and whose attribute values have been
    interpolated at the parametric value specified.
    
    The filter is used by specifying two or more input data sets (total
    of N), and a parametric value t (0 <= t <= N-1). The output will
    contain interpolated data set attributes common to all input data
    sets. (For example, if one input has scalars and vectors, and another
    has just scalars, then only scalars will be interpolated and output.)
    """
    def GetInputList(self):
        """
        V.GetInputList() -> vtkDataSetCollection
        C++: vtkDataSetCollection *GetInputList()
        
        Return the list of inputs to this filter.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetT(self):
        """
        V.GetT() -> float
        C++: virtual double GetT()
        
        Specify interpolation parameter t.
        """
        ...
    
    def GetTMaxValue(self):
        """
        V.GetTMaxValue() -> float
        C++: virtual double GetTMaxValue()
        
        Specify interpolation parameter t.
        """
        ...
    
    def GetTMinValue(self):
        """
        V.GetTMinValue() -> float
        C++: virtual double GetTMinValue()
        
        Specify interpolation parameter t.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkInterpolateDataSetAttributes
        C++: vtkInterpolateDataSetAttributes *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkInterpolateDataSetAttributes
        C++: static vtkInterpolateDataSetAttributes *SafeDownCast(
            vtkObjectBase *o)
        """
        ...
    
    def SetT(self, p_float):
        """
        V.SetT(float)
        C++: virtual void SetT(double _arg)
        
        Specify interpolation parameter t.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


