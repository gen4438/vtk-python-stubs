"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkCommonExecutionModel as __vtkmodules_vtkCommonExecutionModel

class vtkNormalizeMatrixVectors(__vtkmodules_vtkCommonExecutionModel.vtkArrayDataAlgorithm):
    """
    vtkNormalizeMatrixVectors - given a sparse input matrix, produces a
    sparse output matrix with each vector normalized to unit length with
    respect to a p-norm (default p=2).
    
    Superclass: vtkArrayDataAlgorithm
    
    @par Thanks: Developed by Timothy M. Shead (tshead@sandia.gov) at
    Sandia National Laboratories.
    """
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetPValue(self):
        """
        V.GetPValue() -> float
        C++: virtual double GetPValue()
        
        Value of p in p-norm normalization, subject to p >= 1.  Default
        is p=2 (Euclidean norm).
        """
        ...
    
    def GetVectorDimension(self):
        """
        V.GetVectorDimension() -> int
        C++: virtual int GetVectorDimension()
        
        Controls whether to normalize row-vectors or column-vectors.  0 =
        rows, 1 = columns.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkNormalizeMatrixVectors
        C++: vtkNormalizeMatrixVectors *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkNormalizeMatrixVectors
        C++: static vtkNormalizeMatrixVectors *SafeDownCast(
            vtkObjectBase *o)
        """
        ...
    
    def SetPValue(self, p_float):
        """
        V.SetPValue(float)
        C++: virtual void SetPValue(double _arg)
        
        Value of p in p-norm normalization, subject to p >= 1.  Default
        is p=2 (Euclidean norm).
        """
        ...
    
    def SetVectorDimension(self, p_int):
        """
        V.SetVectorDimension(int)
        C++: virtual void SetVectorDimension(int _arg)
        
        Controls whether to normalize row-vectors or column-vectors.  0 =
        rows, 1 = columns.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


