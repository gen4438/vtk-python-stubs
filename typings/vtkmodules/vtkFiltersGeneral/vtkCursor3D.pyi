"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkCommonExecutionModel as __vtkmodules_vtkCommonExecutionModel

class vtkCursor3D(__vtkmodules_vtkCommonExecutionModel.vtkPolyDataAlgorithm):
    """
    vtkCursor3D - generate a 3D cursor representation
    
    Superclass: vtkPolyDataAlgorithm
    
    vtkCursor3D is an object that generates a 3D representation of a
    cursor. The cursor consists of a wireframe bounding box, three
    intersecting axes lines that meet at the cursor focus, and "shadows"
    or projections of the axes against the sides of the bounding box.
    Each of these components can be turned on/off.
    
    This filter generates two output datasets. The first (Output) is just
    the geometric representation of the cursor. The second (Focus) is a
    single point at the focal point.
    """
    def AllOff(self):
        """
        V.AllOff()
        C++: void AllOff()
        
        Turn every part of the 3D cursor on or off.
        """
        ...
    
    def AllOn(self):
        """
        V.AllOn()
        C++: void AllOn()
        
        Turn every part of the 3D cursor on or off.
        """
        ...
    
    def AxesOff(self):
        """
        V.AxesOff()
        C++: virtual void AxesOff()
        
        Turn on/off the wireframe axes.
        """
        ...
    
    def AxesOn(self):
        """
        V.AxesOn()
        C++: virtual void AxesOn()
        
        Turn on/off the wireframe axes.
        """
        ...
    
    def GetAxes(self):
        """
        V.GetAxes() -> int
        C++: virtual vtkTypeBool GetAxes()
        
        Turn on/off the wireframe axes.
        """
        ...
    
    def GetFocalPoint(self):
        """
        V.GetFocalPoint() -> (float, float, float)
        C++: virtual double *GetFocalPoint()
        
        Set/Get the position of cursor focus. If translation mode is on,
        then the entire cursor (including bounding box, cursor, and
        shadows) is translated. Otherwise, the focal point will either be
        clamped to the bounding box, or wrapped, if Wrap is on. (Note:
        this behavior requires that the bounding box is set prior to the
        focal point.)
        """
        ...
    
    def GetFocus(self):
        """
        V.GetFocus() -> vtkPolyData
        C++: vtkPolyData *GetFocus()
        
        Get the focus for this filter.
        """
        ...
    
    def GetModelBounds(self):
        """
        V.GetModelBounds() -> (float, float, float, float, float, float)
        C++: virtual double *GetModelBounds()
        
        Set / get the boundary of the 3D cursor.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetOutline(self):
        """
        V.GetOutline() -> int
        C++: virtual vtkTypeBool GetOutline()
        
        Turn on/off the wireframe bounding box.
        """
        ...
    
    def GetTranslationMode(self):
        """
        V.GetTranslationMode() -> int
        C++: virtual vtkTypeBool GetTranslationMode()
        
        Enable/disable the translation mode. If on, changes in cursor
        position cause the entire widget to translate along with the
        cursor. By default, translation mode is off.
        """
        ...
    
    def GetWrap(self):
        """
        V.GetWrap() -> int
        C++: virtual vtkTypeBool GetWrap()
        
        Turn on/off cursor wrapping. If the cursor focus moves outside
        the specified bounds, the cursor will either be restrained
        against the nearest "wall" (Wrap=off), or it will wrap around
        (Wrap=on).
        """
        ...
    
    def GetXShadows(self):
        """
        V.GetXShadows() -> int
        C++: virtual vtkTypeBool GetXShadows()
        
        Turn on/off the wireframe x-shadows.
        """
        ...
    
    def GetYShadows(self):
        """
        V.GetYShadows() -> int
        C++: virtual vtkTypeBool GetYShadows()
        
        Turn on/off the wireframe y-shadows.
        """
        ...
    
    def GetZShadows(self):
        """
        V.GetZShadows() -> int
        C++: virtual vtkTypeBool GetZShadows()
        
        Turn on/off the wireframe z-shadows.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkCursor3D
        C++: vtkCursor3D *NewInstance()
        """
        ...
    
    def OutlineOff(self):
        """
        V.OutlineOff()
        C++: virtual void OutlineOff()
        
        Turn on/off the wireframe bounding box.
        """
        ...
    
    def OutlineOn(self):
        """
        V.OutlineOn()
        C++: virtual void OutlineOn()
        
        Turn on/off the wireframe bounding box.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkCursor3D
        C++: static vtkCursor3D *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetAxes(self, p_int):
        """
        V.SetAxes(int)
        C++: virtual void SetAxes(vtkTypeBool _arg)
        
        Turn on/off the wireframe axes.
        """
        ...
    
    def SetFocalPoint(self, p_float=..., p_float=..., p_float=...):
        """
        V.SetFocalPoint([float, float, float])
        C++: void SetFocalPoint(double x[3])
        V.SetFocalPoint(float, float, float)
        C++: void SetFocalPoint(double x, double y, double z)
        
        Set/Get the position of cursor focus. If translation mode is on,
        then the entire cursor (including bounding box, cursor, and
        shadows) is translated. Otherwise, the focal point will either be
        clamped to the bounding box, or wrapped, if Wrap is on. (Note:
        this behavior requires that the bounding box is set prior to the
        focal point.)
        """
        ...
    
    def SetModelBounds(self, p_float, p_float_1, p_float_2, p_float_3, p_float_4, p_float_5):
        """
        V.SetModelBounds(float, float, float, float, float, float)
        C++: void SetModelBounds(double xmin, double xmax, double ymin,
            double ymax, double zmin, double zmax)
        V.SetModelBounds((float, float, float, float, float, float))
        C++: void SetModelBounds(const double bounds[6])
        
        Set / get the boundary of the 3D cursor.
        """
        ...
    
    def SetOutline(self, p_int):
        """
        V.SetOutline(int)
        C++: virtual void SetOutline(vtkTypeBool _arg)
        
        Turn on/off the wireframe bounding box.
        """
        ...
    
    def SetTranslationMode(self, p_int):
        """
        V.SetTranslationMode(int)
        C++: virtual void SetTranslationMode(vtkTypeBool _arg)
        
        Enable/disable the translation mode. If on, changes in cursor
        position cause the entire widget to translate along with the
        cursor. By default, translation mode is off.
        """
        ...
    
    def SetWrap(self, p_int):
        """
        V.SetWrap(int)
        C++: virtual void SetWrap(vtkTypeBool _arg)
        
        Turn on/off cursor wrapping. If the cursor focus moves outside
        the specified bounds, the cursor will either be restrained
        against the nearest "wall" (Wrap=off), or it will wrap around
        (Wrap=on).
        """
        ...
    
    def SetXShadows(self, p_int):
        """
        V.SetXShadows(int)
        C++: virtual void SetXShadows(vtkTypeBool _arg)
        
        Turn on/off the wireframe x-shadows.
        """
        ...
    
    def SetYShadows(self, p_int):
        """
        V.SetYShadows(int)
        C++: virtual void SetYShadows(vtkTypeBool _arg)
        
        Turn on/off the wireframe y-shadows.
        """
        ...
    
    def SetZShadows(self, p_int):
        """
        V.SetZShadows(int)
        C++: virtual void SetZShadows(vtkTypeBool _arg)
        
        Turn on/off the wireframe z-shadows.
        """
        ...
    
    def TranslationModeOff(self):
        """
        V.TranslationModeOff()
        C++: virtual void TranslationModeOff()
        
        Enable/disable the translation mode. If on, changes in cursor
        position cause the entire widget to translate along with the
        cursor. By default, translation mode is off.
        """
        ...
    
    def TranslationModeOn(self):
        """
        V.TranslationModeOn()
        C++: virtual void TranslationModeOn()
        
        Enable/disable the translation mode. If on, changes in cursor
        position cause the entire widget to translate along with the
        cursor. By default, translation mode is off.
        """
        ...
    
    def WrapOff(self):
        """
        V.WrapOff()
        C++: virtual void WrapOff()
        
        Turn on/off cursor wrapping. If the cursor focus moves outside
        the specified bounds, the cursor will either be restrained
        against the nearest "wall" (Wrap=off), or it will wrap around
        (Wrap=on).
        """
        ...
    
    def WrapOn(self):
        """
        V.WrapOn()
        C++: virtual void WrapOn()
        
        Turn on/off cursor wrapping. If the cursor focus moves outside
        the specified bounds, the cursor will either be restrained
        against the nearest "wall" (Wrap=off), or it will wrap around
        (Wrap=on).
        """
        ...
    
    def XShadowsOff(self):
        """
        V.XShadowsOff()
        C++: virtual void XShadowsOff()
        
        Turn on/off the wireframe x-shadows.
        """
        ...
    
    def XShadowsOn(self):
        """
        V.XShadowsOn()
        C++: virtual void XShadowsOn()
        
        Turn on/off the wireframe x-shadows.
        """
        ...
    
    def YShadowsOff(self):
        """
        V.YShadowsOff()
        C++: virtual void YShadowsOff()
        
        Turn on/off the wireframe y-shadows.
        """
        ...
    
    def YShadowsOn(self):
        """
        V.YShadowsOn()
        C++: virtual void YShadowsOn()
        
        Turn on/off the wireframe y-shadows.
        """
        ...
    
    def ZShadowsOff(self):
        """
        V.ZShadowsOff()
        C++: virtual void ZShadowsOff()
        
        Turn on/off the wireframe z-shadows.
        """
        ...
    
    def ZShadowsOn(self):
        """
        V.ZShadowsOn()
        C++: virtual void ZShadowsOn()
        
        Turn on/off the wireframe z-shadows.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


