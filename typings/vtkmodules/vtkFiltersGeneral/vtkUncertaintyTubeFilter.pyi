"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkCommonExecutionModel as __vtkmodules_vtkCommonExecutionModel

class vtkUncertaintyTubeFilter(__vtkmodules_vtkCommonExecutionModel.vtkPolyDataAlgorithm):
    """
    vtkUncertaintyTubeFilter - generate uncertainty tubes along a polyline
    
    Superclass: vtkPolyDataAlgorithm
    
    vtkUncertaintyTubeFilter is a filter that generates ellipsoidal (in
    cross section) tubes that follows a polyline. The input is a
    vtkPolyData with polylines that have associated vector point data.
    The vector data represents the uncertainty of the polyline in the
    x-y-z directions.
    
    @warning
    The vector uncertainty values define an axis-aligned ellipsoid at
    each polyline point. The uncertainty tubes can be envisioned as the
    interpolation of these ellipsoids between the points defining the
    polyline (or rather, the interpolation of the cross section of the
    ellipsoids along the polyline).
    
    @sa
    vtkTensorGlyph vtkStreamTracer
    """
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard methods for printing and obtaining type information for
        instances of this class.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard methods for printing and obtaining type information for
        instances of this class.
        """
        ...
    
    def GetNumberOfSides(self):
        """
        V.GetNumberOfSides() -> int
        C++: virtual int GetNumberOfSides()
        
        Set / get the number of sides for the tube. At a minimum, the
        number of sides is 3.
        """
        ...
    
    def GetNumberOfSidesMaxValue(self):
        """
        V.GetNumberOfSidesMaxValue() -> int
        C++: virtual int GetNumberOfSidesMaxValue()
        
        Set / get the number of sides for the tube. At a minimum, the
        number of sides is 3.
        """
        ...
    
    def GetNumberOfSidesMinValue(self):
        """
        V.GetNumberOfSidesMinValue() -> int
        C++: virtual int GetNumberOfSidesMinValue()
        
        Set / get the number of sides for the tube. At a minimum, the
        number of sides is 3.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard methods for printing and obtaining type information for
        instances of this class.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard methods for printing and obtaining type information for
        instances of this class.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkUncertaintyTubeFilter
        C++: vtkUncertaintyTubeFilter *NewInstance()
        
        Standard methods for printing and obtaining type information for
        instances of this class.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkUncertaintyTubeFilter
        C++: static vtkUncertaintyTubeFilter *SafeDownCast(
            vtkObjectBase *o)
        
        Standard methods for printing and obtaining type information for
        instances of this class.
        """
        ...
    
    def SetNumberOfSides(self, p_int):
        """
        V.SetNumberOfSides(int)
        C++: virtual void SetNumberOfSides(int _arg)
        
        Set / get the number of sides for the tube. At a minimum, the
        number of sides is 3.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


