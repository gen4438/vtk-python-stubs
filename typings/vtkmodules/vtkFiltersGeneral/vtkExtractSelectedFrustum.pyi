"""
This type stub file was generated by pyright.
"""

from .vtkExtractSelectionBase import vtkExtractSelectionBase

class vtkExtractSelectedFrustum(vtkExtractSelectionBase):
    """
    vtkExtractSelectedFrustum - Returns the portion of the input dataset
    that lies within a selection frustum.
    
    Superclass: vtkExtractSelectionBase
    
    This class intersects the input DataSet with a frustum and determines
    which cells and points lie within the frustum. The frustum is defined
    with a vtkPlanes containing six cutting planes. The output is a
    DataSet that is either a shallow copy of the input dataset with two
    new "vtkInsidedness" attribute arrays, or a completely new
    UnstructuredGrid that contains only the cells and points of the input
    that are inside the frustum. The PreserveTopology flag controls which
    occurs. When PreserveTopology is off this filter adds a scalar array
    called vtkOriginalCellIds that says what input cell produced each
    output cell. This is an example of a Pedigree ID which helps to trace
    back results.
    
    @sa
    vtkExtractGeometry, vtkAreaPicker, vtkExtractSelection, vtkSelection
    """
    def CreateFrustum(self, p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=...):
        """
        V.CreateFrustum([float, float, float, float, float, float, float,
            float, float, float, float, float, float, float, float, float,
             float, float, float, float, float, float, float, float,
            float, float, float, float, float, float, float, float])
        C++: void CreateFrustum(double vertices[32])
        
        Given eight vertices, creates a frustum. each pt is x,y,z,1 in
        the following order near lower left, far lower left near upper
        left, far upper left near lower right, far lower right near upper
        right, far upper right
        """
        ...
    
    def GetClipPoints(self):
        """
        V.GetClipPoints() -> vtkPoints
        C++: virtual vtkPoints *GetClipPoints()
        
        Return eight points that define the selection frustum. Valid if
        create Frustum was used, invalid if SetFrustum was.
        """
        ...
    
    def GetContainingCells(self):
        """
        V.GetContainingCells() -> int
        C++: virtual int GetContainingCells()
        
        Sets/gets the intersection test type. Only meaningful when
        fieldType is vtkSelection::POINT
        """
        ...
    
    def GetFieldType(self):
        """
        V.GetFieldType() -> int
        C++: virtual int GetFieldType()
        
        Sets/gets the intersection test type.
        """
        ...
    
    def GetFrustum(self):
        """
        V.GetFrustum() -> vtkPlanes
        C++: virtual vtkPlanes *GetFrustum()
        
        Set the selection frustum. The planes object must contain six
        planes.
        """
        ...
    
    def GetInsideOut(self):
        """
        V.GetInsideOut() -> int
        C++: virtual vtkTypeBool GetInsideOut()
        
        When on, extracts cells outside the frustum instead of inside.
        """
        ...
    
    def GetMTime(self):
        """
        V.GetMTime() -> int
        C++: vtkMTimeType GetMTime() override;
        
        Return the MTime taking into account changes to the Frustum
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetShowBounds(self):
        """
        V.GetShowBounds() -> int
        C++: virtual vtkTypeBool GetShowBounds()
        
        When On, this returns an unstructured grid that outlines
        selection area. Off is the default.
        """
        ...
    
    def InsideOutOff(self):
        """
        V.InsideOutOff()
        C++: virtual void InsideOutOff()
        
        When on, extracts cells outside the frustum instead of inside.
        """
        ...
    
    def InsideOutOn(self):
        """
        V.InsideOutOn()
        C++: virtual void InsideOutOn()
        
        When on, extracts cells outside the frustum instead of inside.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkExtractSelectedFrustum
        C++: vtkExtractSelectedFrustum *NewInstance()
        """
        ...
    
    def OverallBoundsTest(self, *float):
        """
        V.OverallBoundsTest([float, ...]) -> int
        C++: int OverallBoundsTest(double *bounds)
        
        Does a quick test on the AABBox defined by the bounds.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkExtractSelectedFrustum
        C++: static vtkExtractSelectedFrustum *SafeDownCast(
            vtkObjectBase *o)
        """
        ...
    
    def SetContainingCells(self, p_int):
        """
        V.SetContainingCells(int)
        C++: virtual void SetContainingCells(int _arg)
        
        Sets/gets the intersection test type. Only meaningful when
        fieldType is vtkSelection::POINT
        """
        ...
    
    def SetFieldType(self, p_int):
        """
        V.SetFieldType(int)
        C++: virtual void SetFieldType(int _arg)
        
        Sets/gets the intersection test type.
        """
        ...
    
    def SetFrustum(self, vtkPlanes):
        """
        V.SetFrustum(vtkPlanes)
        C++: virtual void SetFrustum(vtkPlanes *)
        
        Set the selection frustum. The planes object must contain six
        planes.
        """
        ...
    
    def SetInsideOut(self, p_int):
        """
        V.SetInsideOut(int)
        C++: virtual void SetInsideOut(vtkTypeBool _arg)
        
        When on, extracts cells outside the frustum instead of inside.
        """
        ...
    
    def SetShowBounds(self, p_int):
        """
        V.SetShowBounds(int)
        C++: virtual void SetShowBounds(vtkTypeBool _arg)
        
        When On, this returns an unstructured grid that outlines
        selection area. Off is the default.
        """
        ...
    
    def ShowBoundsOff(self):
        """
        V.ShowBoundsOff()
        C++: virtual void ShowBoundsOff()
        
        When On, this returns an unstructured grid that outlines
        selection area. Off is the default.
        """
        ...
    
    def ShowBoundsOn(self):
        """
        V.ShowBoundsOn()
        C++: virtual void ShowBoundsOn()
        
        When On, this returns an unstructured grid that outlines
        selection area. Off is the default.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


