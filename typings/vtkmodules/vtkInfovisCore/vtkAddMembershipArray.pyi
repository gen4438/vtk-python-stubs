"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkCommonExecutionModel as __vtkmodules_vtkCommonExecutionModel

class vtkAddMembershipArray(__vtkmodules_vtkCommonExecutionModel.vtkPassInputTypeAlgorithm):
    """
    vtkAddMembershipArray - Add an array to the output indicating
    membership within an input selection.
    
    Superclass: vtkPassInputTypeAlgorithm
    
    This filter takes an input selection, vtkDataSetAttribute
    information, and data object and adds a bit array to the output
    vtkDataSetAttributes indicating whether each index was selected or
    not.
    """
    def GetFieldType(self):
        """
        V.GetFieldType() -> int
        C++: virtual int GetFieldType()
        
        The field type to add the membership array to.
        """
        ...
    
    def GetFieldTypeMaxValue(self):
        """
        V.GetFieldTypeMaxValue() -> int
        C++: virtual int GetFieldTypeMaxValue()
        
        The field type to add the membership array to.
        """
        ...
    
    def GetFieldTypeMinValue(self):
        """
        V.GetFieldTypeMinValue() -> int
        C++: virtual int GetFieldTypeMinValue()
        
        The field type to add the membership array to.
        """
        ...
    
    def GetInputArrayName(self):
        """
        V.GetInputArrayName() -> string
        C++: virtual char *GetInputArrayName()
        """
        ...
    
    def GetInputValues(self):
        """
        V.GetInputValues() -> vtkAbstractArray
        C++: virtual vtkAbstractArray *GetInputValues()
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetOutputArrayName(self):
        """
        V.GetOutputArrayName() -> string
        C++: virtual char *GetOutputArrayName()
        
        The name of the array added to the output vtkDataSetAttributes
        indicating membership. Defaults to "membership".
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkAddMembershipArray
        C++: vtkAddMembershipArray *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkAddMembershipArray
        C++: static vtkAddMembershipArray *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetFieldType(self, p_int):
        """
        V.SetFieldType(int)
        C++: virtual void SetFieldType(int _arg)
        
        The field type to add the membership array to.
        """
        ...
    
    def SetInputArrayName(self, string):
        """
        V.SetInputArrayName(string)
        C++: virtual void SetInputArrayName(const char *_arg)
        """
        ...
    
    def SetInputValues(self, vtkAbstractArray):
        """
        V.SetInputValues(vtkAbstractArray)
        C++: void SetInputValues(vtkAbstractArray *)
        """
        ...
    
    def SetOutputArrayName(self, string):
        """
        V.SetOutputArrayName(string)
        C++: virtual void SetOutputArrayName(const char *_arg)
        
        The name of the array added to the output vtkDataSetAttributes
        indicating membership. Defaults to "membership".
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    CELL_DATA = ...
    EDGE_DATA = ...
    FIELD_DATA = ...
    POINT_DATA = ...
    ROW_DATA = ...
    VERTEX_DATA = ...
    __dict__ = ...
    __vtkname__ = ...


