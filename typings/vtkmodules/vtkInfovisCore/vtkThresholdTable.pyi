"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkCommonExecutionModel as __vtkmodules_vtkCommonExecutionModel

class vtkThresholdTable(__vtkmodules_vtkCommonExecutionModel.vtkTableAlgorithm):
    """
    vtkThresholdTable - Thresholds table rows.
    
    Superclass: vtkTableAlgorithm
    
    vtkThresholdTable uses minimum and/or maximum values to threshold
    table rows based on the values in a particular column. The column to
    threshold is specified using SetInputArrayToProcess(0, ...).
    """
    def GetMaxValue(self):
        """
        V.GetMaxValue() -> vtkVariant
        C++: virtual vtkVariant GetMaxValue()
        
        The maximum value for the threshold. This may be any data type
        stored in a vtkVariant.
        """
        ...
    
    def GetMinValue(self):
        """
        V.GetMinValue() -> vtkVariant
        C++: virtual vtkVariant GetMinValue()
        
        The minimum value for the threshold. This may be any data type
        stored in a vtkVariant.
        """
        ...
    
    def GetMode(self):
        """
        V.GetMode() -> int
        C++: virtual int GetMode()
        
        The mode of the threshold filter.  Options are: ACCEPT_LESS_THAN
        (0) accepts rows with values < MaxValue; ACCEPT_GREATER_THAN (1)
        accepts rows with values > MinValue; ACCEPT_BETWEEN (2) accepts
        rows with values > MinValue and < MaxValue; ACCEPT_OUTSIDE (3)
        accepts rows with values < MinValue or > MaxValue.
        """
        ...
    
    def GetModeMaxValue(self):
        """
        V.GetModeMaxValue() -> int
        C++: virtual int GetModeMaxValue()
        
        The mode of the threshold filter.  Options are: ACCEPT_LESS_THAN
        (0) accepts rows with values < MaxValue; ACCEPT_GREATER_THAN (1)
        accepts rows with values > MinValue; ACCEPT_BETWEEN (2) accepts
        rows with values > MinValue and < MaxValue; ACCEPT_OUTSIDE (3)
        accepts rows with values < MinValue or > MaxValue.
        """
        ...
    
    def GetModeMinValue(self):
        """
        V.GetModeMinValue() -> int
        C++: virtual int GetModeMinValue()
        
        The mode of the threshold filter.  Options are: ACCEPT_LESS_THAN
        (0) accepts rows with values < MaxValue; ACCEPT_GREATER_THAN (1)
        accepts rows with values > MinValue; ACCEPT_BETWEEN (2) accepts
        rows with values > MinValue and < MaxValue; ACCEPT_OUTSIDE (3)
        accepts rows with values < MinValue or > MaxValue.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkThresholdTable
        C++: vtkThresholdTable *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkThresholdTable
        C++: static vtkThresholdTable *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetMaxValue(self, vtkVariant):
        """
        V.SetMaxValue(vtkVariant)
        C++: virtual void SetMaxValue(vtkVariant v)
        V.SetMaxValue(float)
        C++: void SetMaxValue(double v)
        
        The maximum value for the threshold. This may be any data type
        stored in a vtkVariant.
        """
        ...
    
    def SetMinValue(self, vtkVariant):
        """
        V.SetMinValue(vtkVariant)
        C++: virtual void SetMinValue(vtkVariant v)
        V.SetMinValue(float)
        C++: void SetMinValue(double v)
        
        The minimum value for the threshold. This may be any data type
        stored in a vtkVariant.
        """
        ...
    
    def SetMode(self, p_int):
        """
        V.SetMode(int)
        C++: virtual void SetMode(int _arg)
        
        The mode of the threshold filter.  Options are: ACCEPT_LESS_THAN
        (0) accepts rows with values < MaxValue; ACCEPT_GREATER_THAN (1)
        accepts rows with values > MinValue; ACCEPT_BETWEEN (2) accepts
        rows with values > MinValue and < MaxValue; ACCEPT_OUTSIDE (3)
        accepts rows with values < MinValue or > MaxValue.
        """
        ...
    
    def ThresholdBetween(self, vtkVariant, vtkVariant_1):
        """
        V.ThresholdBetween(vtkVariant, vtkVariant)
        C++: void ThresholdBetween(vtkVariant lower, vtkVariant upper)
        V.ThresholdBetween(float, float)
        C++: void ThresholdBetween(double lower, double upper)
        
        Criterion is rows whose scalars are between lower and upper
        thresholds (inclusive of the end values).
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    ACCEPT_BETWEEN = ...
    ACCEPT_GREATER_THAN = ...
    ACCEPT_LESS_THAN = ...
    ACCEPT_OUTSIDE = ...
    __dict__ = ...
    __vtkname__ = ...


