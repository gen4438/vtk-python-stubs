"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkCommonExecutionModel as __vtkmodules_vtkCommonExecutionModel

class vtkTecplotTableReader(__vtkmodules_vtkCommonExecutionModel.vtkTableAlgorithm):
    """
    vtkTecplotTableReader - reads in Tecplot tabular data and outputs a
    vtkTable data structure.
    
    Superclass: vtkTableAlgorithm
    
    vtkTecplotTableReader is an interface for reading tabulat data in
    Tecplot ascii format.
    
    @par Thanks: Thanks to vtkDelimitedTextReader authors.
    """
    def GeneratePedigreeIdsOff(self):
        """
        V.GeneratePedigreeIdsOff()
        C++: virtual void GeneratePedigreeIdsOff()
        
        If on (default), generates pedigree ids automatically. If off,
        assign one of the arrays to be the pedigree id.
        """
        ...
    
    def GeneratePedigreeIdsOn(self):
        """
        V.GeneratePedigreeIdsOn()
        C++: virtual void GeneratePedigreeIdsOn()
        
        If on (default), generates pedigree ids automatically. If off,
        assign one of the arrays to be the pedigree id.
        """
        ...
    
    def GetColumnNamesOnLine(self):
        """
        V.GetColumnNamesOnLine() -> int
        C++: virtual vtkIdType GetColumnNamesOnLine()
        
        Specifies the line number that holds the column names. Default is
        1.
        """
        ...
    
    def GetFileName(self):
        """
        V.GetFileName() -> string
        C++: virtual char *GetFileName()
        
        Specifies the delimited text file to be loaded.
        """
        ...
    
    def GetGeneratePedigreeIds(self):
        """
        V.GetGeneratePedigreeIds() -> bool
        C++: virtual bool GetGeneratePedigreeIds()
        
        If on (default), generates pedigree ids automatically. If off,
        assign one of the arrays to be the pedigree id.
        """
        ...
    
    def GetHeaderLines(self):
        """
        V.GetHeaderLines() -> int
        C++: virtual vtkIdType GetHeaderLines()
        
        Specifies the number of lines that form the header of the file.
        Default is 2.
        """
        ...
    
    def GetLastError(self):
        """
        V.GetLastError() -> string
        C++: vtkStdString GetLastError()
        
        Returns a human-readable description of the most recent error, if
        any. Otherwise, returns an empty string.  Note that the result is
        only valid after calling Update().
        """
        ...
    
    def GetMaxRecords(self):
        """
        V.GetMaxRecords() -> int
        C++: virtual vtkIdType GetMaxRecords()
        
        Specifies the maximum number of records to read from the file. 
        Limiting the number of records to read is useful for previewing
        the contents of a file.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetOutputPedigreeIds(self):
        """
        V.GetOutputPedigreeIds() -> bool
        C++: virtual bool GetOutputPedigreeIds()
        
        If on, assigns pedigree ids to output. Defaults to off.
        """
        ...
    
    def GetPedigreeIdArrayName(self):
        """
        V.GetPedigreeIdArrayName() -> string
        C++: virtual char *GetPedigreeIdArrayName()
        
        The name of the array for generating or assigning pedigree ids
        (default "id").
        """
        ...
    
    def GetSkipColumnNames(self):
        """
        V.GetSkipColumnNames() -> int
        C++: virtual vtkIdType GetSkipColumnNames()
        
        Specifies the number of fields to skip while reading the column
        names. Default is 1.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkTecplotTableReader
        C++: vtkTecplotTableReader *NewInstance()
        """
        ...
    
    def OutputPedigreeIdsOff(self):
        """
        V.OutputPedigreeIdsOff()
        C++: virtual void OutputPedigreeIdsOff()
        
        If on, assigns pedigree ids to output. Defaults to off.
        """
        ...
    
    def OutputPedigreeIdsOn(self):
        """
        V.OutputPedigreeIdsOn()
        C++: virtual void OutputPedigreeIdsOn()
        
        If on, assigns pedigree ids to output. Defaults to off.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkTecplotTableReader
        C++: static vtkTecplotTableReader *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetColumnNamesOnLine(self, p_int):
        """
        V.SetColumnNamesOnLine(int)
        C++: virtual void SetColumnNamesOnLine(vtkIdType _arg)
        
        Specifies the line number that holds the column names. Default is
        1.
        """
        ...
    
    def SetFileName(self, string):
        """
        V.SetFileName(string)
        C++: virtual void SetFileName(const char *_arg)
        
        Specifies the delimited text file to be loaded.
        """
        ...
    
    def SetGeneratePedigreeIds(self, bool):
        """
        V.SetGeneratePedigreeIds(bool)
        C++: virtual void SetGeneratePedigreeIds(bool _arg)
        
        If on (default), generates pedigree ids automatically. If off,
        assign one of the arrays to be the pedigree id.
        """
        ...
    
    def SetHeaderLines(self, p_int):
        """
        V.SetHeaderLines(int)
        C++: virtual void SetHeaderLines(vtkIdType _arg)
        
        Specifies the number of lines that form the header of the file.
        Default is 2.
        """
        ...
    
    def SetMaxRecords(self, p_int):
        """
        V.SetMaxRecords(int)
        C++: virtual void SetMaxRecords(vtkIdType _arg)
        
        Specifies the maximum number of records to read from the file. 
        Limiting the number of records to read is useful for previewing
        the contents of a file.
        """
        ...
    
    def SetOutputPedigreeIds(self, bool):
        """
        V.SetOutputPedigreeIds(bool)
        C++: virtual void SetOutputPedigreeIds(bool _arg)
        
        If on, assigns pedigree ids to output. Defaults to off.
        """
        ...
    
    def SetPedigreeIdArrayName(self, string):
        """
        V.SetPedigreeIdArrayName(string)
        C++: virtual void SetPedigreeIdArrayName(const char *_arg)
        
        The name of the array for generating or assigning pedigree ids
        (default "id").
        """
        ...
    
    def SetSkipColumnNames(self, p_int):
        """
        V.SetSkipColumnNames(int)
        C++: virtual void SetSkipColumnNames(vtkIdType _arg)
        
        Specifies the number of fields to skip while reading the column
        names. Default is 1.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


__loader__ = ...
__spec__ = ...
