"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkCommonCore as __vtkmodules_vtkCommonCore

class vtkGraphEdge(__vtkmodules_vtkCommonCore.vtkObject):
    """
    vtkGraphEdge - Representation of a single graph edge.
    
    Superclass: vtkObject
    
    A heavy-weight (vtkObject subclass) graph edge object that may be
    used instead of the vtkEdgeType struct, for use with wrappers. The
    edge contains the source and target vertex ids, and the edge id.
    
    @sa
    vtkGraph
    """
    def GetId(self):
        """
        V.GetId() -> int
        C++: virtual vtkIdType GetId()
        
        The id of the edge.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetSource(self):
        """
        V.GetSource() -> int
        C++: virtual vtkIdType GetSource()
        
        The source of the edge.
        """
        ...
    
    def GetTarget(self):
        """
        V.GetTarget() -> int
        C++: virtual vtkIdType GetTarget()
        
        The target of the edge.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkGraphEdge
        C++: vtkGraphEdge *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkGraphEdge
        C++: static vtkGraphEdge *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetId(self, p_int):
        """
        V.SetId(int)
        C++: virtual void SetId(vtkIdType _arg)
        
        The id of the edge.
        """
        ...
    
    def SetSource(self, p_int):
        """
        V.SetSource(int)
        C++: virtual void SetSource(vtkIdType _arg)
        
        The source of the edge.
        """
        ...
    
    def SetTarget(self, p_int):
        """
        V.SetTarget(int)
        C++: virtual void SetTarget(vtkIdType _arg)
        
        The target of the edge.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


