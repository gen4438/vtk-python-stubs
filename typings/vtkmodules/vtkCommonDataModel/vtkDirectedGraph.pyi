"""
This type stub file was generated by pyright.
"""

from .vtkGraph import vtkGraph

class vtkDirectedGraph(vtkGraph):
    """
    vtkDirectedGraph - A directed graph.
    
    Superclass: vtkGraph
    
    vtkDirectedGraph is a collection of vertices along with a collection
    of directed edges (edges that have a source and target).
    ShallowCopy() and DeepCopy() (and CheckedShallowCopy(),
    CheckedDeepCopy()) accept instances of vtkTree and
    vtkMutableDirectedGraph.
    
    vtkDirectedGraph is read-only. To create an undirected graph, use an
    instance of vtkMutableDirectedGraph, then you may set the structure
    to a vtkDirectedGraph using ShallowCopy().
    
    @sa
    vtkGraph vtkMutableDirectedGraph
    """
    def GetData(self, vtkInformation):
        """
        V.GetData(vtkInformation) -> vtkDirectedGraph
        C++: static vtkDirectedGraph *GetData(vtkInformation *info)
        V.GetData(vtkInformationVector, int) -> vtkDirectedGraph
        C++: static vtkDirectedGraph *GetData(vtkInformationVector *v,
            int i=0)
        
        Retrieve a graph from an information vector.
        """
        ...
    
    def GetDataObjectType(self):
        """
        V.GetDataObjectType() -> int
        C++: int GetDataObjectType() override;
        
        Return what type of dataset this is.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsStructureValid(self, vtkGraph):
        """
        V.IsStructureValid(vtkGraph) -> bool
        C++: bool IsStructureValid(vtkGraph *g) override;
        
        Check the storage, and accept it if it is a valid undirected
        graph. This is public to allow the ToDirected/UndirectedGraph to
        work.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkDirectedGraph
        C++: vtkDirectedGraph *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkDirectedGraph
        C++: static vtkDirectedGraph *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


