"""
This type stub file was generated by pyright.
"""

from .vtkCompositeDataSet import vtkCompositeDataSet

class vtkUniformGridAMR(vtkCompositeDataSet):
    """
    vtkUniformGridAMR - no description provided.
    
    Superclass: vtkCompositeDataSet
    
    vtkUniformGridAMR is a concrete implementation of
    vtkCompositeDataSet. The dataset type is restricted to
    vtkUniformGrid.
    """
    def CopyStructure(self, vtkCompositeDataSet):
        """
        V.CopyStructure(vtkCompositeDataSet)
        C++: void CopyStructure(vtkCompositeDataSet *src) override;
        
        Override ShallowCopy/DeepCopy and CopyStructure
        """
        ...
    
    def DeepCopy(self, vtkDataObject):
        """
        V.DeepCopy(vtkDataObject)
        C++: void DeepCopy(vtkDataObject *src) override;
        
        Override ShallowCopy/DeepCopy and CopyStructure
        """
        ...
    
    def GetBounds(self, p_float=..., p_float=..., p_float=..., p_float=..., p_float=..., p_float=...):
        """
        V.GetBounds([float, float, float, float, float, float])
        C++: void GetBounds(double bounds[6])
        V.GetBounds() -> (float, ...)
        C++: const double *GetBounds()
        
        Retrieve the bounds of the AMR domain
        """
        ...
    
    def GetCompositeIndex(self, p_int, p_int_1):
        """
        V.GetCompositeIndex(int, int) -> int
        C++: int GetCompositeIndex(const unsigned int level,
            const unsigned int index)
        
        Retrieves the composite index associated with the data at the
        given (level,index) pair.
        """
        ...
    
    def GetData(self, vtkInformation):
        """
        V.GetData(vtkInformation) -> vtkUniformGridAMR
        C++: static vtkUniformGridAMR *GetData(vtkInformation *info)
        V.GetData(vtkInformationVector, int) -> vtkUniformGridAMR
        C++: static vtkUniformGridAMR *GetData(vtkInformationVector *v,
            int i=0)
        
        Retrieve an instance of this class from an information object.
        """
        ...
    
    def GetDataObjectType(self):
        """
        V.GetDataObjectType() -> int
        C++: int GetDataObjectType() override;
        
        Return class name of data type (see vtkType.h for definitions).
        """
        ...
    
    def GetDataSet(self, vtkCompositeDataIterator):
        """
        V.GetDataSet(vtkCompositeDataIterator) -> vtkDataObject
        C++: vtkDataObject *GetDataSet(vtkCompositeDataIterator *iter)
            override;
        V.GetDataSet(int, int) -> vtkUniformGrid
        C++: vtkUniformGrid *GetDataSet(unsigned int level,
            unsigned int idx)
        
        Return the data set pointed to by iter
        """
        ...
    
    def GetGridDescription(self):
        """
        V.GetGridDescription() -> int
        C++: int GetGridDescription()
        
        Set/Get the data description of this uniform grid instance, e.g.
        VTK_XYZ_GRID
        """
        ...
    
    def GetLevelAndIndex(self, p_int, p_int_1, p_int_2):
        """
        V.GetLevelAndIndex(int, int, int)
        C++: void GetLevelAndIndex(const unsigned int compositeIdx,
            unsigned int &level, unsigned int &idx)
        
        Givenes the composite Idx (as set by SetCompositeIdx) this method
        returns the corresponding level and dataset index within the
        level.
        """
        ...
    
    def GetMax(self, p_float=..., p_float=..., p_float=...):
        """
        V.GetMax([float, float, float])
        C++: void GetMax(double max[3])
        
        Retrieve the bounds of the AMR domain
        """
        ...
    
    def GetMin(self, p_float=..., p_float=..., p_float=...):
        """
        V.GetMin([float, float, float])
        C++: void GetMin(double min[3])
        
        Retrieve the bounds of the AMR domain
        """
        ...
    
    def GetNumberOfDataSets(self, p_int):
        """
        V.GetNumberOfDataSets(int) -> int
        C++: unsigned int GetNumberOfDataSets(const unsigned int level)
        
        Returns the number of datasets at the given level, including null
        blocks
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfLevels(self):
        """
        V.GetNumberOfLevels() -> int
        C++: unsigned int GetNumberOfLevels()
        
        Return the number of levels
        """
        ...
    
    def GetTotalNumberOfBlocks(self):
        """
        V.GetTotalNumberOfBlocks() -> int
        C++: virtual unsigned int GetTotalNumberOfBlocks()
        
        Return the total number of blocks, including nullptr blocks
        """
        ...
    
    def Initialize(self):
        """
        V.Initialize()
        C++: void Initialize() override;
        V.Initialize(int, (int, ...))
        C++: virtual void Initialize(int numLevels,
            const int *blocksPerLevel)
        
        Restore data object to initial
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkUniformGridAMR
        C++: vtkUniformGridAMR *NewInstance()
        """
        ...
    
    def NewIterator(self):
        """
        V.NewIterator() -> vtkCompositeDataIterator
        C++: vtkCompositeDataIterator *NewIterator() override;
        
        Return a new iterator (the iterator has to be deleted by the
        user).
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkUniformGridAMR
        C++: static vtkUniformGridAMR *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetDataSet(self, vtkCompositeDataIterator, vtkDataObject):
        """
        V.SetDataSet(vtkCompositeDataIterator, vtkDataObject)
        C++: void SetDataSet(vtkCompositeDataIterator *iter,
            vtkDataObject *dataObj) override;
        V.SetDataSet(int, int, vtkUniformGrid)
        C++: virtual void SetDataSet(unsigned int level, unsigned int idx,
             vtkUniformGrid *grid)
        
        Unhiding superclass method.
        """
        ...
    
    def SetGridDescription(self, p_int):
        """
        V.SetGridDescription(int)
        C++: void SetGridDescription(int gridDescription)
        
        Set/Get the data description of this uniform grid instance, e.g.
        VTK_XYZ_GRID
        """
        ...
    
    def ShallowCopy(self, vtkDataObject):
        """
        V.ShallowCopy(vtkDataObject)
        C++: void ShallowCopy(vtkDataObject *src) override;
        
        Override ShallowCopy/DeepCopy and CopyStructure
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


