"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkCommonExecutionModel as __vtkmodules_vtkCommonExecutionModel

class vtkVolumeOutlineSource(__vtkmodules_vtkCommonExecutionModel.vtkPolyDataAlgorithm):
    """
    vtkVolumeOutlineSource - outline of volume cropping region
    
    Superclass: vtkPolyDataAlgorithm
    
    vtkVolumeOutlineSource generates a wireframe outline that corresponds
    to the cropping region of a vtkVolumeMapper.  It requires a
    vtkVolumeMapper as input.  The GenerateFaces option turns on the
    solid faces of the outline, and the GenerateScalars option generates
    color scalars.  When GenerateScalars is on, it is possible to set an
    "ActivePlaneId" value in the range [0..6] to highlight one of the six
    cropping planes.@par Thanks: Thanks to David Gobbi for contributing
    this class to VTK.
    """
    def GenerateFacesOff(self):
        """
        V.GenerateFacesOff()
        C++: virtual void GenerateFacesOff()
        
        Set whether to generate polygonal faces for the output.  By
        default, only lines are generated.  The faces will form a closed,
        watertight surface.
        """
        ...
    
    def GenerateFacesOn(self):
        """
        V.GenerateFacesOn()
        C++: virtual void GenerateFacesOn()
        
        Set whether to generate polygonal faces for the output.  By
        default, only lines are generated.  The faces will form a closed,
        watertight surface.
        """
        ...
    
    def GenerateOutlineOff(self):
        """
        V.GenerateOutlineOff()
        C++: virtual void GenerateOutlineOff()
        
        Set whether to generate an outline wherever an input face was cut
        by a plane.  This is on by default.
        """
        ...
    
    def GenerateOutlineOn(self):
        """
        V.GenerateOutlineOn()
        C++: virtual void GenerateOutlineOn()
        
        Set whether to generate an outline wherever an input face was cut
        by a plane.  This is on by default.
        """
        ...
    
    def GenerateScalarsOff(self):
        """
        V.GenerateScalarsOff()
        C++: virtual void GenerateScalarsOff()
        
        Set whether to generate color scalars for the output.  By
        default, the output has no scalars and the color must be set in
        the property of the actor.
        """
        ...
    
    def GenerateScalarsOn(self):
        """
        V.GenerateScalarsOn()
        C++: virtual void GenerateScalarsOn()
        
        Set whether to generate color scalars for the output.  By
        default, the output has no scalars and the color must be set in
        the property of the actor.
        """
        ...
    
    def GetActivePlaneColor(self):
        """
        V.GetActivePlaneColor() -> (float, float, float)
        C++: virtual double *GetActivePlaneColor()
        
        Set the color of the active cropping plane.  This has no effect
        unless GenerateScalars is On and ActivePlaneId is non-negative. 
        The default color is yellow.
        """
        ...
    
    def GetActivePlaneId(self):
        """
        V.GetActivePlaneId() -> int
        C++: virtual int GetActivePlaneId()
        
        Set the active plane, e.g. to display which plane is currently
        being modified by an interaction.  Set this to -1 if there is no
        active plane. The default value is -1.
        """
        ...
    
    def GetColor(self):
        """
        V.GetColor() -> (float, float, float)
        C++: virtual double *GetColor()
        
        Set the color of the outline.  This has no effect unless
        GenerateScalars is On.  The default color is red.
        """
        ...
    
    def GetGenerateFaces(self):
        """
        V.GetGenerateFaces() -> int
        C++: virtual vtkTypeBool GetGenerateFaces()
        
        Set whether to generate polygonal faces for the output.  By
        default, only lines are generated.  The faces will form a closed,
        watertight surface.
        """
        ...
    
    def GetGenerateOutline(self):
        """
        V.GetGenerateOutline() -> int
        C++: virtual vtkTypeBool GetGenerateOutline()
        
        Set whether to generate an outline wherever an input face was cut
        by a plane.  This is on by default.
        """
        ...
    
    def GetGenerateScalars(self):
        """
        V.GetGenerateScalars() -> int
        C++: virtual vtkTypeBool GetGenerateScalars()
        
        Set whether to generate color scalars for the output.  By
        default, the output has no scalars and the color must be set in
        the property of the actor.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetVolumeMapper(self):
        """
        V.GetVolumeMapper() -> vtkVolumeMapper
        C++: vtkVolumeMapper *GetVolumeMapper()
        
        Set the mapper that has the cropping region that the outline will
        be generated for.  The mapper must have an input, because the
        bounds of the data must be computed in order to generate the
        outline.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkVolumeOutlineSource
        C++: vtkVolumeOutlineSource *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkVolumeOutlineSource
        C++: static vtkVolumeOutlineSource *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetActivePlaneColor(self, p_float, p_float_1, p_float_2):
        """
        V.SetActivePlaneColor(float, float, float)
        C++: virtual void SetActivePlaneColor(double _arg1, double _arg2,
            double _arg3)
        V.SetActivePlaneColor((float, float, float))
        C++: virtual void SetActivePlaneColor(const double _arg[3])
        
        Set the color of the active cropping plane.  This has no effect
        unless GenerateScalars is On and ActivePlaneId is non-negative. 
        The default color is yellow.
        """
        ...
    
    def SetActivePlaneId(self, p_int):
        """
        V.SetActivePlaneId(int)
        C++: virtual void SetActivePlaneId(int _arg)
        
        Set the active plane, e.g. to display which plane is currently
        being modified by an interaction.  Set this to -1 if there is no
        active plane. The default value is -1.
        """
        ...
    
    def SetColor(self, p_float, p_float_1, p_float_2):
        """
        V.SetColor(float, float, float)
        C++: virtual void SetColor(double _arg1, double _arg2,
            double _arg3)
        V.SetColor((float, float, float))
        C++: virtual void SetColor(const double _arg[3])
        
        Set the color of the outline.  This has no effect unless
        GenerateScalars is On.  The default color is red.
        """
        ...
    
    def SetGenerateFaces(self, p_int):
        """
        V.SetGenerateFaces(int)
        C++: virtual void SetGenerateFaces(vtkTypeBool _arg)
        
        Set whether to generate polygonal faces for the output.  By
        default, only lines are generated.  The faces will form a closed,
        watertight surface.
        """
        ...
    
    def SetGenerateOutline(self, p_int):
        """
        V.SetGenerateOutline(int)
        C++: virtual void SetGenerateOutline(vtkTypeBool _arg)
        
        Set whether to generate an outline wherever an input face was cut
        by a plane.  This is on by default.
        """
        ...
    
    def SetGenerateScalars(self, p_int):
        """
        V.SetGenerateScalars(int)
        C++: virtual void SetGenerateScalars(vtkTypeBool _arg)
        
        Set whether to generate color scalars for the output.  By
        default, the output has no scalars and the color must be set in
        the property of the actor.
        """
        ...
    
    def SetVolumeMapper(self, vtkVolumeMapper):
        """
        V.SetVolumeMapper(vtkVolumeMapper)
        C++: virtual void SetVolumeMapper(vtkVolumeMapper *mapper)
        
        Set the mapper that has the cropping region that the outline will
        be generated for.  The mapper must have an input, because the
        bounds of the data must be computed in order to generate the
        outline.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


