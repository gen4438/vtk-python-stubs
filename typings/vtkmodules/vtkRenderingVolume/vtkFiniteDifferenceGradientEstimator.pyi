"""
This type stub file was generated by pyright.
"""

from .vtkEncodedGradientEstimator import vtkEncodedGradientEstimator

class vtkFiniteDifferenceGradientEstimator(vtkEncodedGradientEstimator):
    """
    vtkFiniteDifferenceGradientEstimator - Use finite differences to
    estimate gradient.
    
    Superclass: vtkEncodedGradientEstimator
    
    vtkFiniteDifferenceGradientEstimator is a concrete subclass of
     vtkEncodedGradientEstimator that uses a central differences
    technique to
     estimate the gradient. The gradient at some sample location (x,y,z)
     would be estimated by:
    
    
          nx = (f(x-dx,y,z) - f(x+dx,y,z)) / 2*dx;
          ny = (f(x,y-dy,z) - f(x,y+dy,z)) / 2*dy;
          nz = (f(x,y,z-dz) - f(x,y,z+dz)) / 2*dz;
    
    
     This value is normalized to determine a unit direction vector and a
     magnitude. The normal is computed in voxel space, and
     dx = dy = dz = SampleSpacingInVoxels. A scaling factor is applied to
     convert this normal from voxel space to world coordinates.
    
    @sa
    vtkEncodedGradientEstimator
    """
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetSampleSpacingInVoxels(self):
        """
        V.GetSampleSpacingInVoxels() -> int
        C++: virtual int GetSampleSpacingInVoxels()
        
        Set/Get the spacing between samples for the finite differences
        method used to compute the normal. This spacing is in voxel
        units.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkFiniteDifferenceGradientEstimator
        C++: vtkFiniteDifferenceGradientEstimator *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase)
            -> vtkFiniteDifferenceGradientEstimator
        C++: static vtkFiniteDifferenceGradientEstimator *SafeDownCast(
            vtkObjectBase *o)
        """
        ...
    
    def SetSampleSpacingInVoxels(self, p_int):
        """
        V.SetSampleSpacingInVoxels(int)
        C++: virtual void SetSampleSpacingInVoxels(int _arg)
        
        Set/Get the spacing between samples for the finite differences
        method used to compute the normal. This spacing is in voxel
        units.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


