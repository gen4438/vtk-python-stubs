"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkRenderingCore as __vtkmodules_vtkRenderingCore

class vtkUnstructuredGridVolumeMapper(__vtkmodules_vtkRenderingCore.vtkAbstractVolumeMapper):
    """
    vtkUnstructuredGridVolumeMapper - Abstract class for an unstructured
    grid volume mapper
    
    Superclass: vtkAbstractVolumeMapper
    
    vtkUnstructuredGridVolumeMapper is the abstract definition of a
    volume mapper for unstructured data (vtkUnstructuredGrid). Several
    basic types of volume mappers are supported as subclasses.
    
    @sa
    vtkUnstructuredGridVolumeRayCastMapper
    """
    def GetBlendMode(self):
        """
        V.GetBlendMode() -> int
        C++: virtual int GetBlendMode()
        """
        ...
    
    def GetInput(self):
        """
        V.GetInput() -> vtkUnstructuredGridBase
        C++: vtkUnstructuredGridBase *GetInput()
        
        Set/Get the input data
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkUnstructuredGridVolumeMapper
        C++: vtkUnstructuredGridVolumeMapper *NewInstance()
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: void ReleaseGraphicsResources(vtkWindow *) override;
        
        WARNING: INTERNAL METHOD - NOT INTENDED FOR GENERAL USE Release
        any graphics resources that are being consumed by this mapper.
        The parameter window could be used to determine which graphic
        resources to release.
        """
        ...
    
    def Render(self, vtkRenderer, vtkVolume):
        """
        V.Render(vtkRenderer, vtkVolume)
        C++: void Render(vtkRenderer *ren, vtkVolume *vol) override = 0;
        
        WARNING: INTERNAL METHOD - NOT INTENDED FOR GENERAL USE DO NOT
        USE THIS METHOD OUTSIDE OF THE RENDERING PROCESS Render the
        volume
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkUnstructuredGridVolumeMapper
        C++: static vtkUnstructuredGridVolumeMapper *SafeDownCast(
            vtkObjectBase *o)
        """
        ...
    
    def SetBlendMode(self, p_int):
        """
        V.SetBlendMode(int)
        C++: virtual void SetBlendMode(int _arg)
        """
        ...
    
    def SetBlendModeToComposite(self):
        """
        V.SetBlendModeToComposite()
        C++: void SetBlendModeToComposite()
        """
        ...
    
    def SetBlendModeToMaximumIntensity(self):
        """
        V.SetBlendModeToMaximumIntensity()
        C++: void SetBlendModeToMaximumIntensity()
        """
        ...
    
    def SetInputData(self, vtkUnstructuredGridBase):
        """
        V.SetInputData(vtkUnstructuredGridBase)
        C++: virtual void SetInputData(vtkUnstructuredGridBase *)
        V.SetInputData(vtkDataSet)
        C++: virtual void SetInputData(vtkDataSet *)
        
        Set/Get the input data
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    COMPOSITE_BLEND = ...
    MAXIMUM_INTENSITY_BLEND = ...
    __dict__ = ...
    __vtkname__ = ...


