"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkCommonCore as __vtkmodules_vtkCommonCore

class vtkRayCastImageDisplayHelper(__vtkmodules_vtkCommonCore.vtkObject):
    """
    vtkRayCastImageDisplayHelper - helper class that draws the image to
    the screen
    
    Superclass: vtkObject
    
    This is a helper class for drawing images created from ray casting on
    the screen. This is the abstract device-independent superclass.
    
    @sa
    vtkUnstructuredGridVolumeRayCastMapper
    vtkOpenGLRayCastImageDisplayHelper
    """
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetPixelScale(self):
        """
        V.GetPixelScale() -> float
        C++: virtual float GetPixelScale()
        
        Set / Get the pixel scale to be applied to the image before
        display. Can be set to scale the incoming pixel values - for
        example the fixed point mapper uses the unsigned short API but
        with 15 bit values so needs a scale of 2.0.
        """
        ...
    
    def GetPreMultipliedColors(self):
        """
        V.GetPreMultipliedColors() -> int
        C++: virtual vtkTypeBool GetPreMultipliedColors()
        """
        ...
    
    def GetPreMultipliedColorsMaxValue(self):
        """
        V.GetPreMultipliedColorsMaxValue() -> int
        C++: virtual vtkTypeBool GetPreMultipliedColorsMaxValue()
        """
        ...
    
    def GetPreMultipliedColorsMinValue(self):
        """
        V.GetPreMultipliedColorsMinValue() -> int
        C++: virtual vtkTypeBool GetPreMultipliedColorsMinValue()
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkRayCastImageDisplayHelper
        C++: vtkRayCastImageDisplayHelper *NewInstance()
        """
        ...
    
    def PreMultipliedColorsOff(self):
        """
        V.PreMultipliedColorsOff()
        C++: virtual void PreMultipliedColorsOff()
        """
        ...
    
    def PreMultipliedColorsOn(self):
        """
        V.PreMultipliedColorsOn()
        C++: virtual void PreMultipliedColorsOn()
        """
        ...
    
    def ReleaseGraphicsResources(self, vtkWindow):
        """
        V.ReleaseGraphicsResources(vtkWindow)
        C++: virtual void ReleaseGraphicsResources(vtkWindow *)
        
        Derived class should implement this if needed
        """
        ...
    
    def RenderTexture(self, vtkVolume, vtkRenderer, p_int=..., p_int=..., *args, **kwargs):
        """
        V.RenderTexture(vtkVolume, vtkRenderer, [int, int], [int, int],
            [int, int], [int, int], float, [int, ...])
        C++: virtual void RenderTexture(vtkVolume *vol, vtkRenderer *ren,
            int imageMemorySize[2], int imageViewportSize[2],
            int imageInUseSize[2], int imageOrigin[2],
            float requestedDepth, unsigned char *image)
        V.RenderTexture(vtkVolume, vtkRenderer, [int, int], [int, int],
            [int, int], [int, int], float, [int, ...])
        C++: virtual void RenderTexture(vtkVolume *vol, vtkRenderer *ren,
            int imageMemorySize[2], int imageViewportSize[2],
            int imageInUseSize[2], int imageOrigin[2],
            float requestedDepth, unsigned short *image)
        V.RenderTexture(vtkVolume, vtkRenderer, vtkFixedPointRayCastImage,
             float)
        C++: virtual void RenderTexture(vtkVolume *vol, vtkRenderer *ren,
            vtkFixedPointRayCastImage *image, float requestedDepth)
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkRayCastImageDisplayHelper
        C++: static vtkRayCastImageDisplayHelper *SafeDownCast(
            vtkObjectBase *o)
        """
        ...
    
    def SetPixelScale(self, p_float):
        """
        V.SetPixelScale(float)
        C++: virtual void SetPixelScale(float _arg)
        
        Set / Get the pixel scale to be applied to the image before
        display. Can be set to scale the incoming pixel values - for
        example the fixed point mapper uses the unsigned short API but
        with 15 bit values so needs a scale of 2.0.
        """
        ...
    
    def SetPreMultipliedColors(self, p_int):
        """
        V.SetPreMultipliedColors(int)
        C++: virtual void SetPreMultipliedColors(vtkTypeBool _arg)
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


