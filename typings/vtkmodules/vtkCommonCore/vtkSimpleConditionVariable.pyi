"""
This type stub file was generated by pyright.
"""

from .object import object

class vtkSimpleConditionVariable(object):
    """
    vtkSimpleConditionVariable - no description provided.
    
    vtkSimpleConditionVariable()
    """
    def Broadcast(self):
        """
        V.Broadcast()
        C++: void Broadcast()
        
        Wake all threads waiting for the condition to change.
        """
        ...
    
    def Signal(self):
        """
        V.Signal()
        C++: void Signal()
        
        Wake one thread waiting for the condition to change.
        """
        ...
    
    def Wait(self, vtkSimpleMutexLock):
        """
        V.Wait(vtkSimpleMutexLock) -> int
        C++: int Wait(vtkSimpleMutexLock &mutex)
        
        Wait for the condition to change. Upon entry, the mutex must be
        locked and the lock held by the calling thread. Upon exit, the
        mutex will be locked and held by the calling thread. Between
        entry and exit, the mutex will be unlocked and may be held by
        other threads.
        
        * @param mutex The mutex that should be locked on entry and will
          be locked on exit (but not in between)
        * @retval Normally, this function returns 0. Should a thread be
          interrupted by a signal, a non-zero value may be returned.
        """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __hash__(self, *args, **kwargs) -> int:
        """ Return hash(self). """
        ...
    
    def __init__(self) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    


