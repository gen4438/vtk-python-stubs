"""
This type stub file was generated by pyright.
"""

from .object import object

class vtkBreakPoint(object):
    """
    vtkBreakPoint - Utility function to debug with gdb and MPI.
    
    Wherever you need to set a break point inside a piece of code run by
    MPI,
    
    Step 1: call vtkBreakPoint::Break() in the code. Step 2: start MPI,
    each process will display its PID and sleep. Step 3: start gdb with
    the PID: gdb --pid=
    
    Step 4: set a breakpoint at the line of interest: (gdb) b  Step 5: go
    out of the sleep: (gdb) set var i=1 Original instructions at the
    OpenMPI FAQ:
    http://www.open-mpi.de/faq/?category=debugging#serial-debuggers
    - 6 Can I use serial debuggers (such as gdb) to debug MPI
      applications?
    - 6.1. Attach to individual MPI processes after they are running.
    
    @par Implementation: This function is in Common, not in Parallel
    because it does not depend on MPI and you may want to call
    vtkBreakPoint::Break() in any class of VTK.
    
    vtkBreakPoint()
    vtkBreakPoint(const &vtkBreakPoint)
    """
    def Break(self):
        """
        V.Break()
        C++: static void Break()
        
        Process fall asleep until local variable `i' is set to a value
        different from 0 inside a debugger.
        """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __hash__(self, *args, **kwargs) -> int:
        """ Return hash(self). """
        ...
    
    def __init__(self) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    


