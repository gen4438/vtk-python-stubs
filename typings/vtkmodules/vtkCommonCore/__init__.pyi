"""
This type stub file was generated by pyright.
"""

from .reference import reference
from .mutable import mutable
from .vtkObjectBase import vtkObjectBase
from .vtkObject import vtkObject
from .vtkAbstractArray import vtkAbstractArray
from .vtkAnimationCue import vtkAnimationCue
from .vtkArchiver import vtkArchiver
from .vtkArray import vtkArray
from .vtkArrayCoordinates import vtkArrayCoordinates
from .vtkArrayExtents import vtkArrayExtents
from .vtkArrayExtentsList import vtkArrayExtentsList
from .vtkArrayIterator import vtkArrayIterator
from .vtkArrayIteratorTemplate_I10vtkVariantE import vtkArrayIteratorTemplate_I10vtkVariantE
from .vtkArrayIteratorTemplate_I12vtkStdStringE import vtkArrayIteratorTemplate_I12vtkStdStringE
from .vtkArrayIteratorTemplate_I16vtkUnicodeStringE import vtkArrayIteratorTemplate_I16vtkUnicodeStringE
from .vtkArrayIteratorTemplate_IaE import vtkArrayIteratorTemplate_IaE
from .vtkArrayIteratorTemplate_IcE import vtkArrayIteratorTemplate_IcE
from .vtkArrayIteratorTemplate_IdE import vtkArrayIteratorTemplate_IdE
from .vtkArrayIteratorTemplate_IfE import vtkArrayIteratorTemplate_IfE
from .vtkArrayIteratorTemplate_IhE import vtkArrayIteratorTemplate_IhE
from .vtkArrayIteratorTemplate_IiE import vtkArrayIteratorTemplate_IiE
from .vtkArrayIteratorTemplate_IjE import vtkArrayIteratorTemplate_IjE
from .vtkArrayIteratorTemplate_IlE import vtkArrayIteratorTemplate_IlE
from .vtkArrayIteratorTemplate_ImE import vtkArrayIteratorTemplate_ImE
from .vtkArrayIteratorTemplate_IsE import vtkArrayIteratorTemplate_IsE
from .vtkArrayIteratorTemplate_ItE import vtkArrayIteratorTemplate_ItE
from .vtkArrayIteratorTemplate_IxE import vtkArrayIteratorTemplate_IxE
from .vtkArrayIteratorTemplate_IyE import vtkArrayIteratorTemplate_IyE
from .vtkArrayRange import vtkArrayRange
from .vtkArraySort import vtkArraySort
from .vtkArrayWeights import vtkArrayWeights
from .vtkDataArray import vtkDataArray
from .vtkBitArray import vtkBitArray
from .vtkBitArrayIterator import vtkBitArrayIterator
from .vtkRandomSequence import vtkRandomSequence
from .vtkGaussianRandomSequence import vtkGaussianRandomSequence
from .vtkBoxMuellerRandomSequence import vtkBoxMuellerRandomSequence
from .vtkBreakPoint import vtkBreakPoint
from .vtkByteSwap import vtkByteSwap
from .vtkCommand import vtkCommand
from .vtkCallbackCommand import vtkCallbackCommand
from .vtkCharArray import vtkCharArray
from .vtkCollection import vtkCollection
from .vtkCollectionElement import vtkCollectionElement
from .vtkCollectionIterator import vtkCollectionIterator
from .vtkCommonInformationKeyManager import vtkCommonInformationKeyManager
from .vtkConditionVariable import vtkConditionVariable
from .vtkCriticalSection import vtkCriticalSection
from .vtkDataArrayCollection import vtkDataArrayCollection
from .vtkDataArrayCollectionIterator import vtkDataArrayCollectionIterator
from .vtkDataArraySelection import vtkDataArraySelection
from .vtkDebugLeaks import vtkDebugLeaks
from .vtkDebugLeaksManager import vtkDebugLeaksManager
from .vtkDebugLeaksObserver import vtkDebugLeaksObserver
from .vtkTypedArray_I10vtkVariantE import vtkTypedArray_I10vtkVariantE
from .vtkDenseArray_I10vtkVariantE import vtkDenseArray_I10vtkVariantE
from .vtkTypedArray_I12vtkStdStringE import vtkTypedArray_I12vtkStdStringE
from .vtkDenseArray_I12vtkStdStringE import vtkDenseArray_I12vtkStdStringE
from .vtkTypedArray_I16vtkUnicodeStringE import vtkTypedArray_I16vtkUnicodeStringE
from .vtkDenseArray_I16vtkUnicodeStringE import vtkDenseArray_I16vtkUnicodeStringE
from .vtkTypedArray_IaE import vtkTypedArray_IaE
from .vtkDenseArray_IaE import vtkDenseArray_IaE
from .vtkTypedArray_IcE import vtkTypedArray_IcE
from .vtkDenseArray_IcE import vtkDenseArray_IcE
from .vtkTypedArray_IdE import vtkTypedArray_IdE
from .vtkDenseArray_IdE import vtkDenseArray_IdE
from .vtkTypedArray_IfE import vtkTypedArray_IfE
from .vtkDenseArray_IfE import vtkDenseArray_IfE
from .vtkTypedArray_IhE import vtkTypedArray_IhE
from .vtkDenseArray_IhE import vtkDenseArray_IhE
from .vtkTypedArray_IiE import vtkTypedArray_IiE
from .vtkDenseArray_IiE import vtkDenseArray_IiE
from .vtkTypedArray_IjE import vtkTypedArray_IjE
from .vtkDenseArray_IjE import vtkDenseArray_IjE
from .vtkTypedArray_IlE import vtkTypedArray_IlE
from .vtkDenseArray_IlE import vtkDenseArray_IlE
from .vtkTypedArray_ImE import vtkTypedArray_ImE
from .vtkDenseArray_ImE import vtkDenseArray_ImE
from .vtkTypedArray_IsE import vtkTypedArray_IsE
from .vtkDenseArray_IsE import vtkDenseArray_IsE
from .vtkTypedArray_ItE import vtkTypedArray_ItE
from .vtkDenseArray_ItE import vtkDenseArray_ItE
from .vtkTypedArray_IxE import vtkTypedArray_IxE
from .vtkDenseArray_IxE import vtkDenseArray_IxE
from .vtkTypedArray_IyE import vtkTypedArray_IyE
from .vtkDenseArray_IyE import vtkDenseArray_IyE
from .vtkDoubleArray import vtkDoubleArray
from .vtkDynamicLoader import vtkDynamicLoader
from .vtkEventData import vtkEventData
from .vtkEventDataAction import vtkEventDataAction
from .vtkEventDataForDevice import vtkEventDataForDevice
from .vtkEventDataDevice3D import vtkEventDataDevice3D
from .vtkEventDataButton3D import vtkEventDataButton3D
from .vtkEventDataDevice import vtkEventDataDevice
from .vtkEventDataDeviceInput import vtkEventDataDeviceInput
from .vtkEventDataMove3D import vtkEventDataMove3D
from .vtkEventForwarderCommand import vtkEventForwarderCommand
from .vtkOutputWindow import vtkOutputWindow
from .vtkFileOutputWindow import vtkFileOutputWindow
from .vtkFloatArray import vtkFloatArray
from .vtkFloatingPointExceptions import vtkFloatingPointExceptions
from .vtkGarbageCollector import vtkGarbageCollector
from .vtkGarbageCollectorManager import vtkGarbageCollectorManager
from .vtkIdList import vtkIdList
from .vtkIdListCollection import vtkIdListCollection
from .vtkIdTypeArray import vtkIdTypeArray
from .vtkIndent import vtkIndent
from .vtkInformation import vtkInformation
from .vtkInformationKey import vtkInformationKey
from .vtkInformationDataObjectKey import vtkInformationDataObjectKey
from .vtkInformationDoubleKey import vtkInformationDoubleKey
from .vtkInformationDoubleVectorKey import vtkInformationDoubleVectorKey
from .vtkInformationIdTypeKey import vtkInformationIdTypeKey
from .vtkInformationInformationKey import vtkInformationInformationKey
from .vtkInformationInformationVectorKey import vtkInformationInformationVectorKey
from .vtkInformationIntegerKey import vtkInformationIntegerKey
from .vtkInformationIntegerPointerKey import vtkInformationIntegerPointerKey
from .vtkInformationIntegerVectorKey import vtkInformationIntegerVectorKey
from .vtkInformationInternals import vtkInformationInternals
from .vtkInformationIterator import vtkInformationIterator
from .vtkInformationKeyLookup import vtkInformationKeyLookup
from .vtkInformationKeyVectorKey import vtkInformationKeyVectorKey
from .vtkInformationObjectBaseKey import vtkInformationObjectBaseKey
from .vtkInformationObjectBaseVectorKey import vtkInformationObjectBaseVectorKey
from .vtkInformationRequestKey import vtkInformationRequestKey
from .vtkInformationStringKey import vtkInformationStringKey
from .vtkInformationStringVectorKey import vtkInformationStringVectorKey
from .vtkInformationUnsignedLongKey import vtkInformationUnsignedLongKey
from .vtkInformationVariantKey import vtkInformationVariantKey
from .vtkInformationVariantVectorKey import vtkInformationVariantVectorKey
from .vtkInformationVector import vtkInformationVector
from .vtkIntArray import vtkIntArray
from .vtkLogger import vtkLogger
from .vtkLongArray import vtkLongArray
from .vtkLongLongArray import vtkLongLongArray
from .vtkScalarsToColors import vtkScalarsToColors
from .vtkLookupTable import vtkLookupTable
from .vtkMath import vtkMath
from .vtkMersenneTwister import vtkMersenneTwister
from .vtkMinimalStandardRandomSequence import vtkMinimalStandardRandomSequence
from .vtkMultiThreader import vtkMultiThreader
from .vtkMutexLock import vtkMutexLock
from .vtkObjectFactory import vtkObjectFactory
from .vtkObjectFactoryCollection import vtkObjectFactoryCollection
from .vtkObjectFactoryRegistryCleanup import vtkObjectFactoryRegistryCleanup
from .vtkOldStyleCallbackCommand import vtkOldStyleCallbackCommand
from .vtkOStrStreamWrapper import vtkOStrStreamWrapper
from .vtkOutputWindowCleanup import vtkOutputWindowCleanup
from .vtkOverrideInformation import vtkOverrideInformation
from .vtkOverrideInformationCollection import vtkOverrideInformationCollection
from .vtkPoints import vtkPoints
from .vtkPoints2D import vtkPoints2D
from .vtkPriorityQueue import vtkPriorityQueue
from .vtkRandomPool import vtkRandomPool
from .vtkReferenceCount import vtkReferenceCount
from .vtkShortArray import vtkShortArray
from .vtkSignedCharArray import vtkSignedCharArray
from .vtkSimpleConditionVariable import vtkSimpleConditionVariable
from .vtkSimpleCriticalSection import vtkSimpleCriticalSection
from .vtkSimpleMutexLock import vtkSimpleMutexLock
from .vtkSmartPointerBase import vtkSmartPointerBase
from .vtkSMPTools import vtkSMPTools
from .vtkSOADataArrayTemplate_IaE import vtkSOADataArrayTemplate_IaE
from .vtkSOADataArrayTemplate_IcE import vtkSOADataArrayTemplate_IcE
from .vtkSOADataArrayTemplate_IdE import vtkSOADataArrayTemplate_IdE
from .vtkSOADataArrayTemplate_IfE import vtkSOADataArrayTemplate_IfE
from .vtkSOADataArrayTemplate_IhE import vtkSOADataArrayTemplate_IhE
from .vtkSOADataArrayTemplate_IiE import vtkSOADataArrayTemplate_IiE
from .vtkSOADataArrayTemplate_IjE import vtkSOADataArrayTemplate_IjE
from .vtkSOADataArrayTemplate_IlE import vtkSOADataArrayTemplate_IlE
from .vtkSOADataArrayTemplate_ImE import vtkSOADataArrayTemplate_ImE
from .vtkSOADataArrayTemplate_IsE import vtkSOADataArrayTemplate_IsE
from .vtkSOADataArrayTemplate_ItE import vtkSOADataArrayTemplate_ItE
from .vtkSOADataArrayTemplate_IxE import vtkSOADataArrayTemplate_IxE
from .vtkSOADataArrayTemplate_IyE import vtkSOADataArrayTemplate_IyE
from .vtkSortDataArray import vtkSortDataArray
from .vtkSparseArray_I10vtkVariantE import vtkSparseArray_I10vtkVariantE
from .vtkSparseArray_I12vtkStdStringE import vtkSparseArray_I12vtkStdStringE
from .vtkSparseArray_I16vtkUnicodeStringE import vtkSparseArray_I16vtkUnicodeStringE
from .vtkSparseArray_IaE import vtkSparseArray_IaE
from .vtkSparseArray_IcE import vtkSparseArray_IcE
from .vtkSparseArray_IdE import vtkSparseArray_IdE
from .vtkSparseArray_IfE import vtkSparseArray_IfE
from .vtkSparseArray_IhE import vtkSparseArray_IhE
from .vtkSparseArray_IiE import vtkSparseArray_IiE
from .vtkSparseArray_IjE import vtkSparseArray_IjE
from .vtkSparseArray_IlE import vtkSparseArray_IlE
from .vtkSparseArray_ImE import vtkSparseArray_ImE
from .vtkSparseArray_IsE import vtkSparseArray_IsE
from .vtkSparseArray_ItE import vtkSparseArray_ItE
from .vtkSparseArray_IxE import vtkSparseArray_IxE
from .vtkSparseArray_IyE import vtkSparseArray_IyE
from .vtkStdString import vtkStdString
from .vtkStringArray import vtkStringArray
from .vtkStringOutputWindow import vtkStringOutputWindow
from .vtkTimePointUtility import vtkTimePointUtility
from .vtkTimeStamp import vtkTimeStamp
from .vtkTypeFloat32Array import vtkTypeFloat32Array
from .vtkTypeFloat64Array import vtkTypeFloat64Array
from .vtkTypeInt16Array import vtkTypeInt16Array
from .vtkTypeInt32Array import vtkTypeInt32Array
from .vtkTypeInt64Array import vtkTypeInt64Array
from .vtkTypeInt8Array import vtkTypeInt8Array
from .vtkUnsignedShortArray import vtkUnsignedShortArray
from .vtkTypeUInt16Array import vtkTypeUInt16Array
from .vtkUnsignedIntArray import vtkUnsignedIntArray
from .vtkTypeUInt32Array import vtkTypeUInt32Array
from .vtkUnsignedLongLongArray import vtkUnsignedLongLongArray
from .vtkTypeUInt64Array import vtkTypeUInt64Array
from .vtkUnsignedCharArray import vtkUnsignedCharArray
from .vtkTypeUInt8Array import vtkTypeUInt8Array
from .vtkUnicodeString import vtkUnicodeString
from .vtkUnicodeStringArray import vtkUnicodeStringArray
from .vtkUnsignedLongArray import vtkUnsignedLongArray
from .vtkVariant import vtkVariant
from .vtkVariantArray import vtkVariantArray
from .vtkVariantEqual import vtkVariantEqual
from .vtkVariantLessThan import vtkVariantLessThan
from .vtkVariantStrictEquality import vtkVariantStrictEquality
from .vtkVariantStrictWeakOrder import vtkVariantStrictWeakOrder
from .vtkVersion import vtkVersion
from .vtkVoidArray import vtkVoidArray
from .vtkWeakPointerBase import vtkWeakPointerBase
from .vtkWeakReference import vtkWeakReference
from .vtkWindow import vtkWindow
from .vtkXMLFileOutputWindow import vtkXMLFileOutputWindow

vtkEventDataNumberOfDevices = ...
vtkEventDataNumberOfInputs = ...
VTK_ARIAL = ...
VTK_ARRAY_DATA = ...
VTK_BIT = ...
VTK_BIT_MAX = ...
VTK_BIT_MIN = ...
VTK_BUILD_VERSION = ...
VTK_CHAR = ...
VTK_CHAR_MAX = ...
VTK_CHAR_MIN = ...
VTK_COLOR_MODE_DEFAULT = ...
VTK_COLOR_MODE_DIRECT_SCALARS = ...
VTK_COLOR_MODE_MAP_SCALARS = ...
VTK_COMPILER_GCC_VERSION = ...
VTK_COMPOSITE_DATA_SET = ...
VTK_COURIER = ...
VTK_CUBIC_INTERPOLATION = ...
VTK_CXX_COMPILER = ...
VTK_DATA_OBJECT = ...
VTK_DATA_SET = ...
VTK_DBL_EPSILON = ...
VTK_DBL_MIN = ...
VTK_DIRECTED_ACYCLIC_GRAPH = ...
VTK_DIRECTED_GRAPH = ...
VTK_DOUBLE = ...
VTK_DOUBLE_MAX = ...
VTK_DOUBLE_MIN = ...
VTK_ENCODING_ISO_8859_1 = ...
VTK_ENCODING_ISO_8859_10 = ...
VTK_ENCODING_ISO_8859_11 = ...
VTK_ENCODING_ISO_8859_12 = ...
VTK_ENCODING_ISO_8859_13 = ...
VTK_ENCODING_ISO_8859_14 = ...
VTK_ENCODING_ISO_8859_15 = ...
VTK_ENCODING_ISO_8859_16 = ...
VTK_ENCODING_ISO_8859_2 = ...
VTK_ENCODING_ISO_8859_3 = ...
VTK_ENCODING_ISO_8859_4 = ...
VTK_ENCODING_ISO_8859_5 = ...
VTK_ENCODING_ISO_8859_6 = ...
VTK_ENCODING_ISO_8859_7 = ...
VTK_ENCODING_ISO_8859_8 = ...
VTK_ENCODING_ISO_8859_9 = ...
VTK_ENCODING_NONE = ...
VTK_ENCODING_UNICODE = ...
VTK_ENCODING_UNKNOWN = ...
VTK_ENCODING_US_ASCII = ...
VTK_ENCODING_UTF_8 = ...
VTK_ERROR = ...
VTK_EXPLICIT_STRUCTURED_GRID = ...
VTK_FLOAT = ...
VTK_FLOAT_MAX = ...
VTK_FLOAT_MIN = ...
VTK_FONT_FILE = ...
VTK_GENERIC_DATA_SET = ...
VTK_GRAPH = ...
VTK_HIERARCHICAL_BOX_DATA_SET = ...
VTK_HIERARCHICAL_DATA_SET = ...
VTK_HYPER_OCTREE = ...
VTK_HYPER_TREE_GRID = ...
VTK_ID_MAX = ...
VTK_ID_MIN = ...
VTK_ID_TYPE = ...
VTK_ID_TYPE_IMPL = ...
VTK_ID_TYPE_PRId = ...
VTK_IMAGE_DATA = ...
VTK_IMAGE_SLAB_MAX = ...
VTK_IMAGE_SLAB_MEAN = ...
VTK_IMAGE_SLAB_MIN = ...
VTK_IMAGE_SLAB_SUM = ...
VTK_INT = ...
VTK_INT_MAX = ...
VTK_INT_MIN = ...
VTK_LINEAR_INTERPOLATION = ...
VTK_LONG = ...
VTK_LONG_LONG = ...
VTK_LONG_LONG_MAX = ...
VTK_LONG_LONG_MIN = ...
VTK_LONG_MAX = ...
VTK_LONG_MIN = ...
VTK_LUMINANCE = ...
VTK_LUMINANCE_ALPHA = ...
VTK_MAJOR_VERSION = ...
VTK_MAXPATH = ...
VTK_MAX_THREADS = ...
VTK_MAX_VRCOMP = ...
VTK_MINOR_VERSION = ...
VTK_MOLECULE = ...
VTK_MTIME_MAX = ...
VTK_MTIME_MIN = ...
VTK_MTIME_TYPE_IMPL = ...
VTK_MULTIBLOCK_DATA_SET = ...
VTK_MULTIGROUP_DATA_SET = ...
VTK_MULTIPIECE_DATA_SET = ...
VTK_NEAREST_INTERPOLATION = ...
VTK_NON_OVERLAPPING_AMR = ...
VTK_OBJECT = ...
VTK_OK = ...
VTK_OPAQUE = ...
VTK_OVERLAPPING_AMR = ...
VTK_PARTITIONED_DATA_SET = ...
VTK_PARTITIONED_DATA_SET_COLLECTION = ...
VTK_PATH = ...
VTK_PIECEWISE_FUNCTION = ...
VTK_PISTON_DATA_OBJECT = ...
VTK_POINT_SET = ...
VTK_POLY_DATA = ...
VTK_RAMP_LINEAR = ...
VTK_RAMP_SCURVE = ...
VTK_RAMP_SQRT = ...
VTK_RECTILINEAR_GRID = ...
VTK_REEB_GRAPH = ...
VTK_RGB = ...
VTK_RGBA = ...
VTK_SCALE_LINEAR = ...
VTK_SCALE_LOG10 = ...
VTK_SELECTION = ...
VTK_SHORT = ...
VTK_SHORT_MAX = ...
VTK_SHORT_MIN = ...
VTK_SIGNED_CHAR = ...
VTK_SIGNED_CHAR_MAX = ...
VTK_SIGNED_CHAR_MIN = ...
VTK_SIZEOF_CHAR = ...
VTK_SIZEOF_DOUBLE = ...
VTK_SIZEOF_FLOAT = ...
VTK_SIZEOF_ID_TYPE = ...
VTK_SIZEOF_INT = ...
VTK_SIZEOF_LONG = ...
VTK_SIZEOF_LONG_LONG = ...
VTK_SIZEOF_SHORT = ...
VTK_SIZEOF_VOID_P = ...
VTK_SMP_BACKEND = ...
VTK_SOURCE_VERSION = ...
VTK_STRING = ...
VTK_STRUCTURED_GRID = ...
VTK_STRUCTURED_POINTS = ...
VTK_TABLE = ...
VTK_TEMPORAL_DATA_SET = ...
VTK_TEXT_BOTTOM = ...
VTK_TEXT_CENTERED = ...
VTK_TEXT_GLOBAL_ANTIALIASING_ALL = ...
VTK_TEXT_GLOBAL_ANTIALIASING_NONE = ...
VTK_TEXT_GLOBAL_ANTIALIASING_SOME = ...
VTK_TEXT_LEFT = ...
VTK_TEXT_RIGHT = ...
VTK_TEXT_TOP = ...
VTK_THREAD_RETURN_VALUE = ...
VTK_TIMES = ...
VTK_TREE = ...
VTK_TYPE_CHAR_IS_SIGNED = ...
VTK_TYPE_FLOAT32 = ...
VTK_TYPE_FLOAT64 = ...
VTK_TYPE_INT16 = ...
VTK_TYPE_INT16_MAX = ...
VTK_TYPE_INT16_MIN = ...
VTK_TYPE_INT32 = ...
VTK_TYPE_INT32_MAX = ...
VTK_TYPE_INT32_MIN = ...
VTK_TYPE_INT64 = ...
VTK_TYPE_INT64_MAX = ...
VTK_TYPE_INT64_MIN = ...
VTK_TYPE_INT8 = ...
VTK_TYPE_INT8_MAX = ...
VTK_TYPE_INT8_MIN = ...
VTK_TYPE_LONG_LONG_FORMAT = ...
VTK_TYPE_UINT16 = ...
VTK_TYPE_UINT16_MAX = ...
VTK_TYPE_UINT16_MIN = ...
VTK_TYPE_UINT32 = ...
VTK_TYPE_UINT32_MAX = ...
VTK_TYPE_UINT32_MIN = ...
VTK_TYPE_UINT64 = ...
VTK_TYPE_UINT64_MAX = ...
VTK_TYPE_UINT64_MIN = ...
VTK_TYPE_UINT8 = ...
VTK_TYPE_UINT8_MAX = ...
VTK_TYPE_UINT8_MIN = ...
VTK_UNDIRECTED_GRAPH = ...
VTK_UNICODE_STRING = ...
VTK_UNIFORM_GRID = ...
VTK_UNIFORM_GRID_AMR = ...
VTK_UNIFORM_HYPER_TREE_GRID = ...
VTK_UNKNOWN_FONT = ...
VTK_UNSIGNED_CHAR = ...
VTK_UNSIGNED_CHAR_MAX = ...
VTK_UNSIGNED_CHAR_MIN = ...
VTK_UNSIGNED_INT = ...
VTK_UNSIGNED_INT_MAX = ...
VTK_UNSIGNED_INT_MIN = ...
VTK_UNSIGNED_LONG = ...
VTK_UNSIGNED_LONG_LONG = ...
VTK_UNSIGNED_LONG_LONG_MAX = ...
VTK_UNSIGNED_LONG_LONG_MIN = ...
VTK_UNSIGNED_LONG_MAX = ...
VTK_UNSIGNED_LONG_MIN = ...
VTK_UNSIGNED_SHORT = ...
VTK_UNSIGNED_SHORT_MAX = ...
VTK_UNSIGNED_SHORT_MIN = ...
VTK_UNSIGNED___INT64 = ...
VTK_UNSTRUCTURED_GRID = ...
VTK_UNSTRUCTURED_GRID_BASE = ...
VTK_USE_FLOAT32 = ...
VTK_USE_FLOAT64 = ...
VTK_USE_INT16 = ...
VTK_USE_INT32 = ...
VTK_USE_INT64 = ...
VTK_USE_INT8 = ...
VTK_USE_UINT16 = ...
VTK_USE_UINT32 = ...
VTK_USE_UINT64 = ...
VTK_USE_UINT8 = ...
VTK_VARIANT = ...
VTK_VERSION = ...
VTK_VERSION_NUMBER = ...
VTK_VOID = ...
VTK___INT64 = ...
def buffer_shared(*args, **kwargs):
    """ Check if two objects share the same buffer, meaning that they point to the same block of memory.  An TypeError exception will be raised if either of the objects does not provide a buffer. """
    ...

def vtkArrayIteratorTemplate(*args, **kwargs):
    """
    vtkArrayIteratorTemplate - Implementation template for a array
    iterator.
    
    Superclass: vtkArrayIterator
    
    This is implementation template for a array iterator. It only works
    with arrays that have a contiguous internal storage of values (as in
    vtkDataArray, vtkStringArray).
    
    
    Provided Types:
    
      vtkArrayIteratorTemplate[char] => vtkArrayIteratorTemplate<char>
      vtkArrayIteratorTemplate[int8] => vtkArrayIteratorTemplate<signed char>
      vtkArrayIteratorTemplate[uint8] => vtkArrayIteratorTemplate<unsigned char>
      vtkArrayIteratorTemplate[int16] => vtkArrayIteratorTemplate<short>
      vtkArrayIteratorTemplate[uint16] => vtkArrayIteratorTemplate<unsigned short>
      vtkArrayIteratorTemplate[int32] => vtkArrayIteratorTemplate<int>
      vtkArrayIteratorTemplate[uint32] => vtkArrayIteratorTemplate<unsigned int>
      vtkArrayIteratorTemplate[int] => vtkArrayIteratorTemplate<long>
      vtkArrayIteratorTemplate[uint] => vtkArrayIteratorTemplate<unsigned long>
      vtkArrayIteratorTemplate[int64] => vtkArrayIteratorTemplate<long long>
      vtkArrayIteratorTemplate[uint64] => vtkArrayIteratorTemplate<unsigned long long>
      vtkArrayIteratorTemplate[float32] => vtkArrayIteratorTemplate<float>
      vtkArrayIteratorTemplate[float64] => vtkArrayIteratorTemplate<double>
      vtkArrayIteratorTemplate[str] => vtkArrayIteratorTemplate<vtkStdString>
      vtkArrayIteratorTemplate[unicode] => vtkArrayIteratorTemplate<vtkUnicodeString>
      vtkArrayIteratorTemplate[vtkVariant] => vtkArrayIteratorTemplate<vtkVariant>
    """
    ...

def vtkDenseArray(*args, **kwargs):
    """
    vtkDenseArray - Contiguous storage for N-way arrays.
    
    Superclass: vtkTypedArray[T]
    
    vtkDenseArray is a concrete vtkArray implementation that stores
    values using a contiguous block of memory.  Values are stored with
    fortran ordering, meaning that if you iterated over the memory block,
    the left-most coordinates would vary the fastest.
    
    In addition to the retrieval and update methods provided by
    vtkTypedArray, vtkDenseArray provides methods to:
    
    Fill the entire array with a specific value.
    
    Retrieve a pointer to the storage memory block.
    
    @sa
    vtkArray, vtkTypedArray, vtkSparseArray
    
    @par Thanks: Developed by Timothy M. Shead (tshead@sandia.gov) at
    Sandia National Laboratories.
    
    
    Provided Types:
    
      vtkDenseArray[char] => vtkDenseArray<char>
      vtkDenseArray[int8] => vtkDenseArray<signed char>
      vtkDenseArray[uint8] => vtkDenseArray<unsigned char>
      vtkDenseArray[int16] => vtkDenseArray<short>
      vtkDenseArray[uint16] => vtkDenseArray<unsigned short>
      vtkDenseArray[int32] => vtkDenseArray<int>
      vtkDenseArray[uint32] => vtkDenseArray<unsigned int>
      vtkDenseArray[int] => vtkDenseArray<long>
      vtkDenseArray[uint] => vtkDenseArray<unsigned long>
      vtkDenseArray[int64] => vtkDenseArray<long long>
      vtkDenseArray[uint64] => vtkDenseArray<unsigned long long>
      vtkDenseArray[float32] => vtkDenseArray<float>
      vtkDenseArray[float64] => vtkDenseArray<double>
      vtkDenseArray[str] => vtkDenseArray<vtkStdString>
      vtkDenseArray[unicode] => vtkDenseArray<vtkUnicodeString>
      vtkDenseArray[vtkVariant] => vtkDenseArray<vtkVariant>
    """
    ...

def vtkGenericDataArray(*args, **kwargs):
    """
    vtkGenericDataArray - Base interface for all typed vtkDataArray
    subclasses.
    
    Superclass: vtkDataArray
    
    A more detailed description of this class and related tools can be
    found\ref VTK-7-1-ArrayDispatch "here".
    
    The vtkGenericDataArray class provides a generic implementation of
    the vtkDataArray API. It relies on subclasses providing access to
    data via 8 "concept methods", which should be implemented as
    non-virtual methods of the subclass. These methods are:
    
    - ValueType GetValue(vtkIdType valueIdx) const
    - [public] void SetValue(vtkIdType valueIdx, ValueType value)
    - [public] void GetTypedTuple(vtkIdType tupleIdx, ValueType* tuple)
      const
    - [public] void SetTypedTuple(vtkIdType tupleIdx, const ValueType*
      tuple)
    - [public] ValueType GetTypedComponent(vtkIdType tupleIdx, int
      compIdx) const
    - [public] void SetTypedComponent(vtkIdType tupleIdx, int compIdx,
      ValueType value)
    - [protected] bool AllocateTuples(vtkIdType numTuples)
    - [protected] bool ReallocateTuples(vtkIdType numTuples)
    
    Note that these methods use the CRTP idiom, which provides static
    binding to avoid virtual calls. This allows the compiler to optimize
    away layers of indirection when these methods are used. Well-designed
    implementations of these methods will reduce to raw memory accesses,
    providing efficient performance comparable to working with the
    pointer data.
    
    See vtkAOSDataArrayTemplate and vtkSOADataArrayTemplate for example
    implementations.
    
    In practice, code should not be written to use vtkGenericDataArray
    objects. Doing so is rather unweildy due to the CRTP pattern
    requiring the derived class be provided as a template argument.
    Instead, the vtkArrayDispatch framework can be used to detect a
    vtkDataArray's implementation type and instantiate appropriate
    templated worker code.
    
    vtkArrayDispatch is also intended to replace code that currently
    relies on the encapsulation-breaking GetVoidPointer method. Not all
    subclasses of vtkDataArray use the memory layout assumed by
    GetVoidPointer; calling this method on, e.g. a
    vtkSOADataArrayTemplate will trigger a deep copy of the array data
    into an AOS buffer. This is very inefficient and should be avoided.
    
    @sa
    vtkArrayDispatcher vtkDataArrayRange
    
    
    Provided Types:
    
      vtkGenericDataArray[vtkSOADataArrayTemplate[char],char] => vtkGenericDataArray<vtkSOADataArrayTemplate<char>, char>
      vtkGenericDataArray[vtkSOADataArrayTemplate[int8],int8] => vtkGenericDataArray<vtkSOADataArrayTemplate<signed char>, signed char>
      vtkGenericDataArray[vtkSOADataArrayTemplate[uint8],uint8] => vtkGenericDataArray<vtkSOADataArrayTemplate<unsigned char>, unsigned char>
      vtkGenericDataArray[vtkSOADataArrayTemplate[int16],int16] => vtkGenericDataArray<vtkSOADataArrayTemplate<short>, short>
      vtkGenericDataArray[vtkSOADataArrayTemplate[uint16],uint16] => vtkGenericDataArray<vtkSOADataArrayTemplate<unsigned short>, unsigned short>
      vtkGenericDataArray[vtkSOADataArrayTemplate[int32],int32] => vtkGenericDataArray<vtkSOADataArrayTemplate<int>, int>
      vtkGenericDataArray[vtkSOADataArrayTemplate[uint32],uint32] => vtkGenericDataArray<vtkSOADataArrayTemplate<unsigned int>, unsigned int>
      vtkGenericDataArray[vtkSOADataArrayTemplate[int],int] => vtkGenericDataArray<vtkSOADataArrayTemplate<long>, long>
      vtkGenericDataArray[vtkSOADataArrayTemplate[uint],uint] => vtkGenericDataArray<vtkSOADataArrayTemplate<unsigned long>, unsigned long>
      vtkGenericDataArray[vtkSOADataArrayTemplate[int64],int64] => vtkGenericDataArray<vtkSOADataArrayTemplate<long long>, long long>
      vtkGenericDataArray[vtkSOADataArrayTemplate[uint64],uint64] => vtkGenericDataArray<vtkSOADataArrayTemplate<unsigned long long>, unsigned long long>
      vtkGenericDataArray[vtkSOADataArrayTemplate[float32],float32] => vtkGenericDataArray<vtkSOADataArrayTemplate<float>, float>
      vtkGenericDataArray[vtkSOADataArrayTemplate[float64],float64] => vtkGenericDataArray<vtkSOADataArrayTemplate<double>, double>
    """
    ...

def vtkSOADataArrayTemplate(*args, **kwargs):
    """
    vtkSOADataArrayTemplate - Struct-Of-Arrays implementation of
    vtkGenericDataArray.
    
    Superclass: vtkGenericDataArray[vtkSOADataArrayTemplate[ValueTypeT],ValueTypeT]
    
    vtkSOADataArrayTemplate is the counterpart of
    vtkAOSDataArrayTemplate. Each component is stored in a separate
    array.
    
    @sa
    vtkGenericDataArray vtkAOSDataArrayTemplate
    
    
    Provided Types:
    
      vtkSOADataArrayTemplate[char] => vtkSOADataArrayTemplate<char>
      vtkSOADataArrayTemplate[int8] => vtkSOADataArrayTemplate<signed char>
      vtkSOADataArrayTemplate[uint8] => vtkSOADataArrayTemplate<unsigned char>
      vtkSOADataArrayTemplate[int16] => vtkSOADataArrayTemplate<short>
      vtkSOADataArrayTemplate[uint16] => vtkSOADataArrayTemplate<unsigned short>
      vtkSOADataArrayTemplate[int32] => vtkSOADataArrayTemplate<int>
      vtkSOADataArrayTemplate[uint32] => vtkSOADataArrayTemplate<unsigned int>
      vtkSOADataArrayTemplate[int] => vtkSOADataArrayTemplate<long>
      vtkSOADataArrayTemplate[uint] => vtkSOADataArrayTemplate<unsigned long>
      vtkSOADataArrayTemplate[int64] => vtkSOADataArrayTemplate<long long>
      vtkSOADataArrayTemplate[uint64] => vtkSOADataArrayTemplate<unsigned long long>
      vtkSOADataArrayTemplate[float32] => vtkSOADataArrayTemplate<float>
      vtkSOADataArrayTemplate[float64] => vtkSOADataArrayTemplate<double>
    """
    ...

def vtkSparseArray(*args, **kwargs):
    """
    vtkSparseArray - Sparse, independent coordinate storage for N-way
    arrays.
    
    Superclass: vtkTypedArray[T]
    
    vtkSparseArray is a concrete vtkArray implementation that stores
    values using sparse independent coordinate storage.  This means that
    the array stores the complete set of coordinates and the value for
    each non-null value in the array. While this approach requires
    slightly more storage than other sparse storage schemes (such as
    Compressed-Row or Compressed-Column), it is easier and more efficient
    to work with when implementing algorithms, and it generalizes well
    for arbitrary numbers of dimensions.
    
    In addition to the value retrieval and update methods provided by
    vtkTypedArray, vtkSparseArray provides methods to:
    
    Get and set a special 'null' value that will be returned when
    retrieving values for undefined coordinates.
    
    Clear the contents of the array so that every set of coordinates is
    undefined.
    
    Sort the array contents so that value coordinates can be visited in a
    specific order.
    
    Retrieve pointers to the value- and coordinate-storage memory blocks.
    
    Reserve storage for a specific number of non-null values, for
    efficiency when the number of non-null values is known in advance.
    
    Recompute the array extents so that they bound the largest set of
    non-nullptr values along each dimension.
    
    Specify arbitrary array extents.
    
    Add values to the array in amortized-constant time.
    
    Validate that the array does not contain duplicate coordinates.
    
    @sa
    vtkArray, vtkTypedArray, vtkDenseArray
    
    @par Thanks: Developed by Timothy M. Shead (tshead@sandia.gov) at
    Sandia National Laboratories.
    
    
    Provided Types:
    
      vtkSparseArray[char] => vtkSparseArray<char>
      vtkSparseArray[int8] => vtkSparseArray<signed char>
      vtkSparseArray[uint8] => vtkSparseArray<unsigned char>
      vtkSparseArray[int16] => vtkSparseArray<short>
      vtkSparseArray[uint16] => vtkSparseArray<unsigned short>
      vtkSparseArray[int32] => vtkSparseArray<int>
      vtkSparseArray[uint32] => vtkSparseArray<unsigned int>
      vtkSparseArray[int] => vtkSparseArray<long>
      vtkSparseArray[uint] => vtkSparseArray<unsigned long>
      vtkSparseArray[int64] => vtkSparseArray<long long>
      vtkSparseArray[uint64] => vtkSparseArray<unsigned long long>
      vtkSparseArray[float32] => vtkSparseArray<float>
      vtkSparseArray[float64] => vtkSparseArray<double>
      vtkSparseArray[str] => vtkSparseArray<vtkStdString>
      vtkSparseArray[unicode] => vtkSparseArray<vtkUnicodeString>
      vtkSparseArray[vtkVariant] => vtkSparseArray<vtkVariant>
    """
    ...

def vtkTypedArray(*args, **kwargs):
    """
    vtkTypedArray - Provides a type-specific interface to N-way arrays
    
    Superclass: vtkArray
    
    vtkTypedArray provides an interface for retrieving and updating data
    in an arbitrary-dimension array.  It derives from vtkArray and is
    templated on the type of value stored in the array.
    
    Methods are provided for retrieving and updating array values based
    either on their array coordinates, or on a 1-dimensional integer
    index.  The latter approach can be used to iterate over the values in
    an array in arbitrary order, which is useful when writing filters
    that operate efficiently on sparse arrays and arrays that can have
    any number of dimensions.
    
    Special overloaded methods provide simple access for arrays with one,
    two, or three dimensions.
    
    @sa
    vtkArray, vtkDenseArray, vtkSparseArray
    
    @par Thanks: Developed by Timothy M. Shead (tshead@sandia.gov) at
    Sandia National Laboratories.
    
    
    Provided Types:
    
      vtkTypedArray[char] => vtkTypedArray<char>
      vtkTypedArray[int8] => vtkTypedArray<signed char>
      vtkTypedArray[uint8] => vtkTypedArray<unsigned char>
      vtkTypedArray[int16] => vtkTypedArray<short>
      vtkTypedArray[uint16] => vtkTypedArray<unsigned short>
      vtkTypedArray[int32] => vtkTypedArray<int>
      vtkTypedArray[uint32] => vtkTypedArray<unsigned int>
      vtkTypedArray[int] => vtkTypedArray<long>
      vtkTypedArray[uint] => vtkTypedArray<unsigned long>
      vtkTypedArray[int64] => vtkTypedArray<long long>
      vtkTypedArray[uint64] => vtkTypedArray<unsigned long long>
      vtkTypedArray[float32] => vtkTypedArray<float>
      vtkTypedArray[float64] => vtkTypedArray<double>
      vtkTypedArray[str] => vtkTypedArray<vtkStdString>
      vtkTypedArray[unicode] => vtkTypedArray<vtkUnicodeString>
      vtkTypedArray[vtkVariant] => vtkTypedArray<vtkVariant>
    """
    ...

__loader__ = ...
__spec__ = ...
