"""
This type stub file was generated by pyright.
"""

from .vtkObject import vtkObject

class vtkArchiver(vtkObject):
    """
    vtkArchiver - Writes an archive
    
    Superclass: vtkObject
    
    vtkArchiver is a base class for constructing an archive. The default
    implementation constructs a directory at the location of the
    ArchiveName and populates it with files and directories as requested
    by Insert(). Classes that derive from vtkArchiver can customize the
    output using such features as compression, in-memory serialization
    and third-party archival tools.
    """
    def CloseArchive(self):
        """
        V.CloseArchive()
        C++: virtual void CloseArchive()
        
        Close the arhive.
        """
        ...
    
    def Contains(self, string):
        """
        V.Contains(string) -> bool
        C++: virtual bool Contains(const std::string &relativePath)
        
        Checks if relativePath represents an entry in the archive.
        """
        ...
    
    def GetArchiveName(self):
        """
        V.GetArchiveName() -> string
        C++: virtual char *GetArchiveName()
        
        Specify the name of the archive to generate.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def InsertIntoArchive(self, string, string_1, p_int):
        """
        V.InsertIntoArchive(string, string, int)
        C++: virtual void InsertIntoArchive(
            const std::string &relativePath, const char *data,
            std::size_t size)
        
        Insert data of size size into the archive at relativePath.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkArchiver
        C++: vtkArchiver *NewInstance()
        """
        ...
    
    def OpenArchive(self):
        """
        V.OpenArchive()
        C++: virtual void OpenArchive()
        
        Open the arhive for writing.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkArchiver
        C++: static vtkArchiver *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetArchiveName(self, string):
        """
        V.SetArchiveName(string)
        C++: virtual void SetArchiveName(const char *_arg)
        
        Specify the name of the archive to generate.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


