"""
This type stub file was generated by pyright.
"""

from .object import object

class reference(object):
    """
    A simple container that acts as a reference to its contents.
    
    This wrapper class is needed when a VTK method returns a value
    in an argument that has been passed by reference.  By calling
    "m = vtk.reference(a)" on a value, you can create a proxy to
    that value.  The value can be changed by calling "m.set(b)".
    """
    def get(self, *args, **kwargs):
        """ Get the stored value. """
        ...
    
    def set(self, *args, **kwargs):
        """ Set the stored value. """
        ...
    
    def __eq__(self, *args, **kwargs) -> bool:
        """ Return self==value. """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __ge__(self, *args, **kwargs) -> bool:
        """ Return self>=value. """
        ...
    
    def __gt__(self, *args, **kwargs) -> bool:
        """ Return self>value. """
        ...
    
    def __init__(self, a) -> None:
        ...
    
    def __le__(self, *args, **kwargs) -> bool:
        """ Return self<=value. """
        ...
    
    def __lt__(self, *args, **kwargs) -> bool:
        """ Return self<value. """
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __ne__(self, *args, **kwargs) -> bool:
        """ Return self!=value. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __round__(self, *args, **kwargs):
        """ Returns the Integral closest to x, rounding half toward even. """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    def __trunc__(self, *args, **kwargs):
        """ Returns the Integral closest to x between 0 and x. """
        ...
    
    __hash__ = ...


