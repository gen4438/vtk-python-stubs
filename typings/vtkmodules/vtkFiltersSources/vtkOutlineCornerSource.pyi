"""
This type stub file was generated by pyright.
"""

from .vtkOutlineSource import vtkOutlineSource

class vtkOutlineCornerSource(vtkOutlineSource):
    """
    vtkOutlineCornerSource - create wireframe outline corners around
    bounding box
    
    Superclass: vtkOutlineSource
    
    vtkOutlineCornerSource creates wireframe outline corners around a
    user-specified bounding box.
    """
    def GetCornerFactor(self):
        """
        V.GetCornerFactor() -> float
        C++: virtual double GetCornerFactor()
        
        Set/Get the factor that controls the relative size of the corners
        to the length of the corresponding bounds
        """
        ...
    
    def GetCornerFactorMaxValue(self):
        """
        V.GetCornerFactorMaxValue() -> float
        C++: virtual double GetCornerFactorMaxValue()
        
        Set/Get the factor that controls the relative size of the corners
        to the length of the corresponding bounds
        """
        ...
    
    def GetCornerFactorMinValue(self):
        """
        V.GetCornerFactorMinValue() -> float
        C++: virtual double GetCornerFactorMinValue()
        
        Set/Get the factor that controls the relative size of the corners
        to the length of the corresponding bounds
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Standard methods for instantiation. type information, and
        printing.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Standard methods for instantiation. type information, and
        printing.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Standard methods for instantiation. type information, and
        printing.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Standard methods for instantiation. type information, and
        printing.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkOutlineCornerSource
        C++: vtkOutlineCornerSource *NewInstance()
        
        Standard methods for instantiation. type information, and
        printing.
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkOutlineCornerSource
        C++: static vtkOutlineCornerSource *SafeDownCast(vtkObjectBase *o)
        
        Standard methods for instantiation. type information, and
        printing.
        """
        ...
    
    def SetCornerFactor(self, p_float):
        """
        V.SetCornerFactor(float)
        C++: virtual void SetCornerFactor(double _arg)
        
        Set/Get the factor that controls the relative size of the corners
        to the length of the corresponding bounds
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


