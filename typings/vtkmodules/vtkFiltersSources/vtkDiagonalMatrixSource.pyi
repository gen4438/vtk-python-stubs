"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkCommonExecutionModel as __vtkmodules_vtkCommonExecutionModel

class vtkDiagonalMatrixSource(__vtkmodules_vtkCommonExecutionModel.vtkArrayDataAlgorithm):
    """
    vtkDiagonalMatrixSource - generates a sparse or dense square matrix
    with user-specified values for the diagonal, superdiagonal, and
    subdiagonal.
    
    Superclass: vtkArrayDataAlgorithm
    
    @par Thanks: Developed by Timothy M. Shead (tshead@sandia.gov) at
    Sandia National Laboratories.
    """
    def GetArrayType(self):
        """
        V.GetArrayType() -> int
        C++: virtual int GetArrayType()
        """
        ...
    
    def GetColumnLabel(self):
        """
        V.GetColumnLabel() -> string
        C++: virtual char *GetColumnLabel()
        
        Controls the output matrix column dimension label. Default:
        "columns"
        """
        ...
    
    def GetDiagonal(self):
        """
        V.GetDiagonal() -> float
        C++: virtual double GetDiagonal()
        
        Stores the value that will be assigned to diagonal elements
        (default: 1)
        """
        ...
    
    def GetExtents(self):
        """
        V.GetExtents() -> int
        C++: virtual vtkIdType GetExtents()
        
        Stores the extents of the output matrix (which is square)
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetRowLabel(self):
        """
        V.GetRowLabel() -> string
        C++: virtual char *GetRowLabel()
        
        Controls the output matrix row dimension label. Default: "rows"
        """
        ...
    
    def GetSubDiagonal(self):
        """
        V.GetSubDiagonal() -> float
        C++: virtual double GetSubDiagonal()
        
        Stores the value that will be assigned to subdiagonal elements
        (default: 0)
        """
        ...
    
    def GetSuperDiagonal(self):
        """
        V.GetSuperDiagonal() -> float
        C++: virtual double GetSuperDiagonal()
        
        Stores the value that will be assigned to superdiagonal elements
        (default: 0)
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkDiagonalMatrixSource
        C++: vtkDiagonalMatrixSource *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkDiagonalMatrixSource
        C++: static vtkDiagonalMatrixSource *SafeDownCast(
            vtkObjectBase *o)
        """
        ...
    
    def SetArrayType(self, p_int):
        """
        V.SetArrayType(int)
        C++: virtual void SetArrayType(int _arg)
        """
        ...
    
    def SetColumnLabel(self, string):
        """
        V.SetColumnLabel(string)
        C++: virtual void SetColumnLabel(const char *_arg)
        
        Controls the output matrix column dimension label. Default:
        "columns"
        """
        ...
    
    def SetDiagonal(self, p_float):
        """
        V.SetDiagonal(float)
        C++: virtual void SetDiagonal(double _arg)
        
        Stores the value that will be assigned to diagonal elements
        (default: 1)
        """
        ...
    
    def SetExtents(self, p_int):
        """
        V.SetExtents(int)
        C++: virtual void SetExtents(vtkIdType _arg)
        
        Stores the extents of the output matrix (which is square)
        """
        ...
    
    def SetRowLabel(self, string):
        """
        V.SetRowLabel(string)
        C++: virtual void SetRowLabel(const char *_arg)
        
        Controls the output matrix row dimension label. Default: "rows"
        """
        ...
    
    def SetSubDiagonal(self, p_float):
        """
        V.SetSubDiagonal(float)
        C++: virtual void SetSubDiagonal(double _arg)
        
        Stores the value that will be assigned to subdiagonal elements
        (default: 0)
        """
        ...
    
    def SetSuperDiagonal(self, p_float):
        """
        V.SetSuperDiagonal(float)
        C++: virtual void SetSuperDiagonal(double _arg)
        
        Stores the value that will be assigned to superdiagonal elements
        (default: 0)
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    DENSE = ...
    SPARSE = ...
    StorageType = ...
    __dict__ = ...
    __vtkname__ = ...


