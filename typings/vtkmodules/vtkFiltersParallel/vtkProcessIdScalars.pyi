"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkCommonExecutionModel as __vtkmodules_vtkCommonExecutionModel

class vtkProcessIdScalars(__vtkmodules_vtkCommonExecutionModel.vtkDataSetAlgorithm):
    """
    vtkProcessIdScalars - Sets cell or point scalars to the processor
    rank.
    
    Superclass: vtkDataSetAlgorithm
    
    vtkProcessIdScalars is meant to display which processor owns which
    cells and points.  It is useful for visualizing the partitioning for
    streaming or distributed pipelines.
    
    @sa
    vtkPolyDataStreamer
    """
    def GetController(self):
        """
        V.GetController() -> vtkMultiProcessController
        C++: virtual vtkMultiProcessController *GetController()
        
        By default this filter uses the global controller, but this
        method can be used to set another instead.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetRandomMode(self):
        """
        V.GetRandomMode() -> int
        C++: virtual vtkTypeBool GetRandomMode()
        """
        ...
    
    def GetScalarMode(self):
        """
        V.GetScalarMode() -> int
        C++: int GetScalarMode()
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkProcessIdScalars
        C++: vtkProcessIdScalars *NewInstance()
        """
        ...
    
    def RandomModeOff(self):
        """
        V.RandomModeOff()
        C++: virtual void RandomModeOff()
        """
        ...
    
    def RandomModeOn(self):
        """
        V.RandomModeOn()
        C++: virtual void RandomModeOn()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkProcessIdScalars
        C++: static vtkProcessIdScalars *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetController(self, vtkMultiProcessController):
        """
        V.SetController(vtkMultiProcessController)
        C++: virtual void SetController(vtkMultiProcessController *)
        
        By default this filter uses the global controller, but this
        method can be used to set another instead.
        """
        ...
    
    def SetRandomMode(self, p_int):
        """
        V.SetRandomMode(int)
        C++: virtual void SetRandomMode(vtkTypeBool _arg)
        """
        ...
    
    def SetScalarModeToCellData(self):
        """
        V.SetScalarModeToCellData()
        C++: void SetScalarModeToCellData()
        
        Option to centerate cell scalars of points scalars.  Default is
        point scalars.
        """
        ...
    
    def SetScalarModeToPointData(self):
        """
        V.SetScalarModeToPointData()
        C++: void SetScalarModeToPointData()
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    __dict__ = ...
    __vtkname__ = ...


