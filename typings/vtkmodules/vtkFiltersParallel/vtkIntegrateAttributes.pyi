"""
This type stub file was generated by pyright.
"""

import vtkmodules.vtkCommonExecutionModel as __vtkmodules_vtkCommonExecutionModel

class vtkIntegrateAttributes(__vtkmodules_vtkCommonExecutionModel.vtkUnstructuredGridAlgorithm):
    """
    vtkIntegrateAttributes - Integrates lines, surfaces and volume.
    
    Superclass: vtkUnstructuredGridAlgorithm
    
    Integrates all point and cell data attributes while computing length,
    area or volume.  Works for 1D, 2D or 3D.  Only one dimensionality at
    a time.  For volume, this filter ignores all but 3D cells.  It will
    not compute the volume contained in a closed surface. The output of
    this filter is a single point and vertex.  The attributes for this
    point and cell will contain the integration results for the
    corresponding input attributes.
    """
    def GetController(self):
        """
        V.GetController() -> vtkMultiProcessController
        C++: virtual vtkMultiProcessController *GetController()
        
        Get/Set the parallel controller to use. By default, set to.
        `vtkMultiProcessController::GlobalController`.
        """
        ...
    
    def GetDivideAllCellDataByVolume(self):
        """
        V.GetDivideAllCellDataByVolume() -> bool
        C++: virtual bool GetDivideAllCellDataByVolume()
        
        If set to true then the filter will divide all output cell data
        arrays (the integrated values) by the computed volume/area of the
        dataset.  Defaults to false.
        """
        ...
    
    def GetNumberOfGenerationsFromBase(self, string):
        """
        V.GetNumberOfGenerationsFromBase(string) -> int
        C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
            override;
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def GetNumberOfGenerationsFromBaseType(self, string):
        """
        V.GetNumberOfGenerationsFromBaseType(string) -> int
        C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
            const char *type)
        
        Given a the name of a base class of this class type, return the
        distance of inheritance between this class type and the named
        class (how many generations of inheritance are there between this
        class and the named class). If the named class is not in this
        class's inheritance tree, return a negative value. Valid
        responses will always be nonnegative. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsA(self, string):
        """
        V.IsA(string) -> int
        C++: vtkTypeBool IsA(const char *type) override;
        
        Return 1 if this class is the same type of (or a subclass of) the
        named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def IsTypeOf(self, string):
        """
        V.IsTypeOf(string) -> int
        C++: static vtkTypeBool IsTypeOf(const char *type)
        
        Return 1 if this class type is the same type of (or a subclass
        of) the named class. Returns 0 otherwise. This method works in
        combination with vtkTypeMacro found in vtkSetGet.h.
        """
        ...
    
    def NewInstance(self):
        """
        V.NewInstance() -> vtkIntegrateAttributes
        C++: vtkIntegrateAttributes *NewInstance()
        """
        ...
    
    def SafeDownCast(self, vtkObjectBase):
        """
        V.SafeDownCast(vtkObjectBase) -> vtkIntegrateAttributes
        C++: static vtkIntegrateAttributes *SafeDownCast(vtkObjectBase *o)
        """
        ...
    
    def SetController(self, vtkMultiProcessController):
        """
        V.SetController(vtkMultiProcessController)
        C++: void SetController(vtkMultiProcessController *controller)
        
        Get/Set the parallel controller to use. By default, set to.
        `vtkMultiProcessController::GlobalController`.
        """
        ...
    
    def SetDivideAllCellDataByVolume(self, bool):
        """
        V.SetDivideAllCellDataByVolume(bool)
        C++: virtual void SetDivideAllCellDataByVolume(bool _arg)
        
        If set to true then the filter will divide all output cell data
        arrays (the integrated values) by the computed volume/area of the
        dataset.  Defaults to false.
        """
        ...
    
    def __delattr__(self, *args, **kwargs):
        """ Implement delattr(self, name). """
        ...
    
    def __getattribute__(self, *args, **kwargs):
        """ Return getattr(self, name). """
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @staticmethod
    def __new__(*args, **kwargs):
        """ Create and return a new object.  See help(type) for accurate signature. """
        ...
    
    def __repr__(self, *args, **kwargs):
        """ Return repr(self). """
        ...
    
    def __setattr__(self, *args, **kwargs):
        """ Implement setattr(self, name, value). """
        ...
    
    def __str__(self, *args, **kwargs) -> str:
        """ Return str(self). """
        ...
    
    __this__ = ...
    CommunicationIds = ...
    IntegrateAttrData = ...
    IntegrateAttrInfo = ...
    __dict__ = ...
    __vtkname__ = ...


